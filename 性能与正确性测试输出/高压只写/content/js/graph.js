/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1853.0, "minX": 0.0, "maxY": 8159.0, "series": [{"data": [[0.0, 2076.0], [0.1, 2172.0], [0.2, 2215.0], [0.3, 2248.0], [0.4, 2284.0], [0.5, 2325.0], [0.6, 2341.0], [0.7, 2351.0], [0.8, 2367.0], [0.9, 2382.0], [1.0, 2423.0], [1.1, 2431.0], [1.2, 2449.0], [1.3, 2483.0], [1.4, 2498.0], [1.5, 2509.0], [1.6, 2527.0], [1.7, 2549.0], [1.8, 2590.0], [1.9, 2599.0], [2.0, 2622.0], [2.1, 2632.0], [2.2, 2640.0], [2.3, 2647.0], [2.4, 2652.0], [2.5, 2658.0], [2.6, 2672.0], [2.7, 2689.0], [2.8, 2721.0], [2.9, 2745.0], [3.0, 2759.0], [3.1, 2780.0], [3.2, 2792.0], [3.3, 2792.0], [3.4, 2813.0], [3.5, 2823.0], [3.6, 2832.0], [3.7, 2848.0], [3.8, 2856.0], [3.9, 2883.0], [4.0, 2897.0], [4.1, 2928.0], [4.2, 2941.0], [4.3, 2967.0], [4.4, 3004.0], [4.5, 3011.0], [4.6, 3031.0], [4.7, 3039.0], [4.8, 3056.0], [4.9, 3095.0], [5.0, 3106.0], [5.1, 3113.0], [5.2, 3149.0], [5.3, 3163.0], [5.4, 3178.0], [5.5, 3181.0], [5.6, 3190.0], [5.7, 3200.0], [5.8, 3219.0], [5.9, 3243.0], [6.0, 3277.0], [6.1, 3297.0], [6.2, 3321.0], [6.3, 3342.0], [6.4, 3365.0], [6.5, 3393.0], [6.6, 3401.0], [6.7, 3412.0], [6.8, 3448.0], [6.9, 3463.0], [7.0, 3473.0], [7.1, 3485.0], [7.2, 3520.0], [7.3, 3525.0], [7.4, 3530.0], [7.5, 3544.0], [7.6, 3555.0], [7.7, 3574.0], [7.8, 3592.0], [7.9, 3607.0], [8.0, 3618.0], [8.1, 3652.0], [8.2, 3667.0], [8.3, 3697.0], [8.4, 3722.0], [8.5, 3727.0], [8.6, 3733.0], [8.7, 3746.0], [8.8, 3775.0], [8.9, 3791.0], [9.0, 3809.0], [9.1, 3827.0], [9.2, 3849.0], [9.3, 3870.0], [9.4, 3901.0], [9.5, 3917.0], [9.6, 3927.0], [9.7, 3954.0], [9.8, 3976.0], [9.9, 4000.0], [10.0, 4008.0], [10.1, 4025.0], [10.2, 4039.0], [10.3, 4061.0], [10.4, 4075.0], [10.5, 4085.0], [10.6, 4100.0], [10.7, 4110.0], [10.8, 4132.0], [10.9, 4140.0], [11.0, 4155.0], [11.1, 4160.0], [11.2, 4162.0], [11.3, 4171.0], [11.4, 4178.0], [11.5, 4180.0], [11.6, 4184.0], [11.7, 4188.0], [11.8, 4194.0], [11.9, 4201.0], [12.0, 4215.0], [12.1, 4218.0], [12.2, 4219.0], [12.3, 4234.0], [12.4, 4238.0], [12.5, 4240.0], [12.6, 4245.0], [12.7, 4259.0], [12.8, 4263.0], [12.9, 4279.0], [13.0, 4300.0], [13.1, 4313.0], [13.2, 4326.0], [13.3, 4349.0], [13.4, 4368.0], [13.5, 4378.0], [13.6, 4386.0], [13.7, 4410.0], [13.8, 4414.0], [13.9, 4419.0], [14.0, 4439.0], [14.1, 4449.0], [14.2, 4452.0], [14.3, 4465.0], [14.4, 4481.0], [14.5, 4505.0], [14.6, 4520.0], [14.7, 4528.0], [14.8, 4530.0], [14.9, 4537.0], [15.0, 4542.0], [15.1, 4558.0], [15.2, 4564.0], [15.3, 4570.0], [15.4, 4579.0], [15.5, 4592.0], [15.6, 4595.0], [15.7, 4603.0], [15.8, 4611.0], [15.9, 4617.0], [16.0, 4620.0], [16.1, 4621.0], [16.2, 4623.0], [16.3, 4627.0], [16.4, 4631.0], [16.5, 4632.0], [16.6, 4636.0], [16.7, 4641.0], [16.8, 4646.0], [16.9, 4653.0], [17.0, 4655.0], [17.1, 4658.0], [17.2, 4659.0], [17.3, 4661.0], [17.4, 4662.0], [17.5, 4664.0], [17.6, 4665.0], [17.7, 4668.0], [17.8, 4670.0], [17.9, 4673.0], [18.0, 4678.0], [18.1, 4679.0], [18.2, 4681.0], [18.3, 4682.0], [18.4, 4684.0], [18.5, 4685.0], [18.6, 4687.0], [18.7, 4691.0], [18.8, 4693.0], [18.9, 4694.0], [19.0, 4695.0], [19.1, 4695.0], [19.2, 4697.0], [19.3, 4701.0], [19.4, 4702.0], [19.5, 4705.0], [19.6, 4707.0], [19.7, 4709.0], [19.8, 4711.0], [19.9, 4712.0], [20.0, 4713.0], [20.1, 4715.0], [20.2, 4717.0], [20.3, 4719.0], [20.4, 4724.0], [20.5, 4725.0], [20.6, 4727.0], [20.7, 4729.0], [20.8, 4730.0], [20.9, 4731.0], [21.0, 4732.0], [21.1, 4733.0], [21.2, 4735.0], [21.3, 4736.0], [21.4, 4737.0], [21.5, 4738.0], [21.6, 4739.0], [21.7, 4741.0], [21.8, 4741.0], [21.9, 4742.0], [22.0, 4743.0], [22.1, 4744.0], [22.2, 4744.0], [22.3, 4746.0], [22.4, 4747.0], [22.5, 4747.0], [22.6, 4749.0], [22.7, 4749.0], [22.8, 4750.0], [22.9, 4752.0], [23.0, 4752.0], [23.1, 4753.0], [23.2, 4754.0], [23.3, 4754.0], [23.4, 4755.0], [23.5, 4756.0], [23.6, 4757.0], [23.7, 4759.0], [23.8, 4761.0], [23.9, 4762.0], [24.0, 4763.0], [24.1, 4763.0], [24.2, 4765.0], [24.3, 4765.0], [24.4, 4766.0], [24.5, 4767.0], [24.6, 4768.0], [24.7, 4769.0], [24.8, 4770.0], [24.9, 4770.0], [25.0, 4773.0], [25.1, 4774.0], [25.2, 4775.0], [25.3, 4775.0], [25.4, 4776.0], [25.5, 4777.0], [25.6, 4779.0], [25.7, 4779.0], [25.8, 4780.0], [25.9, 4781.0], [26.0, 4782.0], [26.1, 4783.0], [26.2, 4784.0], [26.3, 4785.0], [26.4, 4785.0], [26.5, 4786.0], [26.6, 4787.0], [26.7, 4788.0], [26.8, 4789.0], [26.9, 4789.0], [27.0, 4790.0], [27.1, 4790.0], [27.2, 4791.0], [27.3, 4793.0], [27.4, 4793.0], [27.5, 4794.0], [27.6, 4796.0], [27.7, 4798.0], [27.8, 4799.0], [27.9, 4799.0], [28.0, 4801.0], [28.1, 4802.0], [28.2, 4803.0], [28.3, 4804.0], [28.4, 4804.0], [28.5, 4805.0], [28.6, 4807.0], [28.7, 4809.0], [28.8, 4809.0], [28.9, 4810.0], [29.0, 4810.0], [29.1, 4811.0], [29.2, 4812.0], [29.3, 4813.0], [29.4, 4813.0], [29.5, 4814.0], [29.6, 4815.0], [29.7, 4817.0], [29.8, 4818.0], [29.9, 4818.0], [30.0, 4819.0], [30.1, 4821.0], [30.2, 4822.0], [30.3, 4825.0], [30.4, 4826.0], [30.5, 4828.0], [30.6, 4829.0], [30.7, 4830.0], [30.8, 4830.0], [30.9, 4831.0], [31.0, 4833.0], [31.1, 4834.0], [31.2, 4835.0], [31.3, 4837.0], [31.4, 4839.0], [31.5, 4840.0], [31.6, 4841.0], [31.7, 4842.0], [31.8, 4844.0], [31.9, 4845.0], [32.0, 4846.0], [32.1, 4848.0], [32.2, 4850.0], [32.3, 4851.0], [32.4, 4851.0], [32.5, 4853.0], [32.6, 4857.0], [32.7, 4858.0], [32.8, 4859.0], [32.9, 4863.0], [33.0, 4864.0], [33.1, 4865.0], [33.2, 4866.0], [33.3, 4867.0], [33.4, 4868.0], [33.5, 4869.0], [33.6, 4870.0], [33.7, 4871.0], [33.8, 4874.0], [33.9, 4876.0], [34.0, 4877.0], [34.1, 4877.0], [34.2, 4878.0], [34.3, 4879.0], [34.4, 4880.0], [34.5, 4882.0], [34.6, 4882.0], [34.7, 4883.0], [34.8, 4884.0], [34.9, 4884.0], [35.0, 4886.0], [35.1, 4888.0], [35.2, 4889.0], [35.3, 4890.0], [35.4, 4891.0], [35.5, 4891.0], [35.6, 4892.0], [35.7, 4894.0], [35.8, 4895.0], [35.9, 4896.0], [36.0, 4897.0], [36.1, 4899.0], [36.2, 4900.0], [36.3, 4901.0], [36.4, 4902.0], [36.5, 4903.0], [36.6, 4905.0], [36.7, 4905.0], [36.8, 4906.0], [36.9, 4907.0], [37.0, 4909.0], [37.1, 4910.0], [37.2, 4912.0], [37.3, 4913.0], [37.4, 4914.0], [37.5, 4916.0], [37.6, 4918.0], [37.7, 4919.0], [37.8, 4922.0], [37.9, 4923.0], [38.0, 4924.0], [38.1, 4925.0], [38.2, 4930.0], [38.3, 4932.0], [38.4, 4932.0], [38.5, 4934.0], [38.6, 4934.0], [38.7, 4935.0], [38.8, 4936.0], [38.9, 4937.0], [39.0, 4939.0], [39.1, 4940.0], [39.2, 4940.0], [39.3, 4942.0], [39.4, 4943.0], [39.5, 4944.0], [39.6, 4945.0], [39.7, 4947.0], [39.8, 4950.0], [39.9, 4951.0], [40.0, 4953.0], [40.1, 4954.0], [40.2, 4954.0], [40.3, 4956.0], [40.4, 4959.0], [40.5, 4962.0], [40.6, 4963.0], [40.7, 4966.0], [40.8, 4967.0], [40.9, 4969.0], [41.0, 4969.0], [41.1, 4970.0], [41.2, 4971.0], [41.3, 4972.0], [41.4, 4974.0], [41.5, 4975.0], [41.6, 4976.0], [41.7, 4977.0], [41.8, 4979.0], [41.9, 4980.0], [42.0, 4984.0], [42.1, 4985.0], [42.2, 4989.0], [42.3, 4990.0], [42.4, 4993.0], [42.5, 4995.0], [42.6, 4997.0], [42.7, 4998.0], [42.8, 4999.0], [42.9, 5001.0], [43.0, 5003.0], [43.1, 5005.0], [43.2, 5005.0], [43.3, 5007.0], [43.4, 5013.0], [43.5, 5013.0], [43.6, 5014.0], [43.7, 5016.0], [43.8, 5018.0], [43.9, 5019.0], [44.0, 5021.0], [44.1, 5022.0], [44.2, 5022.0], [44.3, 5023.0], [44.4, 5026.0], [44.5, 5028.0], [44.6, 5033.0], [44.7, 5033.0], [44.8, 5037.0], [44.9, 5039.0], [45.0, 5042.0], [45.1, 5044.0], [45.2, 5047.0], [45.3, 5048.0], [45.4, 5050.0], [45.5, 5056.0], [45.6, 5059.0], [45.7, 5061.0], [45.8, 5063.0], [45.9, 5065.0], [46.0, 5070.0], [46.1, 5072.0], [46.2, 5073.0], [46.3, 5074.0], [46.4, 5075.0], [46.5, 5077.0], [46.6, 5078.0], [46.7, 5084.0], [46.8, 5086.0], [46.9, 5087.0], [47.0, 5088.0], [47.1, 5090.0], [47.2, 5092.0], [47.3, 5093.0], [47.4, 5095.0], [47.5, 5096.0], [47.6, 5098.0], [47.7, 5098.0], [47.8, 5101.0], [47.9, 5102.0], [48.0, 5103.0], [48.1, 5104.0], [48.2, 5106.0], [48.3, 5106.0], [48.4, 5107.0], [48.5, 5108.0], [48.6, 5109.0], [48.7, 5112.0], [48.8, 5115.0], [48.9, 5116.0], [49.0, 5118.0], [49.1, 5120.0], [49.2, 5122.0], [49.3, 5122.0], [49.4, 5123.0], [49.5, 5126.0], [49.6, 5127.0], [49.7, 5129.0], [49.8, 5130.0], [49.9, 5131.0], [50.0, 5132.0], [50.1, 5133.0], [50.2, 5134.0], [50.3, 5136.0], [50.4, 5137.0], [50.5, 5139.0], [50.6, 5140.0], [50.7, 5144.0], [50.8, 5146.0], [50.9, 5146.0], [51.0, 5148.0], [51.1, 5149.0], [51.2, 5150.0], [51.3, 5151.0], [51.4, 5152.0], [51.5, 5154.0], [51.6, 5157.0], [51.7, 5158.0], [51.8, 5159.0], [51.9, 5160.0], [52.0, 5160.0], [52.1, 5160.0], [52.2, 5162.0], [52.3, 5164.0], [52.4, 5165.0], [52.5, 5167.0], [52.6, 5169.0], [52.7, 5171.0], [52.8, 5172.0], [52.9, 5172.0], [53.0, 5174.0], [53.1, 5175.0], [53.2, 5175.0], [53.3, 5177.0], [53.4, 5179.0], [53.5, 5180.0], [53.6, 5182.0], [53.7, 5184.0], [53.8, 5185.0], [53.9, 5186.0], [54.0, 5187.0], [54.1, 5188.0], [54.2, 5189.0], [54.3, 5192.0], [54.4, 5194.0], [54.5, 5195.0], [54.6, 5199.0], [54.7, 5201.0], [54.8, 5202.0], [54.9, 5204.0], [55.0, 5206.0], [55.1, 5207.0], [55.2, 5209.0], [55.3, 5210.0], [55.4, 5212.0], [55.5, 5216.0], [55.6, 5218.0], [55.7, 5220.0], [55.8, 5221.0], [55.9, 5227.0], [56.0, 5228.0], [56.1, 5229.0], [56.2, 5231.0], [56.3, 5232.0], [56.4, 5234.0], [56.5, 5236.0], [56.6, 5237.0], [56.7, 5238.0], [56.8, 5240.0], [56.9, 5241.0], [57.0, 5242.0], [57.1, 5243.0], [57.2, 5245.0], [57.3, 5245.0], [57.4, 5248.0], [57.5, 5249.0], [57.6, 5250.0], [57.7, 5252.0], [57.8, 5253.0], [57.9, 5256.0], [58.0, 5256.0], [58.1, 5257.0], [58.2, 5259.0], [58.3, 5259.0], [58.4, 5261.0], [58.5, 5262.0], [58.6, 5263.0], [58.7, 5265.0], [58.8, 5266.0], [58.9, 5269.0], [59.0, 5270.0], [59.1, 5271.0], [59.2, 5272.0], [59.3, 5273.0], [59.4, 5274.0], [59.5, 5275.0], [59.6, 5276.0], [59.7, 5278.0], [59.8, 5278.0], [59.9, 5280.0], [60.0, 5280.0], [60.1, 5281.0], [60.2, 5281.0], [60.3, 5285.0], [60.4, 5286.0], [60.5, 5290.0], [60.6, 5290.0], [60.7, 5292.0], [60.8, 5294.0], [60.9, 5296.0], [61.0, 5297.0], [61.1, 5298.0], [61.2, 5299.0], [61.3, 5300.0], [61.4, 5301.0], [61.5, 5303.0], [61.6, 5304.0], [61.7, 5305.0], [61.8, 5306.0], [61.9, 5308.0], [62.0, 5310.0], [62.1, 5312.0], [62.2, 5312.0], [62.3, 5313.0], [62.4, 5314.0], [62.5, 5315.0], [62.6, 5317.0], [62.7, 5322.0], [62.8, 5323.0], [62.9, 5325.0], [63.0, 5326.0], [63.1, 5327.0], [63.2, 5328.0], [63.3, 5330.0], [63.4, 5332.0], [63.5, 5333.0], [63.6, 5334.0], [63.7, 5336.0], [63.8, 5338.0], [63.9, 5341.0], [64.0, 5343.0], [64.1, 5344.0], [64.2, 5345.0], [64.3, 5347.0], [64.4, 5349.0], [64.5, 5350.0], [64.6, 5351.0], [64.7, 5353.0], [64.8, 5353.0], [64.9, 5354.0], [65.0, 5355.0], [65.1, 5356.0], [65.2, 5358.0], [65.3, 5359.0], [65.4, 5362.0], [65.5, 5364.0], [65.6, 5366.0], [65.7, 5367.0], [65.8, 5368.0], [65.9, 5369.0], [66.0, 5371.0], [66.1, 5374.0], [66.2, 5375.0], [66.3, 5375.0], [66.4, 5376.0], [66.5, 5378.0], [66.6, 5380.0], [66.7, 5382.0], [66.8, 5384.0], [66.9, 5384.0], [67.0, 5387.0], [67.1, 5388.0], [67.2, 5389.0], [67.3, 5391.0], [67.4, 5394.0], [67.5, 5394.0], [67.6, 5394.0], [67.7, 5395.0], [67.8, 5397.0], [67.9, 5398.0], [68.0, 5401.0], [68.1, 5402.0], [68.2, 5403.0], [68.3, 5404.0], [68.4, 5405.0], [68.5, 5407.0], [68.6, 5408.0], [68.7, 5409.0], [68.8, 5409.0], [68.9, 5410.0], [69.0, 5412.0], [69.1, 5413.0], [69.2, 5415.0], [69.3, 5416.0], [69.4, 5417.0], [69.5, 5418.0], [69.6, 5419.0], [69.7, 5421.0], [69.8, 5423.0], [69.9, 5424.0], [70.0, 5425.0], [70.1, 5426.0], [70.2, 5428.0], [70.3, 5428.0], [70.4, 5429.0], [70.5, 5430.0], [70.6, 5432.0], [70.7, 5432.0], [70.8, 5432.0], [70.9, 5434.0], [71.0, 5434.0], [71.1, 5435.0], [71.2, 5436.0], [71.3, 5438.0], [71.4, 5438.0], [71.5, 5440.0], [71.6, 5441.0], [71.7, 5442.0], [71.8, 5443.0], [71.9, 5444.0], [72.0, 5446.0], [72.1, 5446.0], [72.2, 5450.0], [72.3, 5451.0], [72.4, 5452.0], [72.5, 5454.0], [72.6, 5459.0], [72.7, 5461.0], [72.8, 5462.0], [72.9, 5464.0], [73.0, 5467.0], [73.1, 5469.0], [73.2, 5470.0], [73.3, 5473.0], [73.4, 5474.0], [73.5, 5477.0], [73.6, 5478.0], [73.7, 5479.0], [73.8, 5479.0], [73.9, 5481.0], [74.0, 5483.0], [74.1, 5484.0], [74.2, 5486.0], [74.3, 5488.0], [74.4, 5489.0], [74.5, 5491.0], [74.6, 5493.0], [74.7, 5494.0], [74.8, 5495.0], [74.9, 5496.0], [75.0, 5498.0], [75.1, 5499.0], [75.2, 5501.0], [75.3, 5502.0], [75.4, 5504.0], [75.5, 5504.0], [75.6, 5505.0], [75.7, 5507.0], [75.8, 5509.0], [75.9, 5510.0], [76.0, 5512.0], [76.1, 5516.0], [76.2, 5517.0], [76.3, 5518.0], [76.4, 5519.0], [76.5, 5521.0], [76.6, 5523.0], [76.7, 5524.0], [76.8, 5524.0], [76.9, 5525.0], [77.0, 5527.0], [77.1, 5528.0], [77.2, 5531.0], [77.3, 5532.0], [77.4, 5537.0], [77.5, 5539.0], [77.6, 5546.0], [77.7, 5549.0], [77.8, 5551.0], [77.9, 5552.0], [78.0, 5553.0], [78.1, 5554.0], [78.2, 5556.0], [78.3, 5559.0], [78.4, 5561.0], [78.5, 5562.0], [78.6, 5566.0], [78.7, 5568.0], [78.8, 5569.0], [78.9, 5570.0], [79.0, 5571.0], [79.1, 5574.0], [79.2, 5576.0], [79.3, 5577.0], [79.4, 5580.0], [79.5, 5584.0], [79.6, 5586.0], [79.7, 5587.0], [79.8, 5590.0], [79.9, 5591.0], [80.0, 5593.0], [80.1, 5595.0], [80.2, 5596.0], [80.3, 5598.0], [80.4, 5604.0], [80.5, 5604.0], [80.6, 5605.0], [80.7, 5608.0], [80.8, 5609.0], [80.9, 5610.0], [81.0, 5613.0], [81.1, 5613.0], [81.2, 5616.0], [81.3, 5618.0], [81.4, 5622.0], [81.5, 5628.0], [81.6, 5634.0], [81.7, 5637.0], [81.8, 5638.0], [81.9, 5641.0], [82.0, 5644.0], [82.1, 5646.0], [82.2, 5647.0], [82.3, 5648.0], [82.4, 5652.0], [82.5, 5656.0], [82.6, 5657.0], [82.7, 5661.0], [82.8, 5664.0], [82.9, 5668.0], [83.0, 5673.0], [83.1, 5675.0], [83.2, 5681.0], [83.3, 5689.0], [83.4, 5693.0], [83.5, 5703.0], [83.6, 5706.0], [83.7, 5710.0], [83.8, 5711.0], [83.9, 5713.0], [84.0, 5716.0], [84.1, 5722.0], [84.2, 5728.0], [84.3, 5731.0], [84.4, 5734.0], [84.5, 5738.0], [84.6, 5744.0], [84.7, 5752.0], [84.8, 5757.0], [84.9, 5760.0], [85.0, 5764.0], [85.1, 5771.0], [85.2, 5778.0], [85.3, 5780.0], [85.4, 5782.0], [85.5, 5792.0], [85.6, 5795.0], [85.7, 5798.0], [85.8, 5800.0], [85.9, 5802.0], [86.0, 5804.0], [86.1, 5808.0], [86.2, 5811.0], [86.3, 5817.0], [86.4, 5820.0], [86.5, 5826.0], [86.6, 5827.0], [86.7, 5831.0], [86.8, 5833.0], [86.9, 5836.0], [87.0, 5840.0], [87.1, 5846.0], [87.2, 5848.0], [87.3, 5851.0], [87.4, 5856.0], [87.5, 5859.0], [87.6, 5863.0], [87.7, 5864.0], [87.8, 5866.0], [87.9, 5869.0], [88.0, 5873.0], [88.1, 5877.0], [88.2, 5882.0], [88.3, 5885.0], [88.4, 5890.0], [88.5, 5891.0], [88.6, 5894.0], [88.7, 5899.0], [88.8, 5900.0], [88.9, 5901.0], [89.0, 5905.0], [89.1, 5911.0], [89.2, 5915.0], [89.3, 5918.0], [89.4, 5920.0], [89.5, 5920.0], [89.6, 5921.0], [89.7, 5923.0], [89.8, 5928.0], [89.9, 5929.0], [90.0, 5929.0], [90.1, 5932.0], [90.2, 5938.0], [90.3, 5938.0], [90.4, 5943.0], [90.5, 5945.0], [90.6, 5947.0], [90.7, 5954.0], [90.8, 5957.0], [90.9, 5966.0], [91.0, 5970.0], [91.1, 5978.0], [91.2, 5982.0], [91.3, 5988.0], [91.4, 5990.0], [91.5, 5995.0], [91.6, 5995.0], [91.7, 5999.0], [91.8, 6002.0], [91.9, 6008.0], [92.0, 6011.0], [92.1, 6014.0], [92.2, 6017.0], [92.3, 6022.0], [92.4, 6023.0], [92.5, 6029.0], [92.6, 6034.0], [92.7, 6039.0], [92.8, 6043.0], [92.9, 6052.0], [93.0, 6061.0], [93.1, 6066.0], [93.2, 6071.0], [93.3, 6076.0], [93.4, 6080.0], [93.5, 6083.0], [93.6, 6091.0], [93.7, 6099.0], [93.8, 6102.0], [93.9, 6104.0], [94.0, 6109.0], [94.1, 6124.0], [94.2, 6137.0], [94.3, 6138.0], [94.4, 6142.0], [94.5, 6153.0], [94.6, 6158.0], [94.7, 6168.0], [94.8, 6176.0], [94.9, 6185.0], [95.0, 6189.0], [95.1, 6193.0], [95.2, 6204.0], [95.3, 6218.0], [95.4, 6222.0], [95.5, 6223.0], [95.6, 6231.0], [95.7, 6238.0], [95.8, 6245.0], [95.9, 6249.0], [96.0, 6256.0], [96.1, 6261.0], [96.2, 6268.0], [96.3, 6280.0], [96.4, 6282.0], [96.5, 6297.0], [96.6, 6303.0], [96.7, 6311.0], [96.8, 6320.0], [96.9, 6330.0], [97.0, 6337.0], [97.1, 6344.0], [97.2, 6356.0], [97.3, 6368.0], [97.4, 6386.0], [97.5, 6402.0], [97.6, 6435.0], [97.7, 6457.0], [97.8, 6492.0], [97.9, 6557.0], [98.0, 6586.0], [98.1, 6614.0], [98.2, 6654.0], [98.3, 6665.0], [98.4, 6710.0], [98.5, 6768.0], [98.6, 6819.0], [98.7, 6849.0], [98.8, 6893.0], [98.9, 6911.0], [99.0, 6998.0], [99.1, 7091.0], [99.2, 7115.0], [99.3, 7188.0], [99.4, 7301.0], [99.5, 7315.0], [99.6, 7420.0], [99.7, 7470.0], [99.8, 7523.0], [99.9, 7744.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[0.0, 1853.0], [0.1, 1904.0], [0.2, 1953.0], [0.3, 2005.0], [0.4, 2027.0], [0.5, 2058.0], [0.6, 2082.0], [0.7, 2103.0], [0.8, 2123.0], [0.9, 2132.0], [1.0, 2153.0], [1.1, 2192.0], [1.2, 2198.0], [1.3, 2206.0], [1.4, 2212.0], [1.5, 2241.0], [1.6, 2271.0], [1.7, 2290.0], [1.8, 2316.0], [1.9, 2332.0], [2.0, 2356.0], [2.1, 2376.0], [2.2, 2382.0], [2.3, 2393.0], [2.4, 2405.0], [2.5, 2417.0], [2.6, 2429.0], [2.7, 2438.0], [2.8, 2464.0], [2.9, 2473.0], [3.0, 2491.0], [3.1, 2514.0], [3.2, 2518.0], [3.3, 2537.0], [3.4, 2548.0], [3.5, 2555.0], [3.6, 2564.0], [3.7, 2567.0], [3.8, 2578.0], [3.9, 2605.0], [4.0, 2658.0], [4.1, 2676.0], [4.2, 2684.0], [4.3, 2704.0], [4.4, 2707.0], [4.5, 2723.0], [4.6, 2760.0], [4.7, 2778.0], [4.8, 2782.0], [4.9, 2789.0], [5.0, 2800.0], [5.1, 2813.0], [5.2, 2842.0], [5.3, 2858.0], [5.4, 2881.0], [5.5, 2891.0], [5.6, 2918.0], [5.7, 2921.0], [5.8, 2926.0], [5.9, 2937.0], [6.0, 2963.0], [6.1, 3003.0], [6.2, 3020.0], [6.3, 3029.0], [6.4, 3038.0], [6.5, 3062.0], [6.6, 3081.0], [6.7, 3094.0], [6.8, 3105.0], [6.9, 3113.0], [7.0, 3119.0], [7.1, 3123.0], [7.2, 3133.0], [7.3, 3141.0], [7.4, 3153.0], [7.5, 3179.0], [7.6, 3188.0], [7.7, 3213.0], [7.8, 3251.0], [7.9, 3261.0], [8.0, 3284.0], [8.1, 3295.0], [8.2, 3314.0], [8.3, 3326.0], [8.4, 3356.0], [8.5, 3367.0], [8.6, 3384.0], [8.7, 3392.0], [8.8, 3397.0], [8.9, 3401.0], [9.0, 3422.0], [9.1, 3436.0], [9.2, 3453.0], [9.3, 3465.0], [9.4, 3482.0], [9.5, 3486.0], [9.6, 3513.0], [9.7, 3532.0], [9.8, 3545.0], [9.9, 3561.0], [10.0, 3581.0], [10.1, 3600.0], [10.2, 3606.0], [10.3, 3620.0], [10.4, 3633.0], [10.5, 3639.0], [10.6, 3650.0], [10.7, 3669.0], [10.8, 3683.0], [10.9, 3693.0], [11.0, 3701.0], [11.1, 3711.0], [11.2, 3715.0], [11.3, 3721.0], [11.4, 3723.0], [11.5, 3732.0], [11.6, 3739.0], [11.7, 3746.0], [11.8, 3748.0], [11.9, 3757.0], [12.0, 3766.0], [12.1, 3774.0], [12.2, 3775.0], [12.3, 3778.0], [12.4, 3780.0], [12.5, 3781.0], [12.6, 3786.0], [12.7, 3793.0], [12.8, 3796.0], [12.9, 3800.0], [13.0, 3808.0], [13.1, 3817.0], [13.2, 3823.0], [13.3, 3832.0], [13.4, 3837.0], [13.5, 3840.0], [13.6, 3846.0], [13.7, 3856.0], [13.8, 3863.0], [13.9, 3870.0], [14.0, 3873.0], [14.1, 3887.0], [14.2, 3889.0], [14.3, 3896.0], [14.4, 3899.0], [14.5, 3911.0], [14.6, 3917.0], [14.7, 3923.0], [14.8, 3933.0], [14.9, 3944.0], [15.0, 3948.0], [15.1, 3954.0], [15.2, 3957.0], [15.3, 3967.0], [15.4, 3977.0], [15.5, 3985.0], [15.6, 3989.0], [15.7, 3997.0], [15.8, 4008.0], [15.9, 4013.0], [16.0, 4026.0], [16.1, 4028.0], [16.2, 4040.0], [16.3, 4046.0], [16.4, 4061.0], [16.5, 4073.0], [16.6, 4077.0], [16.7, 4089.0], [16.8, 4097.0], [16.9, 4101.0], [17.0, 4104.0], [17.1, 4115.0], [17.2, 4119.0], [17.3, 4119.0], [17.4, 4122.0], [17.5, 4124.0], [17.6, 4132.0], [17.7, 4138.0], [17.8, 4146.0], [17.9, 4147.0], [18.0, 4149.0], [18.1, 4152.0], [18.2, 4157.0], [18.3, 4159.0], [18.4, 4160.0], [18.5, 4162.0], [18.6, 4164.0], [18.7, 4165.0], [18.8, 4168.0], [18.9, 4170.0], [19.0, 4171.0], [19.1, 4174.0], [19.2, 4178.0], [19.3, 4179.0], [19.4, 4180.0], [19.5, 4190.0], [19.6, 4192.0], [19.7, 4192.0], [19.8, 4195.0], [19.9, 4196.0], [20.0, 4199.0], [20.1, 4201.0], [20.2, 4205.0], [20.3, 4206.0], [20.4, 4206.0], [20.5, 4208.0], [20.6, 4209.0], [20.7, 4211.0], [20.8, 4212.0], [20.9, 4216.0], [21.0, 4220.0], [21.1, 4222.0], [21.2, 4223.0], [21.3, 4225.0], [21.4, 4226.0], [21.5, 4230.0], [21.6, 4230.0], [21.7, 4232.0], [21.8, 4232.0], [21.9, 4234.0], [22.0, 4234.0], [22.1, 4235.0], [22.2, 4235.0], [22.3, 4237.0], [22.4, 4239.0], [22.5, 4239.0], [22.6, 4242.0], [22.7, 4243.0], [22.8, 4244.0], [22.9, 4244.0], [23.0, 4246.0], [23.1, 4246.0], [23.2, 4247.0], [23.3, 4249.0], [23.4, 4250.0], [23.5, 4250.0], [23.6, 4251.0], [23.7, 4252.0], [23.8, 4254.0], [23.9, 4256.0], [24.0, 4257.0], [24.1, 4258.0], [24.2, 4258.0], [24.3, 4259.0], [24.4, 4260.0], [24.5, 4261.0], [24.6, 4262.0], [24.7, 4263.0], [24.8, 4264.0], [24.9, 4264.0], [25.0, 4265.0], [25.1, 4266.0], [25.2, 4267.0], [25.3, 4267.0], [25.4, 4269.0], [25.5, 4269.0], [25.6, 4271.0], [25.7, 4271.0], [25.8, 4272.0], [25.9, 4274.0], [26.0, 4275.0], [26.1, 4276.0], [26.2, 4277.0], [26.3, 4278.0], [26.4, 4278.0], [26.5, 4279.0], [26.6, 4280.0], [26.7, 4281.0], [26.8, 4281.0], [26.9, 4282.0], [27.0, 4282.0], [27.1, 4284.0], [27.2, 4285.0], [27.3, 4286.0], [27.4, 4290.0], [27.5, 4291.0], [27.6, 4291.0], [27.7, 4292.0], [27.8, 4293.0], [27.9, 4294.0], [28.0, 4295.0], [28.1, 4296.0], [28.2, 4297.0], [28.3, 4298.0], [28.4, 4298.0], [28.5, 4300.0], [28.6, 4302.0], [28.7, 4302.0], [28.8, 4303.0], [28.9, 4305.0], [29.0, 4306.0], [29.1, 4306.0], [29.2, 4307.0], [29.3, 4309.0], [29.4, 4309.0], [29.5, 4311.0], [29.6, 4312.0], [29.7, 4313.0], [29.8, 4314.0], [29.9, 4316.0], [30.0, 4316.0], [30.1, 4317.0], [30.2, 4318.0], [30.3, 4319.0], [30.4, 4320.0], [30.5, 4321.0], [30.6, 4323.0], [30.7, 4323.0], [30.8, 4324.0], [30.9, 4326.0], [31.0, 4328.0], [31.1, 4329.0], [31.2, 4329.0], [31.3, 4330.0], [31.4, 4330.0], [31.5, 4331.0], [31.6, 4332.0], [31.7, 4333.0], [31.8, 4334.0], [31.9, 4334.0], [32.0, 4335.0], [32.1, 4335.0], [32.2, 4336.0], [32.3, 4336.0], [32.4, 4338.0], [32.5, 4339.0], [32.6, 4342.0], [32.7, 4342.0], [32.8, 4343.0], [32.9, 4345.0], [33.0, 4345.0], [33.1, 4347.0], [33.2, 4348.0], [33.3, 4349.0], [33.4, 4349.0], [33.5, 4351.0], [33.6, 4352.0], [33.7, 4353.0], [33.8, 4354.0], [33.9, 4355.0], [34.0, 4356.0], [34.1, 4357.0], [34.2, 4358.0], [34.3, 4360.0], [34.4, 4360.0], [34.5, 4361.0], [34.6, 4362.0], [34.7, 4365.0], [34.8, 4366.0], [34.9, 4367.0], [35.0, 4369.0], [35.1, 4370.0], [35.2, 4371.0], [35.3, 4372.0], [35.4, 4373.0], [35.5, 4374.0], [35.6, 4375.0], [35.7, 4376.0], [35.8, 4377.0], [35.9, 4378.0], [36.0, 4380.0], [36.1, 4381.0], [36.2, 4382.0], [36.3, 4383.0], [36.4, 4384.0], [36.5, 4385.0], [36.6, 4386.0], [36.7, 4387.0], [36.8, 4387.0], [36.9, 4388.0], [37.0, 4390.0], [37.1, 4392.0], [37.2, 4393.0], [37.3, 4394.0], [37.4, 4395.0], [37.5, 4396.0], [37.6, 4398.0], [37.7, 4399.0], [37.8, 4401.0], [37.9, 4402.0], [38.0, 4404.0], [38.1, 4405.0], [38.2, 4406.0], [38.3, 4407.0], [38.4, 4407.0], [38.5, 4408.0], [38.6, 4410.0], [38.7, 4412.0], [38.8, 4413.0], [38.9, 4415.0], [39.0, 4417.0], [39.1, 4419.0], [39.2, 4420.0], [39.3, 4420.0], [39.4, 4421.0], [39.5, 4423.0], [39.6, 4425.0], [39.7, 4427.0], [39.8, 4428.0], [39.9, 4429.0], [40.0, 4430.0], [40.1, 4434.0], [40.2, 4436.0], [40.3, 4436.0], [40.4, 4437.0], [40.5, 4438.0], [40.6, 4438.0], [40.7, 4440.0], [40.8, 4441.0], [40.9, 4441.0], [41.0, 4442.0], [41.1, 4445.0], [41.2, 4446.0], [41.3, 4448.0], [41.4, 4449.0], [41.5, 4454.0], [41.6, 4454.0], [41.7, 4458.0], [41.8, 4459.0], [41.9, 4460.0], [42.0, 4463.0], [42.1, 4464.0], [42.2, 4465.0], [42.3, 4466.0], [42.4, 4467.0], [42.5, 4468.0], [42.6, 4469.0], [42.7, 4469.0], [42.8, 4470.0], [42.9, 4471.0], [43.0, 4472.0], [43.1, 4474.0], [43.2, 4477.0], [43.3, 4479.0], [43.4, 4480.0], [43.5, 4484.0], [43.6, 4489.0], [43.7, 4490.0], [43.8, 4492.0], [43.9, 4493.0], [44.0, 4494.0], [44.1, 4497.0], [44.2, 4500.0], [44.3, 4500.0], [44.4, 4507.0], [44.5, 4508.0], [44.6, 4512.0], [44.7, 4513.0], [44.8, 4515.0], [44.9, 4516.0], [45.0, 4519.0], [45.1, 4520.0], [45.2, 4521.0], [45.3, 4521.0], [45.4, 4524.0], [45.5, 4526.0], [45.6, 4528.0], [45.7, 4530.0], [45.8, 4532.0], [45.9, 4534.0], [46.0, 4540.0], [46.1, 4542.0], [46.2, 4544.0], [46.3, 4546.0], [46.4, 4547.0], [46.5, 4553.0], [46.6, 4554.0], [46.7, 4557.0], [46.8, 4559.0], [46.9, 4560.0], [47.0, 4562.0], [47.1, 4568.0], [47.2, 4570.0], [47.3, 4572.0], [47.4, 4573.0], [47.5, 4574.0], [47.6, 4576.0], [47.7, 4579.0], [47.8, 4581.0], [47.9, 4583.0], [48.0, 4585.0], [48.1, 4586.0], [48.2, 4587.0], [48.3, 4589.0], [48.4, 4590.0], [48.5, 4591.0], [48.6, 4594.0], [48.7, 4596.0], [48.8, 4598.0], [48.9, 4600.0], [49.0, 4602.0], [49.1, 4604.0], [49.2, 4607.0], [49.3, 4611.0], [49.4, 4614.0], [49.5, 4615.0], [49.6, 4618.0], [49.7, 4620.0], [49.8, 4620.0], [49.9, 4623.0], [50.0, 4624.0], [50.1, 4625.0], [50.2, 4626.0], [50.3, 4629.0], [50.4, 4631.0], [50.5, 4631.0], [50.6, 4632.0], [50.7, 4635.0], [50.8, 4636.0], [50.9, 4637.0], [51.0, 4637.0], [51.1, 4642.0], [51.2, 4642.0], [51.3, 4644.0], [51.4, 4645.0], [51.5, 4648.0], [51.6, 4649.0], [51.7, 4651.0], [51.8, 4652.0], [51.9, 4653.0], [52.0, 4654.0], [52.1, 4655.0], [52.2, 4656.0], [52.3, 4656.0], [52.4, 4658.0], [52.5, 4658.0], [52.6, 4659.0], [52.7, 4659.0], [52.8, 4661.0], [52.9, 4663.0], [53.0, 4663.0], [53.1, 4664.0], [53.2, 4665.0], [53.3, 4666.0], [53.4, 4667.0], [53.5, 4668.0], [53.6, 4669.0], [53.7, 4669.0], [53.8, 4671.0], [53.9, 4673.0], [54.0, 4674.0], [54.1, 4675.0], [54.2, 4675.0], [54.3, 4677.0], [54.4, 4677.0], [54.5, 4679.0], [54.6, 4680.0], [54.7, 4681.0], [54.8, 4682.0], [54.9, 4683.0], [55.0, 4684.0], [55.1, 4686.0], [55.2, 4687.0], [55.3, 4687.0], [55.4, 4688.0], [55.5, 4689.0], [55.6, 4690.0], [55.7, 4692.0], [55.8, 4693.0], [55.9, 4697.0], [56.0, 4699.0], [56.1, 4701.0], [56.2, 4702.0], [56.3, 4703.0], [56.4, 4704.0], [56.5, 4705.0], [56.6, 4706.0], [56.7, 4707.0], [56.8, 4708.0], [56.9, 4710.0], [57.0, 4710.0], [57.1, 4713.0], [57.2, 4713.0], [57.3, 4714.0], [57.4, 4715.0], [57.5, 4715.0], [57.6, 4717.0], [57.7, 4717.0], [57.8, 4719.0], [57.9, 4721.0], [58.0, 4723.0], [58.1, 4724.0], [58.2, 4724.0], [58.3, 4725.0], [58.4, 4727.0], [58.5, 4728.0], [58.6, 4730.0], [58.7, 4730.0], [58.8, 4734.0], [58.9, 4736.0], [59.0, 4738.0], [59.1, 4739.0], [59.2, 4741.0], [59.3, 4742.0], [59.4, 4743.0], [59.5, 4745.0], [59.6, 4746.0], [59.7, 4748.0], [59.8, 4749.0], [59.9, 4752.0], [60.0, 4754.0], [60.1, 4755.0], [60.2, 4756.0], [60.3, 4757.0], [60.4, 4759.0], [60.5, 4760.0], [60.6, 4760.0], [60.7, 4763.0], [60.8, 4764.0], [60.9, 4765.0], [61.0, 4767.0], [61.1, 4768.0], [61.2, 4769.0], [61.3, 4769.0], [61.4, 4771.0], [61.5, 4771.0], [61.6, 4774.0], [61.7, 4775.0], [61.8, 4777.0], [61.9, 4779.0], [62.0, 4780.0], [62.1, 4780.0], [62.2, 4782.0], [62.3, 4783.0], [62.4, 4784.0], [62.5, 4788.0], [62.6, 4789.0], [62.7, 4789.0], [62.8, 4789.0], [62.9, 4791.0], [63.0, 4791.0], [63.1, 4792.0], [63.2, 4795.0], [63.3, 4797.0], [63.4, 4799.0], [63.5, 4799.0], [63.6, 4800.0], [63.7, 4802.0], [63.8, 4802.0], [63.9, 4805.0], [64.0, 4806.0], [64.1, 4806.0], [64.2, 4808.0], [64.3, 4809.0], [64.4, 4810.0], [64.5, 4811.0], [64.6, 4812.0], [64.7, 4814.0], [64.8, 4815.0], [64.9, 4815.0], [65.0, 4815.0], [65.1, 4816.0], [65.2, 4818.0], [65.3, 4818.0], [65.4, 4819.0], [65.5, 4820.0], [65.6, 4821.0], [65.7, 4823.0], [65.8, 4823.0], [65.9, 4825.0], [66.0, 4826.0], [66.1, 4828.0], [66.2, 4828.0], [66.3, 4830.0], [66.4, 4831.0], [66.5, 4832.0], [66.6, 4833.0], [66.7, 4835.0], [66.8, 4836.0], [66.9, 4837.0], [67.0, 4839.0], [67.1, 4840.0], [67.2, 4842.0], [67.3, 4843.0], [67.4, 4844.0], [67.5, 4844.0], [67.6, 4845.0], [67.7, 4846.0], [67.8, 4847.0], [67.9, 4848.0], [68.0, 4848.0], [68.1, 4850.0], [68.2, 4851.0], [68.3, 4853.0], [68.4, 4856.0], [68.5, 4856.0], [68.6, 4858.0], [68.7, 4860.0], [68.8, 4861.0], [68.9, 4863.0], [69.0, 4864.0], [69.1, 4865.0], [69.2, 4866.0], [69.3, 4866.0], [69.4, 4868.0], [69.5, 4869.0], [69.6, 4869.0], [69.7, 4872.0], [69.8, 4872.0], [69.9, 4873.0], [70.0, 4874.0], [70.1, 4875.0], [70.2, 4877.0], [70.3, 4882.0], [70.4, 4882.0], [70.5, 4885.0], [70.6, 4887.0], [70.7, 4889.0], [70.8, 4889.0], [70.9, 4891.0], [71.0, 4892.0], [71.1, 4893.0], [71.2, 4894.0], [71.3, 4895.0], [71.4, 4896.0], [71.5, 4898.0], [71.6, 4898.0], [71.7, 4899.0], [71.8, 4899.0], [71.9, 4901.0], [72.0, 4902.0], [72.1, 4904.0], [72.2, 4904.0], [72.3, 4905.0], [72.4, 4907.0], [72.5, 4909.0], [72.6, 4910.0], [72.7, 4911.0], [72.8, 4911.0], [72.9, 4912.0], [73.0, 4912.0], [73.1, 4914.0], [73.2, 4915.0], [73.3, 4915.0], [73.4, 4918.0], [73.5, 4920.0], [73.6, 4920.0], [73.7, 4921.0], [73.8, 4922.0], [73.9, 4923.0], [74.0, 4925.0], [74.1, 4926.0], [74.2, 4927.0], [74.3, 4928.0], [74.4, 4929.0], [74.5, 4929.0], [74.6, 4931.0], [74.7, 4933.0], [74.8, 4936.0], [74.9, 4937.0], [75.0, 4938.0], [75.1, 4939.0], [75.2, 4941.0], [75.3, 4942.0], [75.4, 4943.0], [75.5, 4944.0], [75.6, 4948.0], [75.7, 4949.0], [75.8, 4950.0], [75.9, 4953.0], [76.0, 4955.0], [76.1, 4958.0], [76.2, 4960.0], [76.3, 4961.0], [76.4, 4962.0], [76.5, 4962.0], [76.6, 4965.0], [76.7, 4966.0], [76.8, 4967.0], [76.9, 4970.0], [77.0, 4972.0], [77.1, 4974.0], [77.2, 4976.0], [77.3, 4977.0], [77.4, 4978.0], [77.5, 4980.0], [77.6, 4983.0], [77.7, 4986.0], [77.8, 4989.0], [77.9, 4990.0], [78.0, 4992.0], [78.1, 4995.0], [78.2, 4997.0], [78.3, 4998.0], [78.4, 4999.0], [78.5, 5000.0], [78.6, 5001.0], [78.7, 5004.0], [78.8, 5006.0], [78.9, 5009.0], [79.0, 5011.0], [79.1, 5014.0], [79.2, 5016.0], [79.3, 5019.0], [79.4, 5023.0], [79.5, 5031.0], [79.6, 5032.0], [79.7, 5033.0], [79.8, 5036.0], [79.9, 5036.0], [80.0, 5038.0], [80.1, 5040.0], [80.2, 5042.0], [80.3, 5046.0], [80.4, 5048.0], [80.5, 5050.0], [80.6, 5054.0], [80.7, 5059.0], [80.8, 5062.0], [80.9, 5062.0], [81.0, 5067.0], [81.1, 5069.0], [81.2, 5075.0], [81.3, 5083.0], [81.4, 5084.0], [81.5, 5087.0], [81.6, 5089.0], [81.7, 5090.0], [81.8, 5094.0], [81.9, 5095.0], [82.0, 5096.0], [82.1, 5097.0], [82.2, 5099.0], [82.3, 5103.0], [82.4, 5107.0], [82.5, 5110.0], [82.6, 5111.0], [82.7, 5116.0], [82.8, 5117.0], [82.9, 5118.0], [83.0, 5123.0], [83.1, 5126.0], [83.2, 5131.0], [83.3, 5133.0], [83.4, 5134.0], [83.5, 5138.0], [83.6, 5143.0], [83.7, 5148.0], [83.8, 5150.0], [83.9, 5158.0], [84.0, 5163.0], [84.1, 5164.0], [84.2, 5170.0], [84.3, 5175.0], [84.4, 5178.0], [84.5, 5184.0], [84.6, 5187.0], [84.7, 5192.0], [84.8, 5195.0], [84.9, 5199.0], [85.0, 5203.0], [85.1, 5207.0], [85.2, 5209.0], [85.3, 5212.0], [85.4, 5217.0], [85.5, 5218.0], [85.6, 5221.0], [85.7, 5224.0], [85.8, 5226.0], [85.9, 5227.0], [86.0, 5228.0], [86.1, 5236.0], [86.2, 5237.0], [86.3, 5243.0], [86.4, 5247.0], [86.5, 5248.0], [86.6, 5249.0], [86.7, 5252.0], [86.8, 5254.0], [86.9, 5256.0], [87.0, 5257.0], [87.1, 5259.0], [87.2, 5266.0], [87.3, 5270.0], [87.4, 5274.0], [87.5, 5276.0], [87.6, 5282.0], [87.7, 5287.0], [87.8, 5290.0], [87.9, 5295.0], [88.0, 5300.0], [88.1, 5306.0], [88.2, 5309.0], [88.3, 5311.0], [88.4, 5315.0], [88.5, 5317.0], [88.6, 5321.0], [88.7, 5322.0], [88.8, 5325.0], [88.9, 5327.0], [89.0, 5329.0], [89.1, 5332.0], [89.2, 5334.0], [89.3, 5336.0], [89.4, 5338.0], [89.5, 5341.0], [89.6, 5342.0], [89.7, 5344.0], [89.8, 5346.0], [89.9, 5348.0], [90.0, 5349.0], [90.1, 5353.0], [90.2, 5356.0], [90.3, 5360.0], [90.4, 5365.0], [90.5, 5369.0], [90.6, 5371.0], [90.7, 5373.0], [90.8, 5376.0], [90.9, 5378.0], [91.0, 5380.0], [91.1, 5381.0], [91.2, 5384.0], [91.3, 5387.0], [91.4, 5390.0], [91.5, 5391.0], [91.6, 5395.0], [91.7, 5396.0], [91.8, 5397.0], [91.9, 5403.0], [92.0, 5404.0], [92.1, 5406.0], [92.2, 5410.0], [92.3, 5416.0], [92.4, 5417.0], [92.5, 5420.0], [92.6, 5424.0], [92.7, 5426.0], [92.8, 5428.0], [92.9, 5432.0], [93.0, 5437.0], [93.1, 5441.0], [93.2, 5445.0], [93.3, 5448.0], [93.4, 5454.0], [93.5, 5459.0], [93.6, 5467.0], [93.7, 5478.0], [93.8, 5480.0], [93.9, 5482.0], [94.0, 5492.0], [94.1, 5499.0], [94.2, 5501.0], [94.3, 5510.0], [94.4, 5515.0], [94.5, 5517.0], [94.6, 5528.0], [94.7, 5537.0], [94.8, 5542.0], [94.9, 5549.0], [95.0, 5555.0], [95.1, 5560.0], [95.2, 5566.0], [95.3, 5573.0], [95.4, 5581.0], [95.5, 5604.0], [95.6, 5609.0], [95.7, 5620.0], [95.8, 5628.0], [95.9, 5631.0], [96.0, 5652.0], [96.1, 5664.0], [96.2, 5670.0], [96.3, 5682.0], [96.4, 5691.0], [96.5, 5699.0], [96.6, 5707.0], [96.7, 5715.0], [96.8, 5725.0], [96.9, 5734.0], [97.0, 5743.0], [97.1, 5756.0], [97.2, 5765.0], [97.3, 5778.0], [97.4, 5783.0], [97.5, 5821.0], [97.6, 5828.0], [97.7, 5835.0], [97.8, 5854.0], [97.9, 5905.0], [98.0, 5951.0], [98.1, 5972.0], [98.2, 5988.0], [98.3, 5998.0], [98.4, 6008.0], [98.5, 6073.0], [98.6, 6099.0], [98.7, 6136.0], [98.8, 6275.0], [98.9, 6372.0], [99.0, 6473.0], [99.1, 6546.0], [99.2, 6583.0], [99.3, 6632.0], [99.4, 6657.0], [99.5, 6692.0], [99.6, 6749.0], [99.7, 6899.0], [99.8, 7179.0], [99.9, 7509.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1800.0, "maxY": 278.0, "series": [{"data": [[2000.0, 1.0], [2100.0, 5.0], [2200.0, 9.0], [2300.0, 14.0], [2400.0, 13.0], [2500.0, 15.0], [2600.0, 26.0], [2700.0, 18.0], [2800.0, 20.0], [2900.0, 11.0], [3000.0, 17.0], [3100.0, 22.0], [3200.0, 13.0], [3300.0, 14.0], [3400.0, 17.0], [3500.0, 21.0], [3700.0, 19.0], [3600.0, 14.0], [3800.0, 13.0], [3900.0, 15.0], [4000.0, 21.0], [4100.0, 39.0], [4200.0, 33.0], [4300.0, 20.0], [4400.0, 24.0], [4600.0, 106.0], [4500.0, 36.0], [4700.0, 261.0], [4800.0, 246.0], [4900.0, 201.0], [5000.0, 148.0], [5100.0, 207.0], [5200.0, 197.0], [5300.0, 201.0], [5400.0, 216.0], [5500.0, 157.0], [5600.0, 95.0], [5800.0, 90.0], [5700.0, 69.0], [5900.0, 88.0], [6000.0, 60.0], [6100.0, 43.0], [6200.0, 43.0], [6300.0, 27.0], [6600.0, 9.0], [6500.0, 7.0], [6400.0, 10.0], [6900.0, 5.0], [6800.0, 9.0], [6700.0, 6.0], [7100.0, 6.0], [7000.0, 3.0], [7300.0, 6.0], [7400.0, 6.0], [7200.0, 2.0], [7500.0, 1.0], [7600.0, 1.0], [7700.0, 2.0], [7800.0, 1.0], [8100.0, 1.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[1800.0, 3.0], [1900.0, 6.0], [2000.0, 12.0], [2100.0, 16.0], [2200.0, 14.0], [2300.0, 19.0], [2400.0, 22.0], [2500.0, 24.0], [2600.0, 11.0], [2700.0, 23.0], [2800.0, 16.0], [2900.0, 17.0], [3000.0, 19.0], [3100.0, 28.0], [3200.0, 14.0], [3300.0, 23.0], [3400.0, 20.0], [3500.0, 16.0], [3600.0, 27.0], [3700.0, 57.0], [3800.0, 46.0], [3900.0, 39.0], [4000.0, 34.0], [4100.0, 94.0], [4200.0, 253.0], [4300.0, 278.0], [4400.0, 194.0], [4600.0, 216.0], [4500.0, 140.0], [4700.0, 224.0], [4800.0, 249.0], [4900.0, 200.0], [5000.0, 113.0], [5100.0, 81.0], [5200.0, 91.0], [5300.0, 116.0], [5500.0, 39.0], [5400.0, 70.0], [5600.0, 32.0], [5700.0, 28.0], [5800.0, 13.0], [6000.0, 8.0], [5900.0, 14.0], [6100.0, 4.0], [6300.0, 4.0], [6200.0, 2.0], [6500.0, 6.0], [6600.0, 8.0], [6400.0, 3.0], [6900.0, 1.0], [6800.0, 2.0], [6700.0, 4.0], [7000.0, 1.0], [7100.0, 1.0], [7300.0, 2.0], [7600.0, 1.0], [7500.0, 2.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 8100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 6000.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6000.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 6000.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.67878917E12, "maxY": 30.0, "series": [{"data": [[1.67878963E12, 30.0], [1.67878929E12, 30.0], [1.67878997E12, 30.0], [1.67878954E12, 30.0], [1.6787892E12, 9.72972972972973], [1.67879022E12, 6.967741935483871], [1.67878988E12, 30.0], [1.67878979E12, 30.0], [1.67878945E12, 30.0], [1.67879013E12, 24.315789473684212], [1.6787897E12, 30.0], [1.67878936E12, 30.0], [1.67878927E12, 27.12698412698413], [1.67879004E12, 30.0], [1.67878995E12, 30.0], [1.67878961E12, 30.0], [1.67878918E12, 4.799999999999999], [1.67878986E12, 30.0], [1.67878952E12, 30.0], [1.67878943E12, 30.0], [1.6787902E12, 11.179487179487182], [1.67879011E12, 27.0], [1.67878977E12, 30.0], [1.67878934E12, 30.0], [1.67879002E12, 30.0], [1.67878968E12, 30.0], [1.67878959E12, 30.0], [1.67878925E12, 22.14545454545454], [1.67878993E12, 30.0], [1.6787895E12, 30.0], [1.67879018E12, 16.12244897959184], [1.67878984E12, 30.0], [1.67878975E12, 30.0], [1.67878941E12, 30.0], [1.67879009E12, 28.47540983606557], [1.67878966E12, 30.0], [1.67878932E12, 30.0], [1.67878923E12, 17.08000000000001], [1.67879E12, 30.0], [1.67878991E12, 30.0], [1.67878957E12, 30.0], [1.67878982E12, 30.0], [1.67878948E12, 30.0], [1.67878939E12, 30.0], [1.67879016E12, 22.0], [1.67879007E12, 29.903225806451612], [1.67878973E12, 30.0], [1.6787893E12, 30.0], [1.67878998E12, 30.0], [1.67878964E12, 30.0], [1.67878955E12, 30.0], [1.67878921E12, 12.170731707317074], [1.67879023E12, 4.869565217391305], [1.67878989E12, 30.0], [1.67878946E12, 30.0], [1.67879014E12, 23.83050847457627], [1.6787898E12, 30.0], [1.67878971E12, 30.0], [1.67878937E12, 30.0], [1.67879005E12, 30.0], [1.67878962E12, 30.0], [1.67878928E12, 29.51666666666667], [1.67878919E12, 7.206896551724139], [1.67878996E12, 30.0], [1.67878987E12, 30.0], [1.67878953E12, 30.0], [1.67879021E12, 8.411764705882355], [1.67878978E12, 30.0], [1.67878944E12, 30.0], [1.67878935E12, 30.0], [1.67879012E12, 26.483333333333334], [1.67879003E12, 30.0], [1.67878969E12, 30.0], [1.67878926E12, 24.701754385964918], [1.67878994E12, 30.0], [1.6787896E12, 30.0], [1.67878951E12, 30.0], [1.67878917E12, 2.5714285714285716], [1.67879019E12, 12.957446808510637], [1.67878985E12, 30.0], [1.67878942E12, 30.0], [1.6787901E12, 27.80952380952381], [1.67878976E12, 30.0], [1.67878967E12, 30.0], [1.67878933E12, 30.0], [1.67879001E12, 30.0], [1.67878958E12, 30.0], [1.67878924E12, 19.625000000000004], [1.67878992E12, 30.0], [1.67878983E12, 30.0], [1.67878949E12, 30.0], [1.67879017E12, 18.7090909090909], [1.67878974E12, 30.0], [1.6787894E12, 30.0], [1.67878931E12, 30.0], [1.67879008E12, 29.0], [1.67878999E12, 30.0], [1.67878965E12, 30.0], [1.67878922E12, 14.638297872340427], [1.6787899E12, 30.0], [1.67878956E12, 30.0], [1.67878947E12, 30.0], [1.67879024E12, 1.5], [1.67879015E12, 22.563636363636363], [1.67878981E12, 30.0], [1.67878938E12, 30.0], [1.67879006E12, 30.0], [1.67878972E12, 30.0]], "isOverall": false, "label": "线程组", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67879024E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1903.3333333333333, "minX": 1.0, "maxY": 5351.46016190881, "series": [{"data": [[2.0, 3155.5], [3.0, 2261.6], [4.0, 2287.8333333333335], [5.0, 2333.625], [6.0, 2407.5], [7.0, 2535.826086956522], [8.0, 2628.4666666666662], [9.0, 2626.5], [10.0, 2738.0], [11.0, 2799.8], [12.0, 2950.4848484848485], [13.0, 2977.5], [14.0, 3117.2499999999995], [15.0, 3237.111111111111], [16.0, 3382.5357142857147], [1.0, 2394.0], [17.0, 3473.6], [18.0, 3659.214285714286], [19.0, 3517.9999999999995], [20.0, 3783.882352941176], [21.0, 3745.444444444444], [22.0, 4201.035087719299], [23.0, 4280.266666666666], [24.0, 4357.237288135594], [25.0, 4370.764705882353], [26.0, 4666.428571428572], [27.0, 4687.430769230768], [28.0, 4954.725490196079], [29.0, 5022.0166666666655], [30.0, 5351.46016190881]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[27.840666666666714, 5042.078000000009]], "isOverall": false, "label": "RAMP-Aggregated", "isController": false}, {"data": [[2.0, 2074.0], [3.0, 1903.3333333333333], [4.0, 2012.0], [5.0, 2099.875], [6.0, 2130.4444444444443], [7.0, 2269.2799999999997], [8.0, 2393.9333333333334], [9.0, 2360.125], [10.0, 2480.3684210526317], [11.0, 2596.3333333333335], [12.0, 2650.6551724137926], [13.0, 2765.4615384615386], [14.0, 2844.2307692307686], [15.0, 2932.6], [16.0, 3034.695652173913], [1.0, 2199.0], [17.0, 3172.153846153846], [18.0, 3275.714285714286], [19.0, 3290.6000000000004], [20.0, 3501.8333333333335], [21.0, 3441.0], [22.0, 3803.2075471698113], [23.0, 3823.125000000001], [24.0, 3857.622641509434], [25.0, 3973.6428571428573], [26.0, 4132.789473684211], [27.0, 4218.712121212122], [28.0, 4422.771929824561], [29.0, 4477.96551724138], [30.0, 4803.21440750213]], "isOverall": false, "label": "原生", "isController": false}, {"data": [[27.845666666666666, 4525.891999999995]], "isOverall": false, "label": "原生-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 30.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.67878917E12, "maxY": 4.9E-324, "series": [{"data": [[1.67878963E12, 0.0], [1.67878929E12, 0.0], [1.67878997E12, 0.0], [1.67878954E12, 0.0], [1.6787892E12, 0.0], [1.67879022E12, 0.0], [1.67878988E12, 0.0], [1.67878979E12, 0.0], [1.67878945E12, 0.0], [1.67879013E12, 0.0], [1.6787897E12, 0.0], [1.67878936E12, 0.0], [1.67878927E12, 0.0], [1.67879004E12, 0.0], [1.67878995E12, 0.0], [1.67878961E12, 0.0], [1.67878918E12, 0.0], [1.67878986E12, 0.0], [1.67878952E12, 0.0], [1.67878943E12, 0.0], [1.6787902E12, 0.0], [1.67879011E12, 0.0], [1.67878977E12, 0.0], [1.67878934E12, 0.0], [1.67879002E12, 0.0], [1.67878968E12, 0.0], [1.67878959E12, 0.0], [1.67878925E12, 0.0], [1.67878993E12, 0.0], [1.6787895E12, 0.0], [1.67879018E12, 0.0], [1.67878984E12, 0.0], [1.67878975E12, 0.0], [1.67878941E12, 0.0], [1.67879009E12, 0.0], [1.67878966E12, 0.0], [1.67878932E12, 0.0], [1.67878923E12, 0.0], [1.67879E12, 0.0], [1.67878991E12, 0.0], [1.67878957E12, 0.0], [1.67878982E12, 0.0], [1.67878948E12, 0.0], [1.67878939E12, 0.0], [1.67879016E12, 0.0], [1.67879007E12, 0.0], [1.67878973E12, 0.0], [1.6787893E12, 0.0], [1.67878998E12, 0.0], [1.67878964E12, 0.0], [1.67878955E12, 0.0], [1.67878921E12, 0.0], [1.67879023E12, 0.0], [1.67878989E12, 0.0], [1.67878946E12, 0.0], [1.67879014E12, 0.0], [1.6787898E12, 0.0], [1.67878971E12, 0.0], [1.67878937E12, 0.0], [1.67879005E12, 0.0], [1.67878962E12, 0.0], [1.67878928E12, 0.0], [1.67878919E12, 0.0], [1.67878996E12, 0.0], [1.67878987E12, 0.0], [1.67878953E12, 0.0], [1.67879021E12, 0.0], [1.67878978E12, 0.0], [1.67878944E12, 0.0], [1.67878935E12, 0.0], [1.67879012E12, 0.0], [1.67879003E12, 0.0], [1.67878969E12, 0.0], [1.67878926E12, 0.0], [1.67878994E12, 0.0], [1.6787896E12, 0.0], [1.67878951E12, 0.0], [1.67878917E12, 0.0], [1.67879019E12, 0.0], [1.67878985E12, 0.0], [1.67878942E12, 0.0], [1.6787901E12, 0.0], [1.67878976E12, 0.0], [1.67878967E12, 0.0], [1.67878933E12, 0.0], [1.67879001E12, 0.0], [1.67878958E12, 0.0], [1.67878924E12, 0.0], [1.67878992E12, 0.0], [1.67878983E12, 0.0], [1.67878949E12, 0.0], [1.67879017E12, 0.0], [1.67878974E12, 0.0], [1.6787894E12, 0.0], [1.67878931E12, 0.0], [1.67879008E12, 0.0], [1.67878999E12, 0.0], [1.67878965E12, 0.0], [1.67878922E12, 0.0], [1.6787899E12, 0.0], [1.67878956E12, 0.0], [1.67878947E12, 0.0], [1.67879024E12, 0.0], [1.67879015E12, 0.0], [1.67878981E12, 0.0], [1.67878938E12, 0.0], [1.67879006E12, 0.0], [1.67878972E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.67878963E12, 0.0], [1.67878929E12, 0.0], [1.67878997E12, 0.0], [1.67878954E12, 0.0], [1.6787892E12, 0.0], [1.67879022E12, 0.0], [1.67878988E12, 0.0], [1.67878979E12, 0.0], [1.67878945E12, 0.0], [1.67879013E12, 0.0], [1.6787897E12, 0.0], [1.67878936E12, 0.0], [1.67878927E12, 0.0], [1.67879004E12, 0.0], [1.67878995E12, 0.0], [1.67878961E12, 0.0], [1.67878918E12, 0.0], [1.67878986E12, 0.0], [1.67878952E12, 0.0], [1.67878943E12, 0.0], [1.6787902E12, 0.0], [1.67879011E12, 0.0], [1.67878977E12, 0.0], [1.67878934E12, 0.0], [1.67879002E12, 0.0], [1.67878968E12, 0.0], [1.67878959E12, 0.0], [1.67878925E12, 0.0], [1.67878993E12, 0.0], [1.6787895E12, 0.0], [1.67879018E12, 0.0], [1.67878984E12, 0.0], [1.67878975E12, 0.0], [1.67878941E12, 0.0], [1.67879009E12, 0.0], [1.67878966E12, 0.0], [1.67878932E12, 0.0], [1.67878923E12, 0.0], [1.67879E12, 0.0], [1.67878991E12, 0.0], [1.67878957E12, 0.0], [1.67878982E12, 0.0], [1.67878948E12, 0.0], [1.67878939E12, 0.0], [1.67879016E12, 0.0], [1.67879007E12, 0.0], [1.67878973E12, 0.0], [1.6787893E12, 0.0], [1.67878998E12, 0.0], [1.67878964E12, 0.0], [1.67878955E12, 0.0], [1.67878921E12, 0.0], [1.67879023E12, 0.0], [1.67878989E12, 0.0], [1.67878946E12, 0.0], [1.67879014E12, 0.0], [1.6787898E12, 0.0], [1.67878971E12, 0.0], [1.67878937E12, 0.0], [1.67879005E12, 0.0], [1.67878962E12, 0.0], [1.67878928E12, 0.0], [1.67878919E12, 0.0], [1.67878996E12, 0.0], [1.67878987E12, 0.0], [1.67878953E12, 0.0], [1.67879021E12, 0.0], [1.67878978E12, 0.0], [1.67878944E12, 0.0], [1.67878935E12, 0.0], [1.67879012E12, 0.0], [1.67879003E12, 0.0], [1.67878969E12, 0.0], [1.67878926E12, 0.0], [1.67878994E12, 0.0], [1.6787896E12, 0.0], [1.67878951E12, 0.0], [1.67878917E12, 0.0], [1.67879019E12, 0.0], [1.67878985E12, 0.0], [1.67878942E12, 0.0], [1.6787901E12, 0.0], [1.67878976E12, 0.0], [1.67878967E12, 0.0], [1.67878933E12, 0.0], [1.67879001E12, 0.0], [1.67878958E12, 0.0], [1.67878924E12, 0.0], [1.67878992E12, 0.0], [1.67878983E12, 0.0], [1.67878949E12, 0.0], [1.67879017E12, 0.0], [1.67878974E12, 0.0], [1.6787894E12, 0.0], [1.67878931E12, 0.0], [1.67879008E12, 0.0], [1.67878999E12, 0.0], [1.67878965E12, 0.0], [1.67878922E12, 0.0], [1.6787899E12, 0.0], [1.67878956E12, 0.0], [1.67878947E12, 0.0], [1.67879024E12, 0.0], [1.67879015E12, 0.0], [1.67878981E12, 0.0], [1.67878938E12, 0.0], [1.67879006E12, 0.0], [1.67878972E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67879024E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2002.5, "minX": 1.67878917E12, "maxY": 6910.818181818182, "series": [{"data": [[1.67878963E12, 5350.275862068965], [1.67878929E12, 4917.812499999999], [1.67878997E12, 5686.214285714286], [1.67878954E12, 4929.028571428571], [1.6787892E12, 2653.368421052631], [1.67879022E12, 2511.6000000000004], [1.67878988E12, 5485.357142857142], [1.67878979E12, 5757.2307692307695], [1.67878945E12, 5144.741935483869], [1.67879013E12, 4392.0], [1.6787897E12, 5722.259259259259], [1.67878936E12, 5008.935483870969], [1.67878927E12, 4543.624999999999], [1.67879004E12, 5819.678571428572], [1.67878995E12, 5681.535714285715], [1.67878961E12, 6259.461538461538], [1.67878918E12, 2304.7777777777783], [1.67878986E12, 5080.74193548387], [1.67878952E12, 4959.121212121212], [1.67878943E12, 4884.526315789473], [1.6787902E12, 2941.0], [1.67879011E12, 4732.766666666667], [1.67878977E12, 5576.9629629629635], [1.67878934E12, 5440.214285714286], [1.67879002E12, 5598.827586206898], [1.67878968E12, 5763.629629629629], [1.67878959E12, 4950.333333333333], [1.67878925E12, 3955.620689655172], [1.67878993E12, 5600.7037037037035], [1.6787895E12, 4901.903225806452], [1.67879018E12, 3443.3478260869565], [1.67878984E12, 5066.588235294116], [1.67878975E12, 5622.724137931034], [1.67878941E12, 4867.09375], [1.67879009E12, 5216.300000000001], [1.67878966E12, 5912.966666666666], [1.67878932E12, 5117.399999999999], [1.67878923E12, 3447.642857142858], [1.67879E12, 5535.3448275862065], [1.67878991E12, 5516.464285714286], [1.67878957E12, 5068.354838709677], [1.67878982E12, 5544.555555555556], [1.67878948E12, 5012.69696969697], [1.67878939E12, 5018.451612903225], [1.67879016E12, 4313.620689655173], [1.67879007E12, 5060.833333333333], [1.67878973E12, 5658.071428571429], [1.6787893E12, 4902.666666666668], [1.67878998E12, 5707.103448275862], [1.67878964E12, 5534.888888888889], [1.67878955E12, 4993.656250000002], [1.67878921E12, 2877.090909090909], [1.67879023E12, 2374.090909090909], [1.67878989E12, 5775.57142857143], [1.67878946E12, 4906.656249999999], [1.67879014E12, 4327.185185185184], [1.6787898E12, 5801.035714285714], [1.67878971E12, 5768.777777777777], [1.67878937E12, 4883.709677419354], [1.67879005E12, 5068.806451612904], [1.67878962E12, 5561.466666666666], [1.67878928E12, 4882.677419354839], [1.67878919E12, 2452.1875], [1.67878996E12, 5790.846153846153], [1.67878987E12, 5105.466666666668], [1.67878953E12, 4905.875], [1.67879021E12, 2691.7500000000005], [1.67878978E12, 5617.827586206897], [1.67878944E12, 4982.1290322580635], [1.67878935E12, 5250.424242424243], [1.67879012E12, 4821.0666666666675], [1.67879003E12, 5917.24], [1.67878969E12, 6131.2962962962965], [1.67878926E12, 4333.133333333334], [1.67878994E12, 5826.964285714286], [1.6787896E12, 6910.818181818182], [1.67878951E12, 5024.2], [1.67878917E12, 2635.2], [1.67879019E12, 3158.7916666666665], [1.67878985E12, 5139.933333333333], [1.67878942E12, 4867.099999999999], [1.6787901E12, 4909.4], [1.67878976E12, 5713.620689655172], [1.67878967E12, 5142.266666666666], [1.67878933E12, 5167.793103448275], [1.67879001E12, 5657.6923076923085], [1.67878958E12, 5054.666666666666], [1.67878924E12, 3630.807692307692], [1.67878992E12, 5738.5999999999985], [1.67878983E12, 5312.709677419354], [1.67878949E12, 4939.030303030304], [1.67879017E12, 3766.7199999999993], [1.67878974E12, 5643.714285714285], [1.6787894E12, 4900.903225806452], [1.67878931E12, 5041.71875], [1.67879008E12, 5011.48275862069], [1.67878999E12, 5720.586206896551], [1.67878965E12, 6842.7], [1.67878922E12, 3077.2727272727275], [1.6787899E12, 5593.51724137931], [1.67878956E12, 4895.121212121213], [1.67878947E12, 4888.354838709679], [1.67879024E12, 2394.0], [1.67879015E12, 4313.354838709678], [1.67878981E12, 5459.3448275862065], [1.67878938E12, 5094.906250000001], [1.67879006E12, 5091.687500000001], [1.67878972E12, 5921.607142857141]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[1.67878963E12, 4835.275862068966], [1.67878929E12, 4403.424242424241], [1.67878997E12, 5069.366666666666], [1.67878954E12, 4408.741935483871], [1.6787892E12, 2407.555555555555], [1.67879022E12, 2286.3750000000005], [1.67878988E12, 4927.896551724139], [1.67878979E12, 5125.269230769231], [1.67878945E12, 4569.096774193548], [1.67879013E12, 3907.8709677419356], [1.6787897E12, 5158.321428571429], [1.67878936E12, 4508.433333333333], [1.67878927E12, 4035.5161290322576], [1.67879004E12, 5142.178571428571], [1.67878995E12, 5094.035714285713], [1.67878961E12, 5808.407407407408], [1.67878918E12, 2034.3636363636367], [1.67878986E12, 4579.258064516128], [1.67878952E12, 4435.806451612904], [1.67878943E12, 4391.969696969698], [1.6787902E12, 2623.95], [1.67879011E12, 4249.096774193548], [1.67878977E12, 4990.814814814816], [1.67878934E12, 4912.9655172413795], [1.67879002E12, 5000.607142857143], [1.67878968E12, 5395.36], [1.67878959E12, 4445.363636363637], [1.67878925E12, 3603.9230769230767], [1.67878993E12, 5013.714285714284], [1.6787895E12, 4414.258064516129], [1.67879018E12, 3089.6153846153843], [1.67878984E12, 4518.999999999998], [1.67878975E12, 5020.999999999999], [1.67878941E12, 4363.812500000001], [1.67879009E12, 4602.032258064516], [1.67878966E12, 5124.592592592592], [1.67878932E12, 4565.096774193548], [1.67878923E12, 3150.9090909090905], [1.67879E12, 4986.400000000001], [1.67878991E12, 4931.7241379310335], [1.67878957E12, 4458.874999999998], [1.67878982E12, 4951.8], [1.67878948E12, 4477.342857142857], [1.67878939E12, 4464.15625], [1.67879016E12, 3964.851851851852], [1.67879007E12, 4544.906249999999], [1.67878973E12, 5039.148148148148], [1.6787893E12, 4365.749999999999], [1.67878998E12, 5107.214285714286], [1.67878964E12, 4948.392857142857], [1.67878955E12, 4504.322580645162], [1.67878921E12, 2594.7368421052633], [1.67879023E12, 2112.8333333333335], [1.67878989E12, 5145.8], [1.67878946E12, 4366.870967741935], [1.67879014E12, 3890.1874999999995], [1.6787898E12, 5269.222222222222], [1.67878971E12, 5241.857142857144], [1.67878937E12, 4391.794117647061], [1.67879005E12, 4552.064516129031], [1.67878962E12, 5022.566666666666], [1.67878928E12, 4406.862068965516], [1.67878919E12, 2211.076923076923], [1.67878996E12, 5081.36], [1.67878987E12, 4594.700000000001], [1.67878953E12, 4395.147058823529], [1.67879021E12, 2482.666666666667], [1.67878978E12, 5013.551724137932], [1.67878944E12, 4435.741935483871], [1.67878935E12, 4695.5999999999985], [1.67879012E12, 4289.6], [1.67879003E12, 5448.0], [1.67878969E12, 5440.4400000000005], [1.67878926E12, 3867.592592592592], [1.67878994E12, 5199.566666666667], [1.6787896E12, 6062.349999999999], [1.67878951E12, 4509.281249999999], [1.67878917E12, 2002.5], [1.67879019E12, 2821.1739130434776], [1.67878985E12, 4651.966666666667], [1.67878942E12, 4373.677419354839], [1.6787901E12, 4438.571428571428], [1.67878976E12, 5146.571428571428], [1.67878967E12, 4572.5], [1.67878933E12, 4658.448275862069], [1.67879001E12, 5117.413793103449], [1.67878958E12, 4536.741935483871], [1.67878924E12, 3309.8999999999996], [1.67878992E12, 5178.142857142857], [1.67878983E12, 4773.0], [1.67878949E12, 4423.968750000001], [1.67879017E12, 3440.2333333333336], [1.67878974E12, 5087.535714285715], [1.6787894E12, 4410.5], [1.67878931E12, 4551.75], [1.67879008E12, 4489.241379310345], [1.67878999E12, 5156.0], [1.67878965E12, 6314.88], [1.67878922E12, 2843.1200000000003], [1.6787899E12, 5047.96551724138], [1.67878956E12, 4415.633333333334], [1.67878947E12, 4396.5161290322585], [1.67879024E12, 2123.0], [1.67879015E12, 3807.708333333333], [1.67878981E12, 4875.689655172413], [1.67878938E12, 4548.4571428571435], [1.67879006E12, 4575.125], [1.67878972E12, 5342.2692307692305]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67879024E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.67878917E12, "maxY": 4.9E-324, "series": [{"data": [[1.67878963E12, 0.0], [1.67878929E12, 0.0], [1.67878997E12, 0.0], [1.67878954E12, 0.0], [1.6787892E12, 0.0], [1.67879022E12, 0.0], [1.67878988E12, 0.0], [1.67878979E12, 0.0], [1.67878945E12, 0.0], [1.67879013E12, 0.0], [1.6787897E12, 0.0], [1.67878936E12, 0.0], [1.67878927E12, 0.0], [1.67879004E12, 0.0], [1.67878995E12, 0.0], [1.67878961E12, 0.0], [1.67878918E12, 0.0], [1.67878986E12, 0.0], [1.67878952E12, 0.0], [1.67878943E12, 0.0], [1.6787902E12, 0.0], [1.67879011E12, 0.0], [1.67878977E12, 0.0], [1.67878934E12, 0.0], [1.67879002E12, 0.0], [1.67878968E12, 0.0], [1.67878959E12, 0.0], [1.67878925E12, 0.0], [1.67878993E12, 0.0], [1.6787895E12, 0.0], [1.67879018E12, 0.0], [1.67878984E12, 0.0], [1.67878975E12, 0.0], [1.67878941E12, 0.0], [1.67879009E12, 0.0], [1.67878966E12, 0.0], [1.67878932E12, 0.0], [1.67878923E12, 0.0], [1.67879E12, 0.0], [1.67878991E12, 0.0], [1.67878957E12, 0.0], [1.67878982E12, 0.0], [1.67878948E12, 0.0], [1.67878939E12, 0.0], [1.67879016E12, 0.0], [1.67879007E12, 0.0], [1.67878973E12, 0.0], [1.6787893E12, 0.0], [1.67878998E12, 0.0], [1.67878964E12, 0.0], [1.67878955E12, 0.0], [1.67878921E12, 0.0], [1.67879023E12, 0.0], [1.67878989E12, 0.0], [1.67878946E12, 0.0], [1.67879014E12, 0.0], [1.6787898E12, 0.0], [1.67878971E12, 0.0], [1.67878937E12, 0.0], [1.67879005E12, 0.0], [1.67878962E12, 0.0], [1.67878928E12, 0.0], [1.67878919E12, 0.0], [1.67878996E12, 0.0], [1.67878987E12, 0.0], [1.67878953E12, 0.0], [1.67879021E12, 0.0], [1.67878978E12, 0.0], [1.67878944E12, 0.0], [1.67878935E12, 0.0], [1.67879012E12, 0.0], [1.67879003E12, 0.0], [1.67878969E12, 0.0], [1.67878926E12, 0.0], [1.67878994E12, 0.0], [1.6787896E12, 0.0], [1.67878951E12, 0.0], [1.67878917E12, 0.0], [1.67879019E12, 0.0], [1.67878985E12, 0.0], [1.67878942E12, 0.0], [1.6787901E12, 0.0], [1.67878976E12, 0.0], [1.67878967E12, 0.0], [1.67878933E12, 0.0], [1.67879001E12, 0.0], [1.67878958E12, 0.0], [1.67878924E12, 0.0], [1.67878992E12, 0.0], [1.67878983E12, 0.0], [1.67878949E12, 0.0], [1.67879017E12, 0.0], [1.67878974E12, 0.0], [1.6787894E12, 0.0], [1.67878931E12, 0.0], [1.67879008E12, 0.0], [1.67878999E12, 0.0], [1.67878965E12, 0.0], [1.67878922E12, 0.0], [1.6787899E12, 0.0], [1.67878956E12, 0.0], [1.67878947E12, 0.0], [1.67879024E12, 0.0], [1.67879015E12, 0.0], [1.67878981E12, 0.0], [1.67878938E12, 0.0], [1.67879006E12, 0.0], [1.67878972E12, 0.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[1.67878963E12, 0.0], [1.67878929E12, 0.0], [1.67878997E12, 0.0], [1.67878954E12, 0.0], [1.6787892E12, 0.0], [1.67879022E12, 0.0], [1.67878988E12, 0.0], [1.67878979E12, 0.0], [1.67878945E12, 0.0], [1.67879013E12, 0.0], [1.6787897E12, 0.0], [1.67878936E12, 0.0], [1.67878927E12, 0.0], [1.67879004E12, 0.0], [1.67878995E12, 0.0], [1.67878961E12, 0.0], [1.67878918E12, 0.0], [1.67878986E12, 0.0], [1.67878952E12, 0.0], [1.67878943E12, 0.0], [1.6787902E12, 0.0], [1.67879011E12, 0.0], [1.67878977E12, 0.0], [1.67878934E12, 0.0], [1.67879002E12, 0.0], [1.67878968E12, 0.0], [1.67878959E12, 0.0], [1.67878925E12, 0.0], [1.67878993E12, 0.0], [1.6787895E12, 0.0], [1.67879018E12, 0.0], [1.67878984E12, 0.0], [1.67878975E12, 0.0], [1.67878941E12, 0.0], [1.67879009E12, 0.0], [1.67878966E12, 0.0], [1.67878932E12, 0.0], [1.67878923E12, 0.0], [1.67879E12, 0.0], [1.67878991E12, 0.0], [1.67878957E12, 0.0], [1.67878982E12, 0.0], [1.67878948E12, 0.0], [1.67878939E12, 0.0], [1.67879016E12, 0.0], [1.67879007E12, 0.0], [1.67878973E12, 0.0], [1.6787893E12, 0.0], [1.67878998E12, 0.0], [1.67878964E12, 0.0], [1.67878955E12, 0.0], [1.67878921E12, 0.0], [1.67879023E12, 0.0], [1.67878989E12, 0.0], [1.67878946E12, 0.0], [1.67879014E12, 0.0], [1.6787898E12, 0.0], [1.67878971E12, 0.0], [1.67878937E12, 0.0], [1.67879005E12, 0.0], [1.67878962E12, 0.0], [1.67878928E12, 0.0], [1.67878919E12, 0.0], [1.67878996E12, 0.0], [1.67878987E12, 0.0], [1.67878953E12, 0.0], [1.67879021E12, 0.0], [1.67878978E12, 0.0], [1.67878944E12, 0.0], [1.67878935E12, 0.0], [1.67879012E12, 0.0], [1.67879003E12, 0.0], [1.67878969E12, 0.0], [1.67878926E12, 0.0], [1.67878994E12, 0.0], [1.6787896E12, 0.0], [1.67878951E12, 0.0], [1.67878917E12, 0.0], [1.67879019E12, 0.0], [1.67878985E12, 0.0], [1.67878942E12, 0.0], [1.6787901E12, 0.0], [1.67878976E12, 0.0], [1.67878967E12, 0.0], [1.67878933E12, 0.0], [1.67879001E12, 0.0], [1.67878958E12, 0.0], [1.67878924E12, 0.0], [1.67878992E12, 0.0], [1.67878983E12, 0.0], [1.67878949E12, 0.0], [1.67879017E12, 0.0], [1.67878974E12, 0.0], [1.6787894E12, 0.0], [1.67878931E12, 0.0], [1.67879008E12, 0.0], [1.67878999E12, 0.0], [1.67878965E12, 0.0], [1.67878922E12, 0.0], [1.6787899E12, 0.0], [1.67878956E12, 0.0], [1.67878947E12, 0.0], [1.67879024E12, 0.0], [1.67879015E12, 0.0], [1.67878981E12, 0.0], [1.67878938E12, 0.0], [1.67879006E12, 0.0], [1.67878972E12, 0.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67879024E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.67878917E12, "maxY": 4.9E-324, "series": [{"data": [[1.67878963E12, 0.0], [1.67878929E12, 0.0], [1.67878997E12, 0.0], [1.67878954E12, 0.0], [1.6787892E12, 0.0], [1.67879022E12, 0.0], [1.67878988E12, 0.0], [1.67878979E12, 0.0], [1.67878945E12, 0.0], [1.67879013E12, 0.0], [1.6787897E12, 0.0], [1.67878936E12, 0.0], [1.67878927E12, 0.0], [1.67879004E12, 0.0], [1.67878995E12, 0.0], [1.67878961E12, 0.0], [1.67878918E12, 0.0], [1.67878986E12, 0.0], [1.67878952E12, 0.0], [1.67878943E12, 0.0], [1.6787902E12, 0.0], [1.67879011E12, 0.0], [1.67878977E12, 0.0], [1.67878934E12, 0.0], [1.67879002E12, 0.0], [1.67878968E12, 0.0], [1.67878959E12, 0.0], [1.67878925E12, 0.0], [1.67878993E12, 0.0], [1.6787895E12, 0.0], [1.67879018E12, 0.0], [1.67878984E12, 0.0], [1.67878975E12, 0.0], [1.67878941E12, 0.0], [1.67879009E12, 0.0], [1.67878966E12, 0.0], [1.67878932E12, 0.0], [1.67878923E12, 0.0], [1.67879E12, 0.0], [1.67878991E12, 0.0], [1.67878957E12, 0.0], [1.67878982E12, 0.0], [1.67878948E12, 0.0], [1.67878939E12, 0.0], [1.67879016E12, 0.0], [1.67879007E12, 0.0], [1.67878973E12, 0.0], [1.6787893E12, 0.0], [1.67878998E12, 0.0], [1.67878964E12, 0.0], [1.67878955E12, 0.0], [1.67878921E12, 0.0], [1.67879023E12, 0.0], [1.67878989E12, 0.0], [1.67878946E12, 0.0], [1.67879014E12, 0.0], [1.6787898E12, 0.0], [1.67878971E12, 0.0], [1.67878937E12, 0.0], [1.67879005E12, 0.0], [1.67878962E12, 0.0], [1.67878928E12, 0.0], [1.67878919E12, 0.0], [1.67878996E12, 0.0], [1.67878987E12, 0.0], [1.67878953E12, 0.0], [1.67879021E12, 0.0], [1.67878978E12, 0.0], [1.67878944E12, 0.0], [1.67878935E12, 0.0], [1.67879012E12, 0.0], [1.67879003E12, 0.0], [1.67878969E12, 0.0], [1.67878926E12, 0.0], [1.67878994E12, 0.0], [1.6787896E12, 0.0], [1.67878951E12, 0.0], [1.67878917E12, 0.0], [1.67879019E12, 0.0], [1.67878985E12, 0.0], [1.67878942E12, 0.0], [1.6787901E12, 0.0], [1.67878976E12, 0.0], [1.67878967E12, 0.0], [1.67878933E12, 0.0], [1.67879001E12, 0.0], [1.67878958E12, 0.0], [1.67878924E12, 0.0], [1.67878992E12, 0.0], [1.67878983E12, 0.0], [1.67878949E12, 0.0], [1.67879017E12, 0.0], [1.67878974E12, 0.0], [1.6787894E12, 0.0], [1.67878931E12, 0.0], [1.67879008E12, 0.0], [1.67878999E12, 0.0], [1.67878965E12, 0.0], [1.67878922E12, 0.0], [1.6787899E12, 0.0], [1.67878956E12, 0.0], [1.67878947E12, 0.0], [1.67879024E12, 0.0], [1.67879015E12, 0.0], [1.67878981E12, 0.0], [1.67878938E12, 0.0], [1.67879006E12, 0.0], [1.67878972E12, 0.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[1.67878963E12, 0.0], [1.67878929E12, 0.0], [1.67878997E12, 0.0], [1.67878954E12, 0.0], [1.6787892E12, 0.0], [1.67879022E12, 0.0], [1.67878988E12, 0.0], [1.67878979E12, 0.0], [1.67878945E12, 0.0], [1.67879013E12, 0.0], [1.6787897E12, 0.0], [1.67878936E12, 0.0], [1.67878927E12, 0.0], [1.67879004E12, 0.0], [1.67878995E12, 0.0], [1.67878961E12, 0.0], [1.67878918E12, 0.0], [1.67878986E12, 0.0], [1.67878952E12, 0.0], [1.67878943E12, 0.0], [1.6787902E12, 0.0], [1.67879011E12, 0.0], [1.67878977E12, 0.0], [1.67878934E12, 0.0], [1.67879002E12, 0.0], [1.67878968E12, 0.0], [1.67878959E12, 0.0], [1.67878925E12, 0.0], [1.67878993E12, 0.0], [1.6787895E12, 0.0], [1.67879018E12, 0.0], [1.67878984E12, 0.0], [1.67878975E12, 0.0], [1.67878941E12, 0.0], [1.67879009E12, 0.0], [1.67878966E12, 0.0], [1.67878932E12, 0.0], [1.67878923E12, 0.0], [1.67879E12, 0.0], [1.67878991E12, 0.0], [1.67878957E12, 0.0], [1.67878982E12, 0.0], [1.67878948E12, 0.0], [1.67878939E12, 0.0], [1.67879016E12, 0.0], [1.67879007E12, 0.0], [1.67878973E12, 0.0], [1.6787893E12, 0.0], [1.67878998E12, 0.0], [1.67878964E12, 0.0], [1.67878955E12, 0.0], [1.67878921E12, 0.0], [1.67879023E12, 0.0], [1.67878989E12, 0.0], [1.67878946E12, 0.0], [1.67879014E12, 0.0], [1.6787898E12, 0.0], [1.67878971E12, 0.0], [1.67878937E12, 0.0], [1.67879005E12, 0.0], [1.67878962E12, 0.0], [1.67878928E12, 0.0], [1.67878919E12, 0.0], [1.67878996E12, 0.0], [1.67878987E12, 0.0], [1.67878953E12, 0.0], [1.67879021E12, 0.0], [1.67878978E12, 0.0], [1.67878944E12, 0.0], [1.67878935E12, 0.0], [1.67879012E12, 0.0], [1.67879003E12, 0.0], [1.67878969E12, 0.0], [1.67878926E12, 0.0], [1.67878994E12, 0.0], [1.6787896E12, 0.0], [1.67878951E12, 0.0], [1.67878917E12, 0.0], [1.67879019E12, 0.0], [1.67878985E12, 0.0], [1.67878942E12, 0.0], [1.6787901E12, 0.0], [1.67878976E12, 0.0], [1.67878967E12, 0.0], [1.67878933E12, 0.0], [1.67879001E12, 0.0], [1.67878958E12, 0.0], [1.67878924E12, 0.0], [1.67878992E12, 0.0], [1.67878983E12, 0.0], [1.67878949E12, 0.0], [1.67879017E12, 0.0], [1.67878974E12, 0.0], [1.6787894E12, 0.0], [1.67878931E12, 0.0], [1.67879008E12, 0.0], [1.67878999E12, 0.0], [1.67878965E12, 0.0], [1.67878922E12, 0.0], [1.6787899E12, 0.0], [1.67878956E12, 0.0], [1.67878947E12, 0.0], [1.67879024E12, 0.0], [1.67879015E12, 0.0], [1.67878981E12, 0.0], [1.67878938E12, 0.0], [1.67879006E12, 0.0], [1.67878972E12, 0.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67879024E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1853.0, "minX": 1.67878917E12, "maxY": 8159.0, "series": [{"data": [[1.67878963E12, 5809.0], [1.67878929E12, 5296.0], [1.67878997E12, 6251.0], [1.67878954E12, 5234.0], [1.6787892E12, 2956.0], [1.67879022E12, 2673.0], [1.67878988E12, 5988.0], [1.67878979E12, 6172.0], [1.67878945E12, 5638.0], [1.67879013E12, 4806.0], [1.6787897E12, 6313.0], [1.67878936E12, 5524.0], [1.67878927E12, 4934.0], [1.67879004E12, 6658.0], [1.67878995E12, 6281.0], [1.67878961E12, 7716.0], [1.67878918E12, 2549.0], [1.67878986E12, 5596.0], [1.67878952E12, 5434.0], [1.67878943E12, 5242.0], [1.6787902E12, 3219.0], [1.67879011E12, 5048.0], [1.67878977E12, 5966.0], [1.67878934E12, 5880.0], [1.67879002E12, 6260.0], [1.67878968E12, 6932.0], [1.67878959E12, 5334.0], [1.67878925E12, 4439.0], [1.67878993E12, 6041.0], [1.6787895E12, 5245.0], [1.67879018E12, 3765.0], [1.67878984E12, 5560.0], [1.67878975E12, 6137.0], [1.67878941E12, 5248.0], [1.67879009E12, 5570.0], [1.67878966E12, 7492.0], [1.67878932E12, 5673.0], [1.67878923E12, 3927.0], [1.67879E12, 5957.0], [1.67878991E12, 5928.0], [1.67878957E12, 5535.0], [1.67878982E12, 6002.0], [1.67878948E12, 5432.0], [1.67878939E12, 5503.0], [1.67879016E12, 4968.0], [1.67879007E12, 5428.0], [1.67878973E12, 6410.0], [1.6787893E12, 5282.0], [1.67878998E12, 6231.0], [1.67878964E12, 5988.0], [1.67878955E12, 5442.0], [1.67878921E12, 3243.0], [1.67879023E12, 2626.0], [1.67878989E12, 6282.0], [1.67878946E12, 5382.0], [1.67879014E12, 4696.0], [1.6787898E12, 6557.0], [1.67878971E12, 6710.0], [1.67878937E12, 5259.0], [1.67879005E12, 5647.0], [1.67878962E12, 6372.0], [1.67878928E12, 5378.0], [1.67878919E12, 2750.0], [1.67878996E12, 6395.0], [1.67878987E12, 5587.0], [1.67878953E12, 5300.0], [1.67879021E12, 2941.0], [1.67878978E12, 6004.0], [1.67878944E12, 5486.0], [1.67878935E12, 6202.0], [1.67879012E12, 5281.0], [1.67879003E12, 6844.0], [1.67878969E12, 7334.0], [1.67878926E12, 4701.0], [1.67878994E12, 6378.0], [1.6787896E12, 8159.0], [1.67878951E12, 5442.0], [1.67878917E12, 3590.0], [1.67879019E12, 3567.0], [1.67878985E12, 5575.0], [1.67878942E12, 5188.0], [1.6787901E12, 5440.0], [1.67878976E12, 6349.0], [1.67878967E12, 5610.0], [1.67878933E12, 5625.0], [1.67879001E12, 6314.0], [1.67878958E12, 5460.0], [1.67878924E12, 3976.0], [1.67878992E12, 6334.0], [1.67878983E12, 6104.0], [1.67878949E12, 5323.0], [1.67879017E12, 4440.0], [1.67878974E12, 6157.0], [1.6787894E12, 5286.0], [1.67878931E12, 5412.0], [1.67879008E12, 5537.0], [1.67878999E12, 6329.0], [1.67878965E12, 7898.0], [1.67878922E12, 3463.0], [1.6787899E12, 6222.0], [1.67878956E12, 5254.0], [1.67878947E12, 5250.0], [1.67879024E12, 2394.0], [1.67879015E12, 4717.0], [1.67878981E12, 5877.0], [1.67878938E12, 5558.0], [1.67879006E12, 5423.0], [1.67878972E12, 6836.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.67878963E12, 5619.0], [1.67878929E12, 5141.0], [1.67878997E12, 6022.3], [1.67878954E12, 5171.3], [1.6787892E12, 2854.2000000000003], [1.67879022E12, 2657.6], [1.67878988E12, 5879.8], [1.67878979E12, 6099.1], [1.67878945E12, 5436.7], [1.67879013E12, 4622.2], [1.6787897E12, 6173.8], [1.67878936E12, 5360.8], [1.67878927E12, 4744.400000000001], [1.67879004E12, 6311.1], [1.67878995E12, 5950.900000000001], [1.67878961E12, 7287.4], [1.67878918E12, 2501.2000000000003], [1.67878986E12, 5308.8], [1.67878952E12, 5140.5], [1.67878943E12, 5153.4], [1.6787902E12, 3190.0], [1.67879011E12, 4987.8], [1.67878977E12, 5845.0], [1.67878934E12, 5723.2], [1.67879002E12, 5934.6], [1.67878968E12, 6585.1], [1.67878959E12, 5154.2], [1.67878925E12, 4166.8], [1.67878993E12, 5933.8], [1.6787895E12, 5164.2], [1.67879018E12, 3731.0], [1.67878984E12, 5356.0], [1.67878975E12, 5901.5], [1.67878941E12, 5149.0], [1.67879009E12, 5447.2], [1.67878966E12, 6431.400000000001], [1.67878932E12, 5470.400000000001], [1.67878923E12, 3708.7999999999997], [1.67879E12, 5795.0], [1.67878991E12, 5865.8], [1.67878957E12, 5219.8], [1.67878982E12, 5834.8], [1.67878948E12, 5191.1], [1.67878939E12, 5262.0], [1.67879016E12, 4557.8], [1.67879007E12, 5312.8], [1.67878973E12, 5945.2], [1.6787893E12, 5160.2], [1.67878998E12, 6125.2], [1.67878964E12, 5877.2], [1.67878955E12, 5243.8], [1.67878921E12, 3158.4000000000005], [1.67879023E12, 2538.6], [1.67878989E12, 6189.0], [1.67878946E12, 5155.8], [1.67879014E12, 4592.0], [1.6787898E12, 6120.4], [1.67878971E12, 6141.6], [1.67878937E12, 5200.6], [1.67879005E12, 5299.0], [1.67878962E12, 5879.7], [1.67878928E12, 5212.7], [1.67878919E12, 2647.0], [1.67878996E12, 6032.2], [1.67878987E12, 5386.0], [1.67878953E12, 5154.4], [1.67879021E12, 2883.5], [1.67878978E12, 5935.8], [1.67878944E12, 5180.3], [1.67878935E12, 5572.2], [1.67879012E12, 4976.8], [1.67879003E12, 6283.200000000001], [1.67878969E12, 6656.1], [1.67878926E12, 4609.0], [1.67878994E12, 6203.4], [1.6787896E12, 7392.0], [1.67878951E12, 5235.0], [1.67878917E12, 3590.0], [1.67879019E12, 3502.6000000000004], [1.67878985E12, 5338.6], [1.67878942E12, 5115.6], [1.6787901E12, 5222.8], [1.67878976E12, 6085.6], [1.67878967E12, 5431.400000000001], [1.67878933E12, 5402.1], [1.67879001E12, 5943.2], [1.67878958E12, 5266.0], [1.67878924E12, 3820.4], [1.67878992E12, 6100.2], [1.67878983E12, 5774.8], [1.67878949E12, 5197.6], [1.67879017E12, 3923.8], [1.67878974E12, 5969.400000000001], [1.6787894E12, 5139.6], [1.67878931E12, 5309.5], [1.67879008E12, 5234.2], [1.67878999E12, 6104.0], [1.67878965E12, 7491.0], [1.67878922E12, 3346.4], [1.6787899E12, 5902.9], [1.67878956E12, 5156.8], [1.67878947E12, 5108.3], [1.67879024E12, 2394.0], [1.67879015E12, 4646.4], [1.67878981E12, 5765.4], [1.67878938E12, 5364.0], [1.67879006E12, 5298.5], [1.67878972E12, 6313.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.67878963E12, 5809.0], [1.67878929E12, 5296.0], [1.67878997E12, 6251.0], [1.67878954E12, 5234.0], [1.6787892E12, 2956.0], [1.67879022E12, 2673.0], [1.67878988E12, 5988.0], [1.67878979E12, 6172.0], [1.67878945E12, 5638.0], [1.67879013E12, 4806.0], [1.6787897E12, 6313.0], [1.67878936E12, 5524.0], [1.67878927E12, 4934.0], [1.67879004E12, 6658.0], [1.67878995E12, 6281.0], [1.67878961E12, 7716.0], [1.67878918E12, 2549.0], [1.67878986E12, 5596.0], [1.67878952E12, 5434.0], [1.67878943E12, 5242.0], [1.6787902E12, 3219.0], [1.67879011E12, 5048.0], [1.67878977E12, 5966.0], [1.67878934E12, 5880.0], [1.67879002E12, 6260.0], [1.67878968E12, 6932.0], [1.67878959E12, 5334.0], [1.67878925E12, 4439.0], [1.67878993E12, 6041.0], [1.6787895E12, 5245.0], [1.67879018E12, 3765.0], [1.67878984E12, 5560.0], [1.67878975E12, 6137.0], [1.67878941E12, 5248.0], [1.67879009E12, 5570.0], [1.67878966E12, 7492.0], [1.67878932E12, 5673.0], [1.67878923E12, 3927.0], [1.67879E12, 5957.0], [1.67878991E12, 5928.0], [1.67878957E12, 5535.0], [1.67878982E12, 6002.0], [1.67878948E12, 5432.0], [1.67878939E12, 5503.0], [1.67879016E12, 4968.0], [1.67879007E12, 5428.0], [1.67878973E12, 6410.0], [1.6787893E12, 5282.0], [1.67878998E12, 6231.0], [1.67878964E12, 5988.0], [1.67878955E12, 5442.0], [1.67878921E12, 3243.0], [1.67879023E12, 2626.0], [1.67878989E12, 6282.0], [1.67878946E12, 5382.0], [1.67879014E12, 4696.0], [1.6787898E12, 6557.0], [1.67878971E12, 6710.0], [1.67878937E12, 5259.0], [1.67879005E12, 5647.0], [1.67878962E12, 6372.0], [1.67878928E12, 5378.0], [1.67878919E12, 2750.0], [1.67878996E12, 6395.0], [1.67878987E12, 5587.0], [1.67878953E12, 5300.0], [1.67879021E12, 2941.0], [1.67878978E12, 6004.0], [1.67878944E12, 5486.0], [1.67878935E12, 6202.0], [1.67879012E12, 5281.0], [1.67879003E12, 6844.0], [1.67878969E12, 7334.0], [1.67878926E12, 4701.0], [1.67878994E12, 6378.0], [1.6787896E12, 8159.0], [1.67878951E12, 5442.0], [1.67878917E12, 3590.0], [1.67879019E12, 3567.0], [1.67878985E12, 5575.0], [1.67878942E12, 5188.0], [1.6787901E12, 5440.0], [1.67878976E12, 6349.0], [1.67878967E12, 5610.0], [1.67878933E12, 5625.0], [1.67879001E12, 6314.0], [1.67878958E12, 5460.0], [1.67878924E12, 3976.0], [1.67878992E12, 6334.0], [1.67878983E12, 6104.0], [1.67878949E12, 5323.0], [1.67879017E12, 4440.0], [1.67878974E12, 6157.0], [1.6787894E12, 5286.0], [1.67878931E12, 5412.0], [1.67879008E12, 5537.0], [1.67878999E12, 6329.0], [1.67878965E12, 7898.0], [1.67878922E12, 3463.0], [1.6787899E12, 6222.0], [1.67878956E12, 5254.0], [1.67878947E12, 5250.0], [1.67879024E12, 2394.0], [1.67879015E12, 4717.0], [1.67878981E12, 5877.0], [1.67878938E12, 5558.0], [1.67879006E12, 5423.0], [1.67878972E12, 6836.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.67878963E12, 5758.8], [1.67878929E12, 5260.2], [1.67878997E12, 6176.3], [1.67878954E12, 5191.85], [1.6787892E12, 2892.1], [1.67879022E12, 2671.8], [1.67878988E12, 5929.0], [1.67878979E12, 6129.6], [1.67878945E12, 5615.9], [1.67879013E12, 4706.2], [1.6787897E12, 6271.0], [1.67878936E12, 5415.6], [1.67878927E12, 4905.4], [1.67879004E12, 6396.9], [1.67878995E12, 6001.45], [1.67878961E12, 7477.9], [1.67878918E12, 2547.0], [1.67878986E12, 5429.9], [1.67878952E12, 5287.0], [1.67878943E12, 5210.4], [1.6787902E12, 3216.0], [1.67879011E12, 5020.8], [1.67878977E12, 5878.0], [1.67878934E12, 5803.0], [1.67879002E12, 6038.299999999999], [1.67878968E12, 6729.799999999999], [1.67878959E12, 5294.8], [1.67878925E12, 4184.4], [1.67878993E12, 6012.4], [1.6787895E12, 5202.85], [1.67879018E12, 3739.5], [1.67878984E12, 5400.8], [1.67878975E12, 6071.45], [1.67878941E12, 5168.75], [1.67879009E12, 5542.1], [1.67878966E12, 6901.0], [1.67878932E12, 5552.5], [1.67878923E12, 3846.8], [1.67879E12, 5920.0], [1.67878991E12, 5917.4], [1.67878957E12, 5471.599999999999], [1.67878982E12, 5926.099999999999], [1.67878948E12, 5341.7], [1.67878939E12, 5382.0], [1.67879016E12, 4815.5], [1.67879007E12, 5390.65], [1.67878973E12, 6074.599999999999], [1.6787893E12, 5181.8], [1.67878998E12, 6170.099999999999], [1.67878964E12, 5943.2], [1.67878955E12, 5343.4], [1.67878921E12, 3216.4], [1.67879023E12, 2612.6], [1.67878989E12, 6270.9], [1.67878946E12, 5195.6], [1.67879014E12, 4685.0], [1.6787898E12, 6382.0], [1.67878971E12, 6575.599999999999], [1.67878937E12, 5240.4], [1.67879005E12, 5351.4], [1.67878962E12, 6189.599999999999], [1.67878928E12, 5303.95], [1.67878919E12, 2706.5], [1.67878996E12, 6247.6], [1.67878987E12, 5504.4], [1.67878953E12, 5279.1], [1.67879021E12, 2926.0], [1.67878978E12, 5971.5], [1.67878944E12, 5216.55], [1.67878935E12, 5934.4], [1.67879012E12, 5104.599999999999], [1.67879003E12, 6680.6], [1.67878969E12, 6845.95], [1.67878926E12, 4656.5], [1.67878994E12, 6297.6], [1.6787896E12, 7604.6], [1.67878951E12, 5335.599999999999], [1.67878917E12, 3590.0], [1.67879019E12, 3547.0], [1.67878985E12, 5517.099999999999], [1.67878942E12, 5128.3], [1.6787901E12, 5380.6], [1.67878976E12, 6239.6], [1.67878967E12, 5516.0], [1.67878933E12, 5545.5], [1.67879001E12, 6071.799999999999], [1.67878958E12, 5390.4], [1.67878924E12, 3932.75], [1.67878992E12, 6246.2], [1.67878983E12, 5887.0], [1.67878949E12, 5249.0], [1.67879017E12, 4265.8], [1.67878974E12, 6085.85], [1.6787894E12, 5233.4], [1.67878931E12, 5382.0], [1.67879008E12, 5308.0], [1.67878999E12, 6225.25], [1.67878965E12, 7685.799999999999], [1.67878922E12, 3372.2], [1.6787899E12, 6141.25], [1.67878956E12, 5177.2], [1.67878947E12, 5189.75], [1.67879024E12, 2394.0], [1.67879015E12, 4699.6], [1.67878981E12, 5807.2], [1.67878938E12, 5428.4], [1.67879006E12, 5378.25], [1.67878972E12, 6620.75]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.67878963E12, 4167.0], [1.67878929E12, 3839.0], [1.67878997E12, 4328.0], [1.67878954E12, 3846.0], [1.6787892E12, 2206.0], [1.67879022E12, 2114.0], [1.67878988E12, 4300.0], [1.67878979E12, 4356.0], [1.67878945E12, 3989.0], [1.67879013E12, 3536.0], [1.6787897E12, 4424.0], [1.67878936E12, 3810.0], [1.67878927E12, 3581.0], [1.67879004E12, 4188.0], [1.67878995E12, 4232.0], [1.67878961E12, 4749.0], [1.67878918E12, 1895.0], [1.67878986E12, 3914.0], [1.67878952E12, 3897.0], [1.67878943E12, 3801.0], [1.6787902E12, 2364.0], [1.67879011E12, 3800.0], [1.67878977E12, 4294.0], [1.67878934E12, 4174.0], [1.67879002E12, 4251.0], [1.67878968E12, 4122.0], [1.67878959E12, 3817.0], [1.67878925E12, 3260.0], [1.67878993E12, 4306.0], [1.6787895E12, 3856.0], [1.67879018E12, 2814.0], [1.67878984E12, 3944.0], [1.67878975E12, 4302.0], [1.67878941E12, 3774.0], [1.67879009E12, 3899.0], [1.67878966E12, 4490.0], [1.67878932E12, 4146.0], [1.67878923E12, 2806.0], [1.67879E12, 4307.0], [1.67878991E12, 4254.0], [1.67878957E12, 3850.0], [1.67878982E12, 4297.0], [1.67878948E12, 3955.0], [1.67878939E12, 3775.0], [1.67879016E12, 3487.0], [1.67879007E12, 3954.0], [1.67878973E12, 4360.0], [1.6787893E12, 3774.0], [1.67878998E12, 4519.0], [1.67878964E12, 4119.0], [1.67878955E12, 3793.0], [1.67878921E12, 2417.0], [1.67879023E12, 1853.0], [1.67878989E12, 4436.0], [1.67878946E12, 3778.0], [1.67879014E12, 3389.0], [1.6787898E12, 4562.0], [1.67878971E12, 4319.0], [1.67878937E12, 3808.0], [1.67879005E12, 3844.0], [1.67878962E12, 4466.0], [1.67878928E12, 3786.0], [1.67878919E12, 2058.0], [1.67878996E12, 4257.0], [1.67878987E12, 3887.0], [1.67878953E12, 3778.0], [1.67879021E12, 2198.0], [1.67878978E12, 4312.0], [1.67878944E12, 3780.0], [1.67878935E12, 3796.0], [1.67879012E12, 3873.0], [1.67879003E12, 4701.0], [1.67878969E12, 4642.0], [1.67878926E12, 3462.0], [1.67878994E12, 4267.0], [1.6787896E12, 4767.0], [1.67878951E12, 3956.0], [1.67878917E12, 1953.0], [1.67879019E12, 2491.0], [1.67878985E12, 4037.0], [1.67878942E12, 3776.0], [1.6787901E12, 3775.0], [1.67878976E12, 4437.0], [1.67878967E12, 3987.0], [1.67878933E12, 3957.0], [1.67879001E12, 4362.0], [1.67878958E12, 3952.0], [1.67878924E12, 3036.0], [1.67878992E12, 4370.0], [1.67878983E12, 4230.0], [1.67878949E12, 3870.0], [1.67879017E12, 3025.0], [1.67878974E12, 4477.0], [1.6787894E12, 3757.0], [1.67878931E12, 3902.0], [1.67879008E12, 3843.0], [1.67878999E12, 4448.0], [1.67878965E12, 5149.0], [1.67878922E12, 2577.0], [1.6787899E12, 4263.0], [1.67878956E12, 3767.0], [1.67878947E12, 3835.0], [1.67879024E12, 2082.0], [1.67879015E12, 3365.0], [1.67878981E12, 4244.0], [1.67878938E12, 3892.0], [1.67879006E12, 3984.0], [1.67878972E12, 4420.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.67878963E12, 5132.0], [1.67878929E12, 4707.0], [1.67878997E12, 5421.0], [1.67878954E12, 4726.0], [1.6787892E12, 2527.0], [1.67879022E12, 2393.0], [1.67878988E12, 5271.0], [1.67878979E12, 5455.5], [1.67878945E12, 4868.5], [1.67879013E12, 4162.0], [1.6787897E12, 5499.0], [1.67878936E12, 4805.0], [1.67878927E12, 4322.0], [1.67879004E12, 5495.0], [1.67878995E12, 5413.5], [1.67878961E12, 5828.0], [1.67878918E12, 2171.5], [1.67878986E12, 4813.0], [1.67878952E12, 4750.5], [1.67878943E12, 4717.0], [1.6787902E12, 2792.0], [1.67879011E12, 4528.0], [1.67878977E12, 5358.0], [1.67878934E12, 5195.0], [1.67879002E12, 5338.0], [1.67878968E12, 5392.0], [1.67878959E12, 4754.0], [1.67878925E12, 3747.0], [1.67878993E12, 5341.0], [1.6787895E12, 4696.0], [1.67879018E12, 3277.0], [1.67878984E12, 4849.0], [1.67878975E12, 5371.5], [1.67878941E12, 4685.5], [1.67879009E12, 4914.0], [1.67878966E12, 5380.0], [1.67878932E12, 4857.0], [1.67878923E12, 3284.0], [1.67879E12, 5310.0], [1.67878991E12, 5254.0], [1.67878957E12, 4770.0], [1.67878982E12, 5312.0], [1.67878948E12, 4792.5], [1.67878939E12, 4780.0], [1.67879016E12, 4117.5], [1.67879007E12, 4874.5], [1.67878973E12, 5344.0], [1.6787893E12, 4708.0], [1.67878998E12, 5391.0], [1.67878964E12, 5297.0], [1.67878955E12, 4775.0], [1.67878921E12, 2745.0], [1.67879023E12, 2208.0], [1.67878989E12, 5521.0], [1.67878946E12, 4712.0], [1.67879014E12, 4160.0], [1.6787898E12, 5416.0], [1.67878971E12, 5416.0], [1.67878937E12, 4659.0], [1.67879005E12, 4840.5], [1.67878962E12, 5212.5], [1.67878928E12, 4599.0], [1.67878919E12, 2359.0], [1.67878996E12, 5384.0], [1.67878987E12, 4835.5], [1.67878953E12, 4690.0], [1.67879021E12, 2601.0], [1.67878978E12, 5370.0], [1.67878944E12, 4735.5], [1.67878935E12, 4892.0], [1.67879012E12, 4547.5], [1.67879003E12, 5560.0], [1.67878969E12, 5737.0], [1.67878926E12, 4170.0], [1.67878994E12, 5559.5], [1.6787896E12, 6643.0], [1.67878951E12, 4822.0], [1.67878917E12, 2220.0], [1.67879019E12, 2983.0], [1.67878985E12, 4912.5], [1.67878942E12, 4681.0], [1.6787901E12, 4683.0], [1.67878976E12, 5478.0], [1.67878967E12, 4919.5], [1.67878933E12, 4946.5], [1.67879001E12, 5369.0], [1.67878958E12, 4847.0], [1.67878924E12, 3454.5], [1.67878992E12, 5441.0], [1.67878983E12, 4971.0], [1.67878949E12, 4695.0], [1.67879017E12, 3558.0], [1.67878974E12, 5353.0], [1.6787894E12, 4686.0], [1.67878931E12, 4825.0], [1.67879008E12, 4791.5], [1.67878999E12, 5432.0], [1.67878965E12, 6597.0], [1.67878922E12, 2949.0], [1.6787899E12, 5346.0], [1.67878956E12, 4724.0], [1.67878947E12, 4724.5], [1.67879024E12, 2143.5], [1.67879015E12, 4073.0], [1.67878981E12, 5178.0], [1.67878938E12, 4876.0], [1.67879006E12, 4896.5], [1.67878972E12, 5576.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67879024E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2418.0, "minX": 1.0, "maxY": 4911.5, "series": [{"data": [[2.0, 3156.0], [8.0, 4909.0], [9.0, 4812.5], [10.0, 4816.5], [11.0, 4680.0], [3.0, 4823.5], [12.0, 4763.0], [13.0, 4747.0], [1.0, 2418.0], [4.0, 4833.0], [5.0, 4892.0], [6.0, 4911.5], [7.0, 4896.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[2.0, 0.0], [8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [3.0, 0.0], [12.0, 0.0], [13.0, 0.0], [1.0, 0.0], [4.0, 0.0], [5.0, 0.0], [6.0, 0.0], [7.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.67878917E12, "maxY": 7.1, "series": [{"data": [[1.67878963E12, 5.8], [1.67878929E12, 6.5], [1.67878997E12, 5.8], [1.67878954E12, 6.6], [1.6787892E12, 4.0], [1.67879022E12, 3.0], [1.67878988E12, 5.7], [1.67878979E12, 5.2], [1.67878945E12, 6.2], [1.67879013E12, 5.6], [1.6787897E12, 5.5], [1.67878936E12, 6.1], [1.67878927E12, 6.5], [1.67879004E12, 5.6], [1.67878995E12, 5.6], [1.67878961E12, 5.3], [1.67878918E12, 2.3], [1.67878986E12, 6.2], [1.67878952E12, 6.4], [1.67878943E12, 7.1], [1.6787902E12, 3.7], [1.67879011E12, 6.1], [1.67878977E12, 5.4], [1.67878934E12, 5.7], [1.67879002E12, 5.7], [1.67878968E12, 5.2], [1.67878959E12, 6.3], [1.67878925E12, 5.7], [1.67878993E12, 5.5], [1.6787895E12, 6.2], [1.67879018E12, 4.7], [1.67878984E12, 6.7], [1.67878975E12, 5.8], [1.67878941E12, 6.4], [1.67879009E12, 6.0], [1.67878966E12, 5.7], [1.67878932E12, 6.1], [1.67878923E12, 5.2], [1.67879E12, 5.9], [1.67878991E12, 5.7], [1.67878957E12, 6.3], [1.67878982E12, 5.7], [1.67878948E12, 6.8], [1.67878939E12, 6.3], [1.67879016E12, 5.6], [1.67879007E12, 6.1], [1.67878973E12, 5.5], [1.6787893E12, 6.5], [1.67878998E12, 5.7], [1.67878964E12, 5.5], [1.67878955E12, 6.3], [1.67878921E12, 4.3], [1.67879023E12, 1.9], [1.67878989E12, 5.3], [1.67878946E12, 6.3], [1.67879014E12, 5.8], [1.6787898E12, 5.5], [1.67878971E12, 5.5], [1.67878937E12, 6.5], [1.67879005E12, 6.2], [1.67878962E12, 6.0], [1.67878928E12, 6.2], [1.67878919E12, 3.1], [1.67878996E12, 5.1], [1.67878987E12, 6.0], [1.67878953E12, 6.6], [1.67879021E12, 3.1], [1.67878978E12, 5.8], [1.67878944E12, 6.2], [1.67878935E12, 6.3], [1.67879012E12, 5.8], [1.67879003E12, 5.1], [1.67878969E12, 5.2], [1.67878926E12, 6.0], [1.67878994E12, 5.8], [1.6787896E12, 4.2], [1.67878951E12, 6.2], [1.67878917E12, 1.0], [1.67879019E12, 4.4], [1.67878985E12, 6.0], [1.67878942E12, 6.1], [1.6787901E12, 6.2], [1.67878976E12, 5.7], [1.67878967E12, 6.2], [1.67878933E12, 5.8], [1.67879001E12, 5.5], [1.67878958E12, 6.1], [1.67878924E12, 5.9], [1.67878992E12, 5.3], [1.67878983E12, 6.1], [1.67878949E12, 6.5], [1.67879017E12, 5.0], [1.67878974E12, 5.6], [1.6787894E12, 6.3], [1.67878931E12, 6.4], [1.67879008E12, 5.8], [1.67878999E12, 5.4], [1.67878965E12, 4.5], [1.67878922E12, 5.0], [1.6787899E12, 5.8], [1.67878956E12, 6.3], [1.67878947E12, 6.2], [1.67879024E12, 0.2], [1.67879015E12, 5.4], [1.67878981E12, 5.8], [1.67878938E12, 6.7], [1.67879006E12, 6.4], [1.67878972E12, 5.4]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67879024E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.4, "minX": 1.67878917E12, "maxY": 7.1, "series": [{"data": [[1.67878963E12, 5.8], [1.67878929E12, 6.5], [1.67878997E12, 5.8], [1.67878954E12, 6.6], [1.6787892E12, 3.7], [1.67879022E12, 3.1], [1.67878988E12, 5.7], [1.67878979E12, 5.2], [1.67878945E12, 6.2], [1.67879013E12, 5.7], [1.6787897E12, 5.5], [1.67878936E12, 6.1], [1.67878927E12, 6.3], [1.67879004E12, 5.6], [1.67878995E12, 5.6], [1.67878961E12, 5.3], [1.67878918E12, 2.0], [1.67878986E12, 6.2], [1.67878952E12, 6.4], [1.67878943E12, 7.1], [1.6787902E12, 3.9], [1.67879011E12, 6.1], [1.67878977E12, 5.4], [1.67878934E12, 5.7], [1.67879002E12, 5.7], [1.67878968E12, 5.2], [1.67878959E12, 6.3], [1.67878925E12, 5.5], [1.67878993E12, 5.5], [1.6787895E12, 6.2], [1.67879018E12, 4.9], [1.67878984E12, 6.7], [1.67878975E12, 5.8], [1.67878941E12, 6.4], [1.67879009E12, 6.1], [1.67878966E12, 5.7], [1.67878932E12, 6.1], [1.67878923E12, 5.0], [1.67879E12, 5.9], [1.67878991E12, 5.7], [1.67878957E12, 6.3], [1.67878982E12, 5.7], [1.67878948E12, 6.8], [1.67878939E12, 6.3], [1.67879016E12, 5.6], [1.67879007E12, 6.2], [1.67878973E12, 5.5], [1.6787893E12, 6.5], [1.67878998E12, 5.7], [1.67878964E12, 5.5], [1.67878955E12, 6.3], [1.67878921E12, 4.1], [1.67879023E12, 2.3], [1.67878989E12, 5.3], [1.67878946E12, 6.3], [1.67879014E12, 5.9], [1.6787898E12, 5.5], [1.67878971E12, 5.5], [1.67878937E12, 6.5], [1.67879005E12, 6.2], [1.67878962E12, 6.0], [1.67878928E12, 6.0], [1.67878919E12, 2.9], [1.67878996E12, 5.1], [1.67878987E12, 6.0], [1.67878953E12, 6.6], [1.67879021E12, 3.4], [1.67878978E12, 5.8], [1.67878944E12, 6.2], [1.67878935E12, 6.3], [1.67879012E12, 6.0], [1.67879003E12, 5.1], [1.67878969E12, 5.2], [1.67878926E12, 5.7], [1.67878994E12, 5.8], [1.6787896E12, 4.2], [1.67878951E12, 6.2], [1.67878917E12, 0.7], [1.67879019E12, 4.7], [1.67878985E12, 6.0], [1.67878942E12, 6.1], [1.6787901E12, 6.3], [1.67878976E12, 5.7], [1.67878967E12, 6.2], [1.67878933E12, 5.8], [1.67879001E12, 5.5], [1.67878958E12, 6.1], [1.67878924E12, 5.6], [1.67878992E12, 5.3], [1.67878983E12, 6.1], [1.67878949E12, 6.5], [1.67879017E12, 5.5], [1.67878974E12, 5.6], [1.6787894E12, 6.3], [1.67878931E12, 6.4], [1.67879008E12, 5.8], [1.67878999E12, 5.4], [1.67878965E12, 4.5], [1.67878922E12, 4.7], [1.6787899E12, 5.8], [1.67878956E12, 6.3], [1.67878947E12, 6.2], [1.67879024E12, 0.4], [1.67879015E12, 5.5], [1.67878981E12, 5.8], [1.67878938E12, 6.7], [1.67879006E12, 6.4], [1.67878972E12, 5.4]], "isOverall": false, "label": "EMPTY_RES_CODE", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67879024E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.67878917E12, "maxY": 3.8, "series": [{"data": [[1.67878963E12, 2.9], [1.67878929E12, 3.2], [1.67878997E12, 2.8], [1.67878954E12, 3.5], [1.6787892E12, 1.9], [1.67879022E12, 1.5], [1.67878988E12, 2.8], [1.67878979E12, 2.6], [1.67878945E12, 3.1], [1.67879013E12, 2.6], [1.6787897E12, 2.7], [1.67878936E12, 3.1], [1.67878927E12, 3.2], [1.67879004E12, 2.8], [1.67878995E12, 2.8], [1.67878961E12, 2.6], [1.67878918E12, 0.9], [1.67878986E12, 3.1], [1.67878952E12, 3.3], [1.67878943E12, 3.8], [1.6787902E12, 1.9], [1.67879011E12, 3.0], [1.67878977E12, 2.7], [1.67878934E12, 2.8], [1.67879002E12, 2.9], [1.67878968E12, 2.7], [1.67878959E12, 3.0], [1.67878925E12, 2.9], [1.67878993E12, 2.7], [1.6787895E12, 3.1], [1.67879018E12, 2.3], [1.67878984E12, 3.4], [1.67878975E12, 2.9], [1.67878941E12, 3.2], [1.67879009E12, 3.0], [1.67878966E12, 3.0], [1.67878932E12, 3.0], [1.67878923E12, 2.8], [1.67879E12, 2.9], [1.67878991E12, 2.8], [1.67878957E12, 3.1], [1.67878982E12, 2.7], [1.67878948E12, 3.3], [1.67878939E12, 3.1], [1.67879016E12, 2.9], [1.67879007E12, 3.0], [1.67878973E12, 2.8], [1.6787893E12, 3.3], [1.67878998E12, 2.9], [1.67878964E12, 2.7], [1.67878955E12, 3.2], [1.67878921E12, 2.2], [1.67879023E12, 1.1], [1.67878989E12, 2.8], [1.67878946E12, 3.2], [1.67879014E12, 2.7], [1.6787898E12, 2.8], [1.67878971E12, 2.7], [1.67878937E12, 3.1], [1.67879005E12, 3.1], [1.67878962E12, 3.0], [1.67878928E12, 3.1], [1.67878919E12, 1.6], [1.67878996E12, 2.6], [1.67878987E12, 3.0], [1.67878953E12, 3.2], [1.67879021E12, 1.6], [1.67878978E12, 2.9], [1.67878944E12, 3.1], [1.67878935E12, 3.3], [1.67879012E12, 3.0], [1.67879003E12, 2.5], [1.67878969E12, 2.7], [1.67878926E12, 3.0], [1.67878994E12, 2.8], [1.6787896E12, 2.2], [1.67878951E12, 3.0], [1.67878917E12, 0.5], [1.67879019E12, 2.4], [1.67878985E12, 3.0], [1.67878942E12, 3.0], [1.6787901E12, 3.5], [1.67878976E12, 2.9], [1.67878967E12, 3.0], [1.67878933E12, 2.9], [1.67879001E12, 2.6], [1.67878958E12, 3.0], [1.67878924E12, 2.6], [1.67878992E12, 2.5], [1.67878983E12, 3.1], [1.67878949E12, 3.3], [1.67879017E12, 2.5], [1.67878974E12, 2.8], [1.6787894E12, 3.1], [1.67878931E12, 3.2], [1.67879008E12, 2.9], [1.67878999E12, 2.9], [1.67878965E12, 2.0], [1.67878922E12, 2.2], [1.6787899E12, 2.9], [1.67878956E12, 3.3], [1.67878947E12, 3.1], [1.67879024E12, 0.1], [1.67879015E12, 3.1], [1.67878981E12, 2.9], [1.67878938E12, 3.2], [1.67879006E12, 3.2], [1.67878972E12, 2.8]], "isOverall": false, "label": "RAMP-success", "isController": false}, {"data": [[1.67878963E12, 2.9], [1.67878929E12, 3.3], [1.67878997E12, 3.0], [1.67878954E12, 3.1], [1.6787892E12, 1.8], [1.67879022E12, 1.6], [1.67878988E12, 2.9], [1.67878979E12, 2.6], [1.67878945E12, 3.1], [1.67879013E12, 3.1], [1.6787897E12, 2.8], [1.67878936E12, 3.0], [1.67878927E12, 3.1], [1.67879004E12, 2.8], [1.67878995E12, 2.8], [1.67878961E12, 2.7], [1.67878918E12, 1.1], [1.67878986E12, 3.1], [1.67878952E12, 3.1], [1.67878943E12, 3.3], [1.6787902E12, 2.0], [1.67879011E12, 3.1], [1.67878977E12, 2.7], [1.67878934E12, 2.9], [1.67879002E12, 2.8], [1.67878968E12, 2.5], [1.67878959E12, 3.3], [1.67878925E12, 2.6], [1.67878993E12, 2.8], [1.6787895E12, 3.1], [1.67879018E12, 2.6], [1.67878984E12, 3.3], [1.67878975E12, 2.9], [1.67878941E12, 3.2], [1.67879009E12, 3.1], [1.67878966E12, 2.7], [1.67878932E12, 3.1], [1.67878923E12, 2.2], [1.67879E12, 3.0], [1.67878991E12, 2.9], [1.67878957E12, 3.2], [1.67878982E12, 3.0], [1.67878948E12, 3.5], [1.67878939E12, 3.2], [1.67879016E12, 2.7], [1.67879007E12, 3.2], [1.67878973E12, 2.7], [1.6787893E12, 3.2], [1.67878998E12, 2.8], [1.67878964E12, 2.8], [1.67878955E12, 3.1], [1.67878921E12, 1.9], [1.67879023E12, 1.2], [1.67878989E12, 2.5], [1.67878946E12, 3.1], [1.67879014E12, 3.2], [1.6787898E12, 2.7], [1.67878971E12, 2.8], [1.67878937E12, 3.4], [1.67879005E12, 3.1], [1.67878962E12, 3.0], [1.67878928E12, 2.9], [1.67878919E12, 1.3], [1.67878996E12, 2.5], [1.67878987E12, 3.0], [1.67878953E12, 3.4], [1.67879021E12, 1.8], [1.67878978E12, 2.9], [1.67878944E12, 3.1], [1.67878935E12, 3.0], [1.67879012E12, 3.0], [1.67879003E12, 2.6], [1.67878969E12, 2.5], [1.67878926E12, 2.7], [1.67878994E12, 3.0], [1.6787896E12, 2.0], [1.67878951E12, 3.2], [1.67878917E12, 0.2], [1.67879019E12, 2.3], [1.67878985E12, 3.0], [1.67878942E12, 3.1], [1.6787901E12, 2.8], [1.67878976E12, 2.8], [1.67878967E12, 3.2], [1.67878933E12, 2.9], [1.67879001E12, 2.9], [1.67878958E12, 3.1], [1.67878924E12, 3.0], [1.67878992E12, 2.8], [1.67878983E12, 3.0], [1.67878949E12, 3.2], [1.67879017E12, 3.0], [1.67878974E12, 2.8], [1.6787894E12, 3.2], [1.67878931E12, 3.2], [1.67879008E12, 2.9], [1.67878999E12, 2.5], [1.67878965E12, 2.5], [1.67878922E12, 2.5], [1.6787899E12, 2.9], [1.67878956E12, 3.0], [1.67878947E12, 3.1], [1.67879024E12, 0.3], [1.67879015E12, 2.4], [1.67878981E12, 2.9], [1.67878938E12, 3.5], [1.67879006E12, 3.2], [1.67878972E12, 2.6]], "isOverall": false, "label": "原生-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67879024E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.4, "minX": 1.67878917E12, "maxY": 7.1, "series": [{"data": [[1.67878963E12, 5.8], [1.67878929E12, 6.5], [1.67878997E12, 5.8], [1.67878954E12, 6.6], [1.6787892E12, 3.7], [1.67879022E12, 3.1], [1.67878988E12, 5.7], [1.67878979E12, 5.2], [1.67878945E12, 6.2], [1.67879013E12, 5.7], [1.6787897E12, 5.5], [1.67878936E12, 6.1], [1.67878927E12, 6.3], [1.67879004E12, 5.6], [1.67878995E12, 5.6], [1.67878961E12, 5.3], [1.67878918E12, 2.0], [1.67878986E12, 6.2], [1.67878952E12, 6.4], [1.67878943E12, 7.1], [1.6787902E12, 3.9], [1.67879011E12, 6.1], [1.67878977E12, 5.4], [1.67878934E12, 5.7], [1.67879002E12, 5.7], [1.67878968E12, 5.2], [1.67878959E12, 6.3], [1.67878925E12, 5.5], [1.67878993E12, 5.5], [1.6787895E12, 6.2], [1.67879018E12, 4.9], [1.67878984E12, 6.7], [1.67878975E12, 5.8], [1.67878941E12, 6.4], [1.67879009E12, 6.1], [1.67878966E12, 5.7], [1.67878932E12, 6.1], [1.67878923E12, 5.0], [1.67879E12, 5.9], [1.67878991E12, 5.7], [1.67878957E12, 6.3], [1.67878982E12, 5.7], [1.67878948E12, 6.8], [1.67878939E12, 6.3], [1.67879016E12, 5.6], [1.67879007E12, 6.2], [1.67878973E12, 5.5], [1.6787893E12, 6.5], [1.67878998E12, 5.7], [1.67878964E12, 5.5], [1.67878955E12, 6.3], [1.67878921E12, 4.1], [1.67879023E12, 2.3], [1.67878989E12, 5.3], [1.67878946E12, 6.3], [1.67879014E12, 5.9], [1.6787898E12, 5.5], [1.67878971E12, 5.5], [1.67878937E12, 6.5], [1.67879005E12, 6.2], [1.67878962E12, 6.0], [1.67878928E12, 6.0], [1.67878919E12, 2.9], [1.67878996E12, 5.1], [1.67878987E12, 6.0], [1.67878953E12, 6.6], [1.67879021E12, 3.4], [1.67878978E12, 5.8], [1.67878944E12, 6.2], [1.67878935E12, 6.3], [1.67879012E12, 6.0], [1.67879003E12, 5.1], [1.67878969E12, 5.2], [1.67878926E12, 5.7], [1.67878994E12, 5.8], [1.6787896E12, 4.2], [1.67878951E12, 6.2], [1.67878917E12, 0.7], [1.67879019E12, 4.7], [1.67878985E12, 6.0], [1.67878942E12, 6.1], [1.6787901E12, 6.3], [1.67878976E12, 5.7], [1.67878967E12, 6.2], [1.67878933E12, 5.8], [1.67879001E12, 5.5], [1.67878958E12, 6.1], [1.67878924E12, 5.6], [1.67878992E12, 5.3], [1.67878983E12, 6.1], [1.67878949E12, 6.5], [1.67879017E12, 5.5], [1.67878974E12, 5.6], [1.6787894E12, 6.3], [1.67878931E12, 6.4], [1.67879008E12, 5.8], [1.67878999E12, 5.4], [1.67878965E12, 4.5], [1.67878922E12, 4.7], [1.6787899E12, 5.8], [1.67878956E12, 6.3], [1.67878947E12, 6.2], [1.67879024E12, 0.4], [1.67879015E12, 5.5], [1.67878981E12, 5.8], [1.67878938E12, 6.7], [1.67879006E12, 6.4], [1.67878972E12, 5.4]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67879024E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

