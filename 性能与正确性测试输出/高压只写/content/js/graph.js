/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2441.0, "minX": 0.0, "maxY": 8013.0, "series": [{"data": [[0.0, 2719.0], [0.1, 2973.0], [0.2, 2982.0], [0.3, 3021.0], [0.4, 3092.0], [0.5, 3109.0], [0.6, 3111.0], [0.7, 3120.0], [0.8, 3127.0], [0.9, 3152.0], [1.0, 3189.0], [1.1, 3257.0], [1.2, 3266.0], [1.3, 3334.0], [1.4, 3371.0], [1.5, 3408.0], [1.6, 3437.0], [1.7, 3450.0], [1.8, 3459.0], [1.9, 3495.0], [2.0, 3526.0], [2.1, 3567.0], [2.2, 3598.0], [2.3, 3623.0], [2.4, 3672.0], [2.5, 3717.0], [2.6, 3769.0], [2.7, 3791.0], [2.8, 3824.0], [2.9, 3858.0], [3.0, 3904.0], [3.1, 3964.0], [3.2, 4000.0], [3.3, 4017.0], [3.4, 4026.0], [3.5, 4045.0], [3.6, 4060.0], [3.7, 4088.0], [3.8, 4108.0], [3.9, 4135.0], [4.0, 4157.0], [4.1, 4230.0], [4.2, 4285.0], [4.3, 4312.0], [4.4, 4343.0], [4.5, 4371.0], [4.6, 4390.0], [4.7, 4408.0], [4.8, 4409.0], [4.9, 4421.0], [5.0, 4426.0], [5.1, 4449.0], [5.2, 4483.0], [5.3, 4494.0], [5.4, 4517.0], [5.5, 4561.0], [5.6, 4585.0], [5.7, 4608.0], [5.8, 4624.0], [5.9, 4633.0], [6.0, 4668.0], [6.1, 4677.0], [6.2, 4699.0], [6.3, 4709.0], [6.4, 4713.0], [6.5, 4725.0], [6.6, 4736.0], [6.7, 4744.0], [6.8, 4752.0], [6.9, 4762.0], [7.0, 4770.0], [7.1, 4784.0], [7.2, 4800.0], [7.3, 4812.0], [7.4, 4818.0], [7.5, 4837.0], [7.6, 4866.0], [7.7, 4914.0], [7.8, 4931.0], [7.9, 4952.0], [8.0, 4958.0], [8.1, 4965.0], [8.2, 4991.0], [8.3, 5018.0], [8.4, 5034.0], [8.5, 5040.0], [8.6, 5046.0], [8.7, 5064.0], [8.8, 5070.0], [8.9, 5088.0], [9.0, 5105.0], [9.1, 5117.0], [9.2, 5130.0], [9.3, 5153.0], [9.4, 5172.0], [9.5, 5186.0], [9.6, 5205.0], [9.7, 5215.0], [9.8, 5226.0], [9.9, 5235.0], [10.0, 5240.0], [10.1, 5257.0], [10.2, 5271.0], [10.3, 5303.0], [10.4, 5315.0], [10.5, 5329.0], [10.6, 5337.0], [10.7, 5354.0], [10.8, 5367.0], [10.9, 5369.0], [11.0, 5378.0], [11.1, 5387.0], [11.2, 5392.0], [11.3, 5401.0], [11.4, 5409.0], [11.5, 5427.0], [11.6, 5431.0], [11.7, 5445.0], [11.8, 5452.0], [11.9, 5456.0], [12.0, 5457.0], [12.1, 5462.0], [12.2, 5477.0], [12.3, 5489.0], [12.4, 5494.0], [12.5, 5504.0], [12.6, 5516.0], [12.7, 5523.0], [12.8, 5529.0], [12.9, 5541.0], [13.0, 5544.0], [13.1, 5548.0], [13.2, 5557.0], [13.3, 5560.0], [13.4, 5586.0], [13.5, 5602.0], [13.6, 5622.0], [13.7, 5633.0], [13.8, 5640.0], [13.9, 5648.0], [14.0, 5652.0], [14.1, 5670.0], [14.2, 5676.0], [14.3, 5681.0], [14.4, 5683.0], [14.5, 5687.0], [14.6, 5692.0], [14.7, 5699.0], [14.8, 5706.0], [14.9, 5715.0], [15.0, 5719.0], [15.1, 5722.0], [15.2, 5726.0], [15.3, 5736.0], [15.4, 5741.0], [15.5, 5749.0], [15.6, 5754.0], [15.7, 5759.0], [15.8, 5763.0], [15.9, 5768.0], [16.0, 5768.0], [16.1, 5772.0], [16.2, 5774.0], [16.3, 5777.0], [16.4, 5783.0], [16.5, 5787.0], [16.6, 5790.0], [16.7, 5794.0], [16.8, 5797.0], [16.9, 5798.0], [17.0, 5799.0], [17.1, 5802.0], [17.2, 5804.0], [17.3, 5805.0], [17.4, 5806.0], [17.5, 5809.0], [17.6, 5817.0], [17.7, 5817.0], [17.8, 5820.0], [17.9, 5821.0], [18.0, 5822.0], [18.1, 5825.0], [18.2, 5826.0], [18.3, 5829.0], [18.4, 5831.0], [18.5, 5833.0], [18.6, 5834.0], [18.7, 5836.0], [18.8, 5837.0], [18.9, 5837.0], [19.0, 5838.0], [19.1, 5838.0], [19.2, 5840.0], [19.3, 5843.0], [19.4, 5844.0], [19.5, 5845.0], [19.6, 5847.0], [19.7, 5848.0], [19.8, 5850.0], [19.9, 5850.0], [20.0, 5853.0], [20.1, 5854.0], [20.2, 5857.0], [20.3, 5857.0], [20.4, 5858.0], [20.5, 5859.0], [20.6, 5859.0], [20.7, 5861.0], [20.8, 5862.0], [20.9, 5864.0], [21.0, 5865.0], [21.1, 5867.0], [21.2, 5868.0], [21.3, 5870.0], [21.4, 5871.0], [21.5, 5872.0], [21.6, 5872.0], [21.7, 5873.0], [21.8, 5873.0], [21.9, 5873.0], [22.0, 5876.0], [22.1, 5877.0], [22.2, 5878.0], [22.3, 5878.0], [22.4, 5879.0], [22.5, 5882.0], [22.6, 5882.0], [22.7, 5883.0], [22.8, 5886.0], [22.9, 5886.0], [23.0, 5886.0], [23.1, 5888.0], [23.2, 5888.0], [23.3, 5889.0], [23.4, 5891.0], [23.5, 5892.0], [23.6, 5893.0], [23.7, 5894.0], [23.8, 5895.0], [23.9, 5895.0], [24.0, 5896.0], [24.1, 5897.0], [24.2, 5898.0], [24.3, 5899.0], [24.4, 5900.0], [24.5, 5901.0], [24.6, 5901.0], [24.7, 5902.0], [24.8, 5903.0], [24.9, 5903.0], [25.0, 5905.0], [25.1, 5905.0], [25.2, 5907.0], [25.3, 5908.0], [25.4, 5908.0], [25.5, 5909.0], [25.6, 5910.0], [25.7, 5910.0], [25.8, 5912.0], [25.9, 5913.0], [26.0, 5914.0], [26.1, 5915.0], [26.2, 5917.0], [26.3, 5918.0], [26.4, 5919.0], [26.5, 5919.0], [26.6, 5921.0], [26.7, 5922.0], [26.8, 5923.0], [26.9, 5923.0], [27.0, 5924.0], [27.1, 5924.0], [27.2, 5924.0], [27.3, 5925.0], [27.4, 5926.0], [27.5, 5926.0], [27.6, 5927.0], [27.7, 5928.0], [27.8, 5928.0], [27.9, 5931.0], [28.0, 5933.0], [28.1, 5934.0], [28.2, 5936.0], [28.3, 5938.0], [28.4, 5939.0], [28.5, 5941.0], [28.6, 5942.0], [28.7, 5943.0], [28.8, 5944.0], [28.9, 5945.0], [29.0, 5946.0], [29.1, 5950.0], [29.2, 5951.0], [29.3, 5953.0], [29.4, 5954.0], [29.5, 5954.0], [29.6, 5957.0], [29.7, 5958.0], [29.8, 5959.0], [29.9, 5960.0], [30.0, 5961.0], [30.1, 5961.0], [30.2, 5962.0], [30.3, 5963.0], [30.4, 5963.0], [30.5, 5964.0], [30.6, 5965.0], [30.7, 5966.0], [30.8, 5967.0], [30.9, 5968.0], [31.0, 5970.0], [31.1, 5971.0], [31.2, 5973.0], [31.3, 5973.0], [31.4, 5975.0], [31.5, 5976.0], [31.6, 5977.0], [31.7, 5977.0], [31.8, 5979.0], [31.9, 5979.0], [32.0, 5980.0], [32.1, 5981.0], [32.2, 5983.0], [32.3, 5984.0], [32.4, 5986.0], [32.5, 5988.0], [32.6, 5988.0], [32.7, 5990.0], [32.8, 5990.0], [32.9, 5991.0], [33.0, 5992.0], [33.1, 5993.0], [33.2, 5994.0], [33.3, 5995.0], [33.4, 5995.0], [33.5, 5996.0], [33.6, 5997.0], [33.7, 5998.0], [33.8, 6001.0], [33.9, 6003.0], [34.0, 6003.0], [34.1, 6005.0], [34.2, 6007.0], [34.3, 6007.0], [34.4, 6007.0], [34.5, 6009.0], [34.6, 6009.0], [34.7, 6012.0], [34.8, 6013.0], [34.9, 6014.0], [35.0, 6015.0], [35.1, 6018.0], [35.2, 6018.0], [35.3, 6018.0], [35.4, 6019.0], [35.5, 6021.0], [35.6, 6022.0], [35.7, 6022.0], [35.8, 6023.0], [35.9, 6026.0], [36.0, 6029.0], [36.1, 6030.0], [36.2, 6032.0], [36.3, 6033.0], [36.4, 6035.0], [36.5, 6036.0], [36.6, 6038.0], [36.7, 6040.0], [36.8, 6042.0], [36.9, 6043.0], [37.0, 6044.0], [37.1, 6046.0], [37.2, 6047.0], [37.3, 6048.0], [37.4, 6050.0], [37.5, 6051.0], [37.6, 6053.0], [37.7, 6054.0], [37.8, 6055.0], [37.9, 6056.0], [38.0, 6057.0], [38.1, 6059.0], [38.2, 6061.0], [38.3, 6063.0], [38.4, 6067.0], [38.5, 6069.0], [38.6, 6070.0], [38.7, 6070.0], [38.8, 6072.0], [38.9, 6073.0], [39.0, 6074.0], [39.1, 6076.0], [39.2, 6076.0], [39.3, 6079.0], [39.4, 6082.0], [39.5, 6082.0], [39.6, 6083.0], [39.7, 6084.0], [39.8, 6084.0], [39.9, 6085.0], [40.0, 6088.0], [40.1, 6091.0], [40.2, 6093.0], [40.3, 6094.0], [40.4, 6096.0], [40.5, 6101.0], [40.6, 6102.0], [40.7, 6106.0], [40.8, 6111.0], [40.9, 6112.0], [41.0, 6113.0], [41.1, 6114.0], [41.2, 6116.0], [41.3, 6119.0], [41.4, 6119.0], [41.5, 6120.0], [41.6, 6123.0], [41.7, 6125.0], [41.8, 6127.0], [41.9, 6129.0], [42.0, 6131.0], [42.1, 6135.0], [42.2, 6137.0], [42.3, 6139.0], [42.4, 6139.0], [42.5, 6145.0], [42.6, 6147.0], [42.7, 6147.0], [42.8, 6149.0], [42.9, 6154.0], [43.0, 6156.0], [43.1, 6157.0], [43.2, 6158.0], [43.3, 6159.0], [43.4, 6161.0], [43.5, 6162.0], [43.6, 6165.0], [43.7, 6168.0], [43.8, 6171.0], [43.9, 6174.0], [44.0, 6179.0], [44.1, 6181.0], [44.2, 6183.0], [44.3, 6188.0], [44.4, 6193.0], [44.5, 6194.0], [44.6, 6196.0], [44.7, 6198.0], [44.8, 6199.0], [44.9, 6204.0], [45.0, 6206.0], [45.1, 6207.0], [45.2, 6211.0], [45.3, 6213.0], [45.4, 6215.0], [45.5, 6218.0], [45.6, 6222.0], [45.7, 6224.0], [45.8, 6229.0], [45.9, 6234.0], [46.0, 6237.0], [46.1, 6240.0], [46.2, 6246.0], [46.3, 6247.0], [46.4, 6248.0], [46.5, 6255.0], [46.6, 6258.0], [46.7, 6264.0], [46.8, 6267.0], [46.9, 6270.0], [47.0, 6272.0], [47.1, 6274.0], [47.2, 6276.0], [47.3, 6278.0], [47.4, 6281.0], [47.5, 6287.0], [47.6, 6290.0], [47.7, 6292.0], [47.8, 6296.0], [47.9, 6306.0], [48.0, 6310.0], [48.1, 6311.0], [48.2, 6317.0], [48.3, 6320.0], [48.4, 6321.0], [48.5, 6324.0], [48.6, 6327.0], [48.7, 6329.0], [48.8, 6333.0], [48.9, 6334.0], [49.0, 6336.0], [49.1, 6341.0], [49.2, 6347.0], [49.3, 6354.0], [49.4, 6355.0], [49.5, 6358.0], [49.6, 6360.0], [49.7, 6362.0], [49.8, 6364.0], [49.9, 6368.0], [50.0, 6369.0], [50.1, 6374.0], [50.2, 6378.0], [50.3, 6381.0], [50.4, 6386.0], [50.5, 6392.0], [50.6, 6393.0], [50.7, 6395.0], [50.8, 6398.0], [50.9, 6400.0], [51.0, 6401.0], [51.1, 6404.0], [51.2, 6406.0], [51.3, 6412.0], [51.4, 6418.0], [51.5, 6420.0], [51.6, 6422.0], [51.7, 6424.0], [51.8, 6425.0], [51.9, 6429.0], [52.0, 6432.0], [52.1, 6434.0], [52.2, 6436.0], [52.3, 6438.0], [52.4, 6443.0], [52.5, 6445.0], [52.6, 6446.0], [52.7, 6451.0], [52.8, 6455.0], [52.9, 6457.0], [53.0, 6459.0], [53.1, 6462.0], [53.2, 6464.0], [53.3, 6464.0], [53.4, 6467.0], [53.5, 6470.0], [53.6, 6471.0], [53.7, 6476.0], [53.8, 6478.0], [53.9, 6481.0], [54.0, 6483.0], [54.1, 6485.0], [54.2, 6486.0], [54.3, 6490.0], [54.4, 6490.0], [54.5, 6492.0], [54.6, 6494.0], [54.7, 6495.0], [54.8, 6496.0], [54.9, 6497.0], [55.0, 6500.0], [55.1, 6501.0], [55.2, 6502.0], [55.3, 6506.0], [55.4, 6508.0], [55.5, 6511.0], [55.6, 6513.0], [55.7, 6516.0], [55.8, 6517.0], [55.9, 6519.0], [56.0, 6522.0], [56.1, 6522.0], [56.2, 6526.0], [56.3, 6527.0], [56.4, 6527.0], [56.5, 6528.0], [56.6, 6529.0], [56.7, 6531.0], [56.8, 6533.0], [56.9, 6536.0], [57.0, 6537.0], [57.1, 6538.0], [57.2, 6540.0], [57.3, 6541.0], [57.4, 6543.0], [57.5, 6545.0], [57.6, 6546.0], [57.7, 6547.0], [57.8, 6548.0], [57.9, 6549.0], [58.0, 6550.0], [58.1, 6553.0], [58.2, 6553.0], [58.3, 6555.0], [58.4, 6557.0], [58.5, 6558.0], [58.6, 6560.0], [58.7, 6563.0], [58.8, 6564.0], [58.9, 6565.0], [59.0, 6566.0], [59.1, 6569.0], [59.2, 6569.0], [59.3, 6572.0], [59.4, 6573.0], [59.5, 6574.0], [59.6, 6576.0], [59.7, 6578.0], [59.8, 6579.0], [59.9, 6581.0], [60.0, 6582.0], [60.1, 6584.0], [60.2, 6586.0], [60.3, 6586.0], [60.4, 6586.0], [60.5, 6588.0], [60.6, 6589.0], [60.7, 6593.0], [60.8, 6594.0], [60.9, 6595.0], [61.0, 6595.0], [61.1, 6596.0], [61.2, 6596.0], [61.3, 6598.0], [61.4, 6599.0], [61.5, 6600.0], [61.6, 6600.0], [61.7, 6601.0], [61.8, 6602.0], [61.9, 6603.0], [62.0, 6605.0], [62.1, 6606.0], [62.2, 6608.0], [62.3, 6609.0], [62.4, 6610.0], [62.5, 6612.0], [62.6, 6614.0], [62.7, 6616.0], [62.8, 6617.0], [62.9, 6617.0], [63.0, 6618.0], [63.1, 6618.0], [63.2, 6621.0], [63.3, 6623.0], [63.4, 6624.0], [63.5, 6625.0], [63.6, 6625.0], [63.7, 6626.0], [63.8, 6626.0], [63.9, 6627.0], [64.0, 6627.0], [64.1, 6628.0], [64.2, 6631.0], [64.3, 6632.0], [64.4, 6634.0], [64.5, 6635.0], [64.6, 6636.0], [64.7, 6638.0], [64.8, 6640.0], [64.9, 6640.0], [65.0, 6640.0], [65.1, 6641.0], [65.2, 6642.0], [65.3, 6644.0], [65.4, 6645.0], [65.5, 6647.0], [65.6, 6648.0], [65.7, 6650.0], [65.8, 6653.0], [65.9, 6654.0], [66.0, 6654.0], [66.1, 6656.0], [66.2, 6656.0], [66.3, 6658.0], [66.4, 6658.0], [66.5, 6659.0], [66.6, 6659.0], [66.7, 6661.0], [66.8, 6662.0], [66.9, 6663.0], [67.0, 6665.0], [67.1, 6666.0], [67.2, 6667.0], [67.3, 6669.0], [67.4, 6669.0], [67.5, 6670.0], [67.6, 6670.0], [67.7, 6671.0], [67.8, 6672.0], [67.9, 6673.0], [68.0, 6674.0], [68.1, 6676.0], [68.2, 6678.0], [68.3, 6679.0], [68.4, 6680.0], [68.5, 6681.0], [68.6, 6682.0], [68.7, 6682.0], [68.8, 6683.0], [68.9, 6686.0], [69.0, 6686.0], [69.1, 6687.0], [69.2, 6689.0], [69.3, 6689.0], [69.4, 6689.0], [69.5, 6690.0], [69.6, 6691.0], [69.7, 6691.0], [69.8, 6692.0], [69.9, 6693.0], [70.0, 6695.0], [70.1, 6696.0], [70.2, 6696.0], [70.3, 6697.0], [70.4, 6699.0], [70.5, 6700.0], [70.6, 6700.0], [70.7, 6701.0], [70.8, 6702.0], [70.9, 6703.0], [71.0, 6703.0], [71.1, 6705.0], [71.2, 6706.0], [71.3, 6707.0], [71.4, 6708.0], [71.5, 6710.0], [71.6, 6711.0], [71.7, 6711.0], [71.8, 6712.0], [71.9, 6714.0], [72.0, 6716.0], [72.1, 6716.0], [72.2, 6717.0], [72.3, 6718.0], [72.4, 6719.0], [72.5, 6720.0], [72.6, 6720.0], [72.7, 6722.0], [72.8, 6723.0], [72.9, 6724.0], [73.0, 6725.0], [73.1, 6726.0], [73.2, 6727.0], [73.3, 6728.0], [73.4, 6729.0], [73.5, 6730.0], [73.6, 6731.0], [73.7, 6732.0], [73.8, 6733.0], [73.9, 6734.0], [74.0, 6736.0], [74.1, 6738.0], [74.2, 6738.0], [74.3, 6739.0], [74.4, 6740.0], [74.5, 6741.0], [74.6, 6742.0], [74.7, 6744.0], [74.8, 6746.0], [74.9, 6749.0], [75.0, 6750.0], [75.1, 6751.0], [75.2, 6752.0], [75.3, 6753.0], [75.4, 6754.0], [75.5, 6755.0], [75.6, 6756.0], [75.7, 6757.0], [75.8, 6758.0], [75.9, 6758.0], [76.0, 6758.0], [76.1, 6759.0], [76.2, 6760.0], [76.3, 6761.0], [76.4, 6762.0], [76.5, 6766.0], [76.6, 6766.0], [76.7, 6767.0], [76.8, 6769.0], [76.9, 6770.0], [77.0, 6771.0], [77.1, 6772.0], [77.2, 6772.0], [77.3, 6773.0], [77.4, 6774.0], [77.5, 6774.0], [77.6, 6775.0], [77.7, 6776.0], [77.8, 6776.0], [77.9, 6777.0], [78.0, 6778.0], [78.1, 6780.0], [78.2, 6780.0], [78.3, 6782.0], [78.4, 6783.0], [78.5, 6784.0], [78.6, 6785.0], [78.7, 6787.0], [78.8, 6790.0], [78.9, 6791.0], [79.0, 6792.0], [79.1, 6793.0], [79.2, 6795.0], [79.3, 6796.0], [79.4, 6799.0], [79.5, 6800.0], [79.6, 6801.0], [79.7, 6803.0], [79.8, 6804.0], [79.9, 6805.0], [80.0, 6806.0], [80.1, 6807.0], [80.2, 6809.0], [80.3, 6810.0], [80.4, 6812.0], [80.5, 6813.0], [80.6, 6813.0], [80.7, 6815.0], [80.8, 6818.0], [80.9, 6821.0], [81.0, 6823.0], [81.1, 6825.0], [81.2, 6826.0], [81.3, 6828.0], [81.4, 6829.0], [81.5, 6830.0], [81.6, 6831.0], [81.7, 6833.0], [81.8, 6834.0], [81.9, 6835.0], [82.0, 6837.0], [82.1, 6840.0], [82.2, 6844.0], [82.3, 6845.0], [82.4, 6848.0], [82.5, 6848.0], [82.6, 6850.0], [82.7, 6851.0], [82.8, 6852.0], [82.9, 6855.0], [83.0, 6857.0], [83.1, 6860.0], [83.2, 6862.0], [83.3, 6863.0], [83.4, 6864.0], [83.5, 6864.0], [83.6, 6867.0], [83.7, 6867.0], [83.8, 6868.0], [83.9, 6869.0], [84.0, 6871.0], [84.1, 6875.0], [84.2, 6876.0], [84.3, 6880.0], [84.4, 6881.0], [84.5, 6887.0], [84.6, 6888.0], [84.7, 6890.0], [84.8, 6891.0], [84.9, 6895.0], [85.0, 6898.0], [85.1, 6901.0], [85.2, 6903.0], [85.3, 6906.0], [85.4, 6907.0], [85.5, 6910.0], [85.6, 6912.0], [85.7, 6915.0], [85.8, 6918.0], [85.9, 6919.0], [86.0, 6921.0], [86.1, 6922.0], [86.2, 6926.0], [86.3, 6930.0], [86.4, 6932.0], [86.5, 6936.0], [86.6, 6939.0], [86.7, 6943.0], [86.8, 6946.0], [86.9, 6950.0], [87.0, 6952.0], [87.1, 6953.0], [87.2, 6956.0], [87.3, 6963.0], [87.4, 6967.0], [87.5, 6972.0], [87.6, 6979.0], [87.7, 6981.0], [87.8, 6982.0], [87.9, 6986.0], [88.0, 6988.0], [88.1, 6992.0], [88.2, 6993.0], [88.3, 6997.0], [88.4, 6998.0], [88.5, 7005.0], [88.6, 7008.0], [88.7, 7017.0], [88.8, 7024.0], [88.9, 7032.0], [89.0, 7032.0], [89.1, 7038.0], [89.2, 7047.0], [89.3, 7054.0], [89.4, 7056.0], [89.5, 7062.0], [89.6, 7066.0], [89.7, 7071.0], [89.8, 7076.0], [89.9, 7078.0], [90.0, 7083.0], [90.1, 7088.0], [90.2, 7093.0], [90.3, 7097.0], [90.4, 7100.0], [90.5, 7106.0], [90.6, 7113.0], [90.7, 7114.0], [90.8, 7117.0], [90.9, 7125.0], [91.0, 7133.0], [91.1, 7135.0], [91.2, 7138.0], [91.3, 7141.0], [91.4, 7148.0], [91.5, 7154.0], [91.6, 7156.0], [91.7, 7157.0], [91.8, 7160.0], [91.9, 7175.0], [92.0, 7183.0], [92.1, 7186.0], [92.2, 7186.0], [92.3, 7195.0], [92.4, 7199.0], [92.5, 7201.0], [92.6, 7211.0], [92.7, 7217.0], [92.8, 7220.0], [92.9, 7223.0], [93.0, 7225.0], [93.1, 7227.0], [93.2, 7228.0], [93.3, 7231.0], [93.4, 7235.0], [93.5, 7238.0], [93.6, 7241.0], [93.7, 7245.0], [93.8, 7249.0], [93.9, 7252.0], [94.0, 7253.0], [94.1, 7259.0], [94.2, 7267.0], [94.3, 7278.0], [94.4, 7280.0], [94.5, 7284.0], [94.6, 7297.0], [94.7, 7299.0], [94.8, 7308.0], [94.9, 7315.0], [95.0, 7324.0], [95.1, 7337.0], [95.2, 7348.0], [95.3, 7353.0], [95.4, 7359.0], [95.5, 7374.0], [95.6, 7381.0], [95.7, 7389.0], [95.8, 7399.0], [95.9, 7408.0], [96.0, 7414.0], [96.1, 7428.0], [96.2, 7438.0], [96.3, 7440.0], [96.4, 7445.0], [96.5, 7459.0], [96.6, 7463.0], [96.7, 7467.0], [96.8, 7473.0], [96.9, 7482.0], [97.0, 7487.0], [97.1, 7490.0], [97.2, 7496.0], [97.3, 7500.0], [97.4, 7505.0], [97.5, 7510.0], [97.6, 7519.0], [97.7, 7523.0], [97.8, 7540.0], [97.9, 7553.0], [98.0, 7563.0], [98.1, 7568.0], [98.2, 7573.0], [98.3, 7587.0], [98.4, 7598.0], [98.5, 7608.0], [98.6, 7623.0], [98.7, 7634.0], [98.8, 7642.0], [98.9, 7652.0], [99.0, 7663.0], [99.1, 7692.0], [99.2, 7706.0], [99.3, 7729.0], [99.4, 7754.0], [99.5, 7837.0], [99.6, 7851.0], [99.7, 7916.0], [99.8, 7927.0], [99.9, 7974.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[0.0, 2441.0], [0.1, 2649.0], [0.2, 2686.0], [0.3, 2697.0], [0.4, 2717.0], [0.5, 2747.0], [0.6, 2790.0], [0.7, 2807.0], [0.8, 2817.0], [0.9, 2822.0], [1.0, 2829.0], [1.1, 2856.0], [1.2, 2886.0], [1.3, 2918.0], [1.4, 2986.0], [1.5, 3048.0], [1.6, 3073.0], [1.7, 3086.0], [1.8, 3139.0], [1.9, 3166.0], [2.0, 3188.0], [2.1, 3231.0], [2.2, 3259.0], [2.3, 3285.0], [2.4, 3344.0], [2.5, 3354.0], [2.6, 3400.0], [2.7, 3459.0], [2.8, 3499.0], [2.9, 3535.0], [3.0, 3541.0], [3.1, 3558.0], [3.2, 3596.0], [3.3, 3622.0], [3.4, 3665.0], [3.5, 3695.0], [3.6, 3720.0], [3.7, 3722.0], [3.8, 3744.0], [3.9, 3764.0], [4.0, 3775.0], [4.1, 3836.0], [4.2, 3870.0], [4.3, 3896.0], [4.4, 3917.0], [4.5, 3935.0], [4.6, 3944.0], [4.7, 3949.0], [4.8, 3970.0], [4.9, 3990.0], [5.0, 4010.0], [5.1, 4060.0], [5.2, 4082.0], [5.3, 4108.0], [5.4, 4128.0], [5.5, 4145.0], [5.6, 4156.0], [5.7, 4167.0], [5.8, 4189.0], [5.9, 4197.0], [6.0, 4205.0], [6.1, 4211.0], [6.2, 4218.0], [6.3, 4243.0], [6.4, 4251.0], [6.5, 4269.0], [6.6, 4305.0], [6.7, 4330.0], [6.8, 4348.0], [6.9, 4366.0], [7.0, 4378.0], [7.1, 4403.0], [7.2, 4417.0], [7.3, 4421.0], [7.4, 4431.0], [7.5, 4437.0], [7.6, 4455.0], [7.7, 4468.0], [7.8, 4483.0], [7.9, 4489.0], [8.0, 4508.0], [8.1, 4523.0], [8.2, 4565.0], [8.3, 4575.0], [8.4, 4600.0], [8.5, 4605.0], [8.6, 4611.0], [8.7, 4626.0], [8.8, 4643.0], [8.9, 4659.0], [9.0, 4675.0], [9.1, 4685.0], [9.2, 4702.0], [9.3, 4718.0], [9.4, 4726.0], [9.5, 4736.0], [9.6, 4742.0], [9.7, 4747.0], [9.8, 4765.0], [9.9, 4776.0], [10.0, 4797.0], [10.1, 4808.0], [10.2, 4814.0], [10.3, 4818.0], [10.4, 4824.0], [10.5, 4828.0], [10.6, 4835.0], [10.7, 4836.0], [10.8, 4838.0], [10.9, 4847.0], [11.0, 4850.0], [11.1, 4853.0], [11.2, 4862.0], [11.3, 4866.0], [11.4, 4871.0], [11.5, 4877.0], [11.6, 4889.0], [11.7, 4892.0], [11.8, 4902.0], [11.9, 4920.0], [12.0, 4939.0], [12.1, 4945.0], [12.2, 4950.0], [12.3, 4959.0], [12.4, 4962.0], [12.5, 4969.0], [12.6, 4971.0], [12.7, 4978.0], [12.8, 4987.0], [12.9, 4995.0], [13.0, 5006.0], [13.1, 5027.0], [13.2, 5033.0], [13.3, 5039.0], [13.4, 5048.0], [13.5, 5057.0], [13.6, 5065.0], [13.7, 5071.0], [13.8, 5073.0], [13.9, 5083.0], [14.0, 5087.0], [14.1, 5092.0], [14.2, 5096.0], [14.3, 5107.0], [14.4, 5117.0], [14.5, 5120.0], [14.6, 5122.0], [14.7, 5125.0], [14.8, 5129.0], [14.9, 5132.0], [15.0, 5137.0], [15.1, 5139.0], [15.2, 5143.0], [15.3, 5154.0], [15.4, 5157.0], [15.5, 5158.0], [15.6, 5162.0], [15.7, 5164.0], [15.8, 5164.0], [15.9, 5165.0], [16.0, 5167.0], [16.1, 5175.0], [16.2, 5177.0], [16.3, 5180.0], [16.4, 5182.0], [16.5, 5184.0], [16.6, 5185.0], [16.7, 5188.0], [16.8, 5189.0], [16.9, 5191.0], [17.0, 5193.0], [17.1, 5195.0], [17.2, 5199.0], [17.3, 5199.0], [17.4, 5202.0], [17.5, 5203.0], [17.6, 5205.0], [17.7, 5209.0], [17.8, 5211.0], [17.9, 5213.0], [18.0, 5215.0], [18.1, 5219.0], [18.2, 5219.0], [18.3, 5222.0], [18.4, 5224.0], [18.5, 5226.0], [18.6, 5229.0], [18.7, 5229.0], [18.8, 5231.0], [18.9, 5232.0], [19.0, 5234.0], [19.1, 5237.0], [19.2, 5237.0], [19.3, 5239.0], [19.4, 5240.0], [19.5, 5242.0], [19.6, 5243.0], [19.7, 5244.0], [19.8, 5246.0], [19.9, 5247.0], [20.0, 5249.0], [20.1, 5250.0], [20.2, 5251.0], [20.3, 5252.0], [20.4, 5252.0], [20.5, 5253.0], [20.6, 5254.0], [20.7, 5255.0], [20.8, 5258.0], [20.9, 5260.0], [21.0, 5261.0], [21.1, 5261.0], [21.2, 5263.0], [21.3, 5263.0], [21.4, 5265.0], [21.5, 5266.0], [21.6, 5267.0], [21.7, 5268.0], [21.8, 5268.0], [21.9, 5269.0], [22.0, 5270.0], [22.1, 5271.0], [22.2, 5272.0], [22.3, 5274.0], [22.4, 5275.0], [22.5, 5275.0], [22.6, 5277.0], [22.7, 5278.0], [22.8, 5280.0], [22.9, 5282.0], [23.0, 5282.0], [23.1, 5284.0], [23.2, 5285.0], [23.3, 5286.0], [23.4, 5287.0], [23.5, 5288.0], [23.6, 5290.0], [23.7, 5290.0], [23.8, 5291.0], [23.9, 5292.0], [24.0, 5294.0], [24.1, 5295.0], [24.2, 5296.0], [24.3, 5297.0], [24.4, 5299.0], [24.5, 5299.0], [24.6, 5301.0], [24.7, 5301.0], [24.8, 5302.0], [24.9, 5303.0], [25.0, 5304.0], [25.1, 5305.0], [25.2, 5306.0], [25.3, 5307.0], [25.4, 5308.0], [25.5, 5309.0], [25.6, 5309.0], [25.7, 5310.0], [25.8, 5311.0], [25.9, 5315.0], [26.0, 5315.0], [26.1, 5316.0], [26.2, 5318.0], [26.3, 5318.0], [26.4, 5319.0], [26.5, 5320.0], [26.6, 5322.0], [26.7, 5323.0], [26.8, 5324.0], [26.9, 5326.0], [27.0, 5327.0], [27.1, 5329.0], [27.2, 5330.0], [27.3, 5331.0], [27.4, 5332.0], [27.5, 5333.0], [27.6, 5334.0], [27.7, 5337.0], [27.8, 5339.0], [27.9, 5340.0], [28.0, 5342.0], [28.1, 5342.0], [28.2, 5343.0], [28.3, 5345.0], [28.4, 5346.0], [28.5, 5347.0], [28.6, 5348.0], [28.7, 5350.0], [28.8, 5351.0], [28.9, 5351.0], [29.0, 5353.0], [29.1, 5354.0], [29.2, 5355.0], [29.3, 5357.0], [29.4, 5359.0], [29.5, 5360.0], [29.6, 5361.0], [29.7, 5363.0], [29.8, 5364.0], [29.9, 5364.0], [30.0, 5366.0], [30.1, 5366.0], [30.2, 5368.0], [30.3, 5370.0], [30.4, 5371.0], [30.5, 5373.0], [30.6, 5374.0], [30.7, 5375.0], [30.8, 5378.0], [30.9, 5382.0], [31.0, 5383.0], [31.1, 5384.0], [31.2, 5386.0], [31.3, 5387.0], [31.4, 5390.0], [31.5, 5391.0], [31.6, 5392.0], [31.7, 5395.0], [31.8, 5396.0], [31.9, 5397.0], [32.0, 5400.0], [32.1, 5401.0], [32.2, 5402.0], [32.3, 5404.0], [32.4, 5405.0], [32.5, 5406.0], [32.6, 5407.0], [32.7, 5410.0], [32.8, 5411.0], [32.9, 5412.0], [33.0, 5414.0], [33.1, 5415.0], [33.2, 5417.0], [33.3, 5420.0], [33.4, 5422.0], [33.5, 5424.0], [33.6, 5425.0], [33.7, 5426.0], [33.8, 5428.0], [33.9, 5430.0], [34.0, 5432.0], [34.1, 5432.0], [34.2, 5433.0], [34.3, 5433.0], [34.4, 5435.0], [34.5, 5438.0], [34.6, 5439.0], [34.7, 5442.0], [34.8, 5443.0], [34.9, 5446.0], [35.0, 5447.0], [35.1, 5448.0], [35.2, 5450.0], [35.3, 5452.0], [35.4, 5456.0], [35.5, 5458.0], [35.6, 5460.0], [35.7, 5462.0], [35.8, 5462.0], [35.9, 5463.0], [36.0, 5466.0], [36.1, 5468.0], [36.2, 5469.0], [36.3, 5471.0], [36.4, 5471.0], [36.5, 5478.0], [36.6, 5481.0], [36.7, 5482.0], [36.8, 5484.0], [36.9, 5489.0], [37.0, 5494.0], [37.1, 5495.0], [37.2, 5499.0], [37.3, 5503.0], [37.4, 5507.0], [37.5, 5508.0], [37.6, 5510.0], [37.7, 5513.0], [37.8, 5515.0], [37.9, 5516.0], [38.0, 5519.0], [38.1, 5521.0], [38.2, 5524.0], [38.3, 5527.0], [38.4, 5532.0], [38.5, 5535.0], [38.6, 5544.0], [38.7, 5547.0], [38.8, 5551.0], [38.9, 5555.0], [39.0, 5559.0], [39.1, 5560.0], [39.2, 5563.0], [39.3, 5564.0], [39.4, 5569.0], [39.5, 5575.0], [39.6, 5581.0], [39.7, 5583.0], [39.8, 5585.0], [39.9, 5587.0], [40.0, 5588.0], [40.1, 5593.0], [40.2, 5595.0], [40.3, 5598.0], [40.4, 5601.0], [40.5, 5606.0], [40.6, 5609.0], [40.7, 5611.0], [40.8, 5612.0], [40.9, 5616.0], [41.0, 5622.0], [41.1, 5624.0], [41.2, 5628.0], [41.3, 5632.0], [41.4, 5633.0], [41.5, 5635.0], [41.6, 5642.0], [41.7, 5643.0], [41.8, 5647.0], [41.9, 5649.0], [42.0, 5652.0], [42.1, 5656.0], [42.2, 5657.0], [42.3, 5659.0], [42.4, 5661.0], [42.5, 5664.0], [42.6, 5669.0], [42.7, 5672.0], [42.8, 5675.0], [42.9, 5682.0], [43.0, 5684.0], [43.1, 5698.0], [43.2, 5702.0], [43.3, 5707.0], [43.4, 5710.0], [43.5, 5720.0], [43.6, 5722.0], [43.7, 5727.0], [43.8, 5732.0], [43.9, 5735.0], [44.0, 5735.0], [44.1, 5740.0], [44.2, 5743.0], [44.3, 5744.0], [44.4, 5746.0], [44.5, 5752.0], [44.6, 5755.0], [44.7, 5758.0], [44.8, 5760.0], [44.9, 5762.0], [45.0, 5765.0], [45.1, 5766.0], [45.2, 5770.0], [45.3, 5772.0], [45.4, 5777.0], [45.5, 5778.0], [45.6, 5781.0], [45.7, 5783.0], [45.8, 5786.0], [45.9, 5786.0], [46.0, 5787.0], [46.1, 5789.0], [46.2, 5790.0], [46.3, 5796.0], [46.4, 5799.0], [46.5, 5805.0], [46.6, 5807.0], [46.7, 5812.0], [46.8, 5813.0], [46.9, 5815.0], [47.0, 5815.0], [47.1, 5817.0], [47.2, 5818.0], [47.3, 5822.0], [47.4, 5824.0], [47.5, 5827.0], [47.6, 5827.0], [47.7, 5828.0], [47.8, 5830.0], [47.9, 5830.0], [48.0, 5831.0], [48.1, 5832.0], [48.2, 5833.0], [48.3, 5834.0], [48.4, 5835.0], [48.5, 5837.0], [48.6, 5839.0], [48.7, 5840.0], [48.8, 5842.0], [48.9, 5842.0], [49.0, 5844.0], [49.1, 5845.0], [49.2, 5846.0], [49.3, 5847.0], [49.4, 5848.0], [49.5, 5849.0], [49.6, 5851.0], [49.7, 5853.0], [49.8, 5853.0], [49.9, 5855.0], [50.0, 5857.0], [50.1, 5859.0], [50.2, 5860.0], [50.3, 5861.0], [50.4, 5861.0], [50.5, 5863.0], [50.6, 5864.0], [50.7, 5865.0], [50.8, 5866.0], [50.9, 5868.0], [51.0, 5870.0], [51.1, 5871.0], [51.2, 5872.0], [51.3, 5874.0], [51.4, 5875.0], [51.5, 5875.0], [51.6, 5876.0], [51.7, 5877.0], [51.8, 5879.0], [51.9, 5880.0], [52.0, 5882.0], [52.1, 5883.0], [52.2, 5885.0], [52.3, 5885.0], [52.4, 5885.0], [52.5, 5886.0], [52.6, 5888.0], [52.7, 5889.0], [52.8, 5889.0], [52.9, 5891.0], [53.0, 5892.0], [53.1, 5893.0], [53.2, 5893.0], [53.3, 5894.0], [53.4, 5895.0], [53.5, 5896.0], [53.6, 5898.0], [53.7, 5898.0], [53.8, 5899.0], [53.9, 5900.0], [54.0, 5901.0], [54.1, 5903.0], [54.2, 5903.0], [54.3, 5904.0], [54.4, 5905.0], [54.5, 5905.0], [54.6, 5906.0], [54.7, 5906.0], [54.8, 5907.0], [54.9, 5908.0], [55.0, 5908.0], [55.1, 5909.0], [55.2, 5910.0], [55.3, 5911.0], [55.4, 5912.0], [55.5, 5914.0], [55.6, 5915.0], [55.7, 5916.0], [55.8, 5917.0], [55.9, 5918.0], [56.0, 5919.0], [56.1, 5919.0], [56.2, 5920.0], [56.3, 5920.0], [56.4, 5921.0], [56.5, 5922.0], [56.6, 5923.0], [56.7, 5924.0], [56.8, 5925.0], [56.9, 5925.0], [57.0, 5925.0], [57.1, 5925.0], [57.2, 5926.0], [57.3, 5927.0], [57.4, 5927.0], [57.5, 5928.0], [57.6, 5929.0], [57.7, 5930.0], [57.8, 5930.0], [57.9, 5930.0], [58.0, 5931.0], [58.1, 5931.0], [58.2, 5932.0], [58.3, 5933.0], [58.4, 5933.0], [58.5, 5934.0], [58.6, 5934.0], [58.7, 5935.0], [58.8, 5935.0], [58.9, 5936.0], [59.0, 5936.0], [59.1, 5937.0], [59.2, 5937.0], [59.3, 5938.0], [59.4, 5938.0], [59.5, 5940.0], [59.6, 5941.0], [59.7, 5942.0], [59.8, 5942.0], [59.9, 5944.0], [60.0, 5944.0], [60.1, 5946.0], [60.2, 5946.0], [60.3, 5947.0], [60.4, 5948.0], [60.5, 5948.0], [60.6, 5949.0], [60.7, 5949.0], [60.8, 5950.0], [60.9, 5950.0], [61.0, 5951.0], [61.1, 5952.0], [61.2, 5953.0], [61.3, 5953.0], [61.4, 5953.0], [61.5, 5954.0], [61.6, 5955.0], [61.7, 5956.0], [61.8, 5956.0], [61.9, 5956.0], [62.0, 5958.0], [62.1, 5959.0], [62.2, 5959.0], [62.3, 5960.0], [62.4, 5960.0], [62.5, 5960.0], [62.6, 5961.0], [62.7, 5962.0], [62.8, 5962.0], [62.9, 5963.0], [63.0, 5964.0], [63.1, 5965.0], [63.2, 5965.0], [63.3, 5966.0], [63.4, 5966.0], [63.5, 5967.0], [63.6, 5968.0], [63.7, 5968.0], [63.8, 5969.0], [63.9, 5969.0], [64.0, 5969.0], [64.1, 5970.0], [64.2, 5971.0], [64.3, 5973.0], [64.4, 5973.0], [64.5, 5973.0], [64.6, 5974.0], [64.7, 5975.0], [64.8, 5976.0], [64.9, 5978.0], [65.0, 5978.0], [65.1, 5979.0], [65.2, 5980.0], [65.3, 5980.0], [65.4, 5981.0], [65.5, 5982.0], [65.6, 5984.0], [65.7, 5985.0], [65.8, 5986.0], [65.9, 5987.0], [66.0, 5988.0], [66.1, 5989.0], [66.2, 5990.0], [66.3, 5991.0], [66.4, 5992.0], [66.5, 5993.0], [66.6, 5993.0], [66.7, 5994.0], [66.8, 5995.0], [66.9, 5996.0], [67.0, 5996.0], [67.1, 5998.0], [67.2, 5998.0], [67.3, 5999.0], [67.4, 5999.0], [67.5, 6000.0], [67.6, 6001.0], [67.7, 6003.0], [67.8, 6004.0], [67.9, 6004.0], [68.0, 6005.0], [68.1, 6005.0], [68.2, 6006.0], [68.3, 6006.0], [68.4, 6007.0], [68.5, 6008.0], [68.6, 6008.0], [68.7, 6010.0], [68.8, 6011.0], [68.9, 6013.0], [69.0, 6013.0], [69.1, 6014.0], [69.2, 6015.0], [69.3, 6015.0], [69.4, 6016.0], [69.5, 6016.0], [69.6, 6017.0], [69.7, 6018.0], [69.8, 6019.0], [69.9, 6020.0], [70.0, 6021.0], [70.1, 6022.0], [70.2, 6022.0], [70.3, 6024.0], [70.4, 6025.0], [70.5, 6025.0], [70.6, 6026.0], [70.7, 6027.0], [70.8, 6027.0], [70.9, 6028.0], [71.0, 6029.0], [71.1, 6030.0], [71.2, 6030.0], [71.3, 6031.0], [71.4, 6031.0], [71.5, 6033.0], [71.6, 6035.0], [71.7, 6036.0], [71.8, 6037.0], [71.9, 6037.0], [72.0, 6039.0], [72.1, 6040.0], [72.2, 6041.0], [72.3, 6042.0], [72.4, 6042.0], [72.5, 6043.0], [72.6, 6044.0], [72.7, 6046.0], [72.8, 6048.0], [72.9, 6049.0], [73.0, 6050.0], [73.1, 6050.0], [73.2, 6051.0], [73.3, 6052.0], [73.4, 6052.0], [73.5, 6053.0], [73.6, 6053.0], [73.7, 6054.0], [73.8, 6056.0], [73.9, 6057.0], [74.0, 6059.0], [74.1, 6059.0], [74.2, 6061.0], [74.3, 6062.0], [74.4, 6063.0], [74.5, 6064.0], [74.6, 6065.0], [74.7, 6067.0], [74.8, 6068.0], [74.9, 6069.0], [75.0, 6072.0], [75.1, 6072.0], [75.2, 6073.0], [75.3, 6073.0], [75.4, 6077.0], [75.5, 6077.0], [75.6, 6080.0], [75.7, 6081.0], [75.8, 6082.0], [75.9, 6084.0], [76.0, 6085.0], [76.1, 6086.0], [76.2, 6086.0], [76.3, 6088.0], [76.4, 6089.0], [76.5, 6089.0], [76.6, 6092.0], [76.7, 6093.0], [76.8, 6094.0], [76.9, 6095.0], [77.0, 6097.0], [77.1, 6098.0], [77.2, 6100.0], [77.3, 6101.0], [77.4, 6101.0], [77.5, 6103.0], [77.6, 6104.0], [77.7, 6105.0], [77.8, 6106.0], [77.9, 6107.0], [78.0, 6109.0], [78.1, 6111.0], [78.2, 6112.0], [78.3, 6112.0], [78.4, 6114.0], [78.5, 6115.0], [78.6, 6117.0], [78.7, 6118.0], [78.8, 6119.0], [78.9, 6120.0], [79.0, 6121.0], [79.1, 6123.0], [79.2, 6124.0], [79.3, 6126.0], [79.4, 6128.0], [79.5, 6129.0], [79.6, 6130.0], [79.7, 6132.0], [79.8, 6134.0], [79.9, 6135.0], [80.0, 6139.0], [80.1, 6140.0], [80.2, 6142.0], [80.3, 6144.0], [80.4, 6145.0], [80.5, 6145.0], [80.6, 6146.0], [80.7, 6148.0], [80.8, 6151.0], [80.9, 6152.0], [81.0, 6153.0], [81.1, 6154.0], [81.2, 6159.0], [81.3, 6159.0], [81.4, 6160.0], [81.5, 6161.0], [81.6, 6164.0], [81.7, 6165.0], [81.8, 6167.0], [81.9, 6169.0], [82.0, 6170.0], [82.1, 6171.0], [82.2, 6173.0], [82.3, 6175.0], [82.4, 6176.0], [82.5, 6177.0], [82.6, 6178.0], [82.7, 6182.0], [82.8, 6183.0], [82.9, 6185.0], [83.0, 6190.0], [83.1, 6193.0], [83.2, 6194.0], [83.3, 6195.0], [83.4, 6198.0], [83.5, 6200.0], [83.6, 6203.0], [83.7, 6204.0], [83.8, 6206.0], [83.9, 6209.0], [84.0, 6212.0], [84.1, 6214.0], [84.2, 6215.0], [84.3, 6218.0], [84.4, 6219.0], [84.5, 6223.0], [84.6, 6225.0], [84.7, 6228.0], [84.8, 6230.0], [84.9, 6232.0], [85.0, 6236.0], [85.1, 6241.0], [85.2, 6245.0], [85.3, 6249.0], [85.4, 6251.0], [85.5, 6253.0], [85.6, 6258.0], [85.7, 6262.0], [85.8, 6267.0], [85.9, 6272.0], [86.0, 6277.0], [86.1, 6279.0], [86.2, 6282.0], [86.3, 6291.0], [86.4, 6295.0], [86.5, 6297.0], [86.6, 6305.0], [86.7, 6309.0], [86.8, 6313.0], [86.9, 6315.0], [87.0, 6318.0], [87.1, 6319.0], [87.2, 6324.0], [87.3, 6327.0], [87.4, 6329.0], [87.5, 6341.0], [87.6, 6348.0], [87.7, 6354.0], [87.8, 6357.0], [87.9, 6359.0], [88.0, 6359.0], [88.1, 6364.0], [88.2, 6367.0], [88.3, 6370.0], [88.4, 6373.0], [88.5, 6375.0], [88.6, 6378.0], [88.7, 6381.0], [88.8, 6383.0], [88.9, 6387.0], [89.0, 6391.0], [89.1, 6392.0], [89.2, 6397.0], [89.3, 6402.0], [89.4, 6408.0], [89.5, 6409.0], [89.6, 6411.0], [89.7, 6413.0], [89.8, 6416.0], [89.9, 6418.0], [90.0, 6421.0], [90.1, 6425.0], [90.2, 6427.0], [90.3, 6430.0], [90.4, 6432.0], [90.5, 6438.0], [90.6, 6441.0], [90.7, 6442.0], [90.8, 6442.0], [90.9, 6447.0], [91.0, 6449.0], [91.1, 6451.0], [91.2, 6455.0], [91.3, 6461.0], [91.4, 6468.0], [91.5, 6470.0], [91.6, 6475.0], [91.7, 6478.0], [91.8, 6486.0], [91.9, 6490.0], [92.0, 6494.0], [92.1, 6503.0], [92.2, 6509.0], [92.3, 6511.0], [92.4, 6514.0], [92.5, 6518.0], [92.6, 6525.0], [92.7, 6529.0], [92.8, 6533.0], [92.9, 6536.0], [93.0, 6538.0], [93.1, 6542.0], [93.2, 6545.0], [93.3, 6549.0], [93.4, 6553.0], [93.5, 6558.0], [93.6, 6568.0], [93.7, 6570.0], [93.8, 6574.0], [93.9, 6576.0], [94.0, 6583.0], [94.1, 6588.0], [94.2, 6593.0], [94.3, 6595.0], [94.4, 6598.0], [94.5, 6602.0], [94.6, 6607.0], [94.7, 6619.0], [94.8, 6621.0], [94.9, 6626.0], [95.0, 6630.0], [95.1, 6635.0], [95.2, 6640.0], [95.3, 6643.0], [95.4, 6648.0], [95.5, 6655.0], [95.6, 6659.0], [95.7, 6667.0], [95.8, 6672.0], [95.9, 6677.0], [96.0, 6680.0], [96.1, 6686.0], [96.2, 6691.0], [96.3, 6694.0], [96.4, 6700.0], [96.5, 6703.0], [96.6, 6711.0], [96.7, 6714.0], [96.8, 6716.0], [96.9, 6722.0], [97.0, 6727.0], [97.1, 6729.0], [97.2, 6733.0], [97.3, 6737.0], [97.4, 6741.0], [97.5, 6752.0], [97.6, 6759.0], [97.7, 6766.0], [97.8, 6772.0], [97.9, 6781.0], [98.0, 6793.0], [98.1, 6801.0], [98.2, 6810.0], [98.3, 6820.0], [98.4, 6833.0], [98.5, 6845.0], [98.6, 6862.0], [98.7, 6881.0], [98.8, 6898.0], [98.9, 6908.0], [99.0, 6917.0], [99.1, 6926.0], [99.2, 6930.0], [99.3, 6941.0], [99.4, 6964.0], [99.5, 6968.0], [99.6, 6993.0], [99.7, 7029.0], [99.8, 7053.0], [99.9, 7121.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 2400.0, "maxY": 409.0, "series": [{"data": [[2700.0, 1.0], [2800.0, 1.0], [2900.0, 7.0], [3000.0, 5.0], [3100.0, 17.0], [3200.0, 6.0], [3300.0, 6.0], [3400.0, 14.0], [3500.0, 9.0], [3600.0, 8.0], [3700.0, 9.0], [3800.0, 7.0], [3900.0, 6.0], [4000.0, 18.0], [4300.0, 11.0], [4100.0, 9.0], [4200.0, 5.0], [4400.0, 21.0], [4500.0, 11.0], [4600.0, 16.0], [4700.0, 29.0], [4800.0, 14.0], [4900.0, 19.0], [5000.0, 20.0], [5100.0, 18.0], [5200.0, 22.0], [5300.0, 29.0], [5400.0, 35.0], [5600.0, 38.0], [5500.0, 32.0], [5700.0, 68.0], [5800.0, 220.0], [5900.0, 280.0], [6000.0, 203.0], [6100.0, 130.0], [6200.0, 91.0], [6300.0, 91.0], [6400.0, 123.0], [6500.0, 195.0], [6600.0, 269.0], [6800.0, 168.0], [6900.0, 103.0], [6700.0, 270.0], [7000.0, 58.0], [7100.0, 61.0], [7300.0, 33.0], [7200.0, 69.0], [7400.0, 43.0], [7500.0, 36.0], [7600.0, 21.0], [7700.0, 9.0], [7900.0, 9.0], [7800.0, 5.0], [8000.0, 2.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[2400.0, 1.0], [2500.0, 2.0], [2600.0, 8.0], [2700.0, 9.0], [2800.0, 18.0], [2900.0, 5.0], [3000.0, 8.0], [3100.0, 10.0], [3200.0, 9.0], [3300.0, 7.0], [3400.0, 8.0], [3500.0, 12.0], [3600.0, 9.0], [3700.0, 17.0], [3800.0, 9.0], [3900.0, 17.0], [4000.0, 9.0], [4100.0, 21.0], [4200.0, 19.0], [4300.0, 15.0], [4400.0, 25.0], [4600.0, 24.0], [4500.0, 14.0], [4700.0, 25.0], [4800.0, 53.0], [5000.0, 39.0], [5100.0, 93.0], [4900.0, 35.0], [5200.0, 214.0], [5300.0, 224.0], [5400.0, 157.0], [5500.0, 95.0], [5600.0, 83.0], [5700.0, 98.0], [5800.0, 222.0], [5900.0, 409.0], [6100.0, 189.0], [6000.0, 291.0], [6200.0, 94.0], [6300.0, 82.0], [6500.0, 73.0], [6400.0, 83.0], [6600.0, 56.0], [6700.0, 51.0], [6800.0, 23.0], [6900.0, 24.0], [7000.0, 7.0], [7100.0, 3.0], [7300.0, 1.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 8000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 6000.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6000.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 6000.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.8333333333333333, "minX": 1.6788964E12, "maxY": 30.0, "series": [{"data": [[1.67889705E12, 30.0], [1.67889739E12, 30.0], [1.67889662E12, 30.0], [1.6788968E12, 30.0], [1.67889714E12, 30.0], [1.67889748E12, 29.269230769230766], [1.67889671E12, 30.0], [1.67889689E12, 30.0], [1.67889723E12, 30.0], [1.67889757E12, 24.125], [1.67889646E12, 18.461538461538463], [1.67889664E12, 30.0], [1.67889698E12, 30.0], [1.67889732E12, 30.0], [1.67889655E12, 30.0], [1.67889766E12, 14.051282051282053], [1.67889737E12, 30.0], [1.67889771E12, 1.8333333333333333], [1.6788966E12, 30.0], [1.67889694E12, 30.0], [1.67889712E12, 30.0], [1.67889746E12, 30.0], [1.67889669E12, 30.0], [1.67889703E12, 30.0], [1.67889721E12, 30.0], [1.67889755E12, 25.617021276595743], [1.67889644E12, 13.24242424242424], [1.67889678E12, 30.0], [1.67889696E12, 30.0], [1.6788973E12, 30.0], [1.67889653E12, 30.0], [1.67889764E12, 17.609756097560975], [1.67889687E12, 30.0], [1.67889769E12, 4.647058823529413], [1.67889658E12, 30.0], [1.67889692E12, 30.0], [1.67889726E12, 30.0], [1.67889744E12, 30.0], [1.67889667E12, 30.0], [1.67889701E12, 30.0], [1.67889735E12, 30.0], [1.67889753E12, 27.80769230769231], [1.67889642E12, 8.399999999999999], [1.67889676E12, 30.0], [1.6788971E12, 30.0], [1.67889728E12, 30.0], [1.67889651E12, 30.0], [1.67889762E12, 20.239130434782613], [1.67889685E12, 30.0], [1.67889719E12, 30.0], [1.67889656E12, 30.0], [1.6788969E12, 30.0], [1.67889724E12, 30.0], [1.67889647E12, 20.999999999999996], [1.67889758E12, 23.374999999999996], [1.67889665E12, 30.0], [1.67889699E12, 30.0], [1.67889733E12, 30.0], [1.67889767E12, 10.275862068965518], [1.6788964E12, 3.2], [1.67889674E12, 30.0], [1.67889708E12, 30.0], [1.67889742E12, 30.0], [1.67889649E12, 25.851063829787226], [1.6788976E12, 22.0], [1.67889683E12, 30.0], [1.67889717E12, 30.0], [1.67889751E12, 29.0], [1.67889688E12, 30.0], [1.67889722E12, 30.0], [1.67889645E12, 15.894736842105262], [1.67889756E12, 25.0], [1.67889679E12, 30.0], [1.67889697E12, 30.0], [1.67889731E12, 30.0], [1.67889765E12, 15.789473684210524], [1.67889654E12, 30.0], [1.67889672E12, 30.0], [1.67889706E12, 30.0], [1.6788974E12, 30.0], [1.67889663E12, 30.0], [1.67889681E12, 30.0], [1.67889715E12, 30.0], [1.67889749E12, 29.0], [1.6788972E12, 30.0], [1.67889643E12, 10.857142857142858], [1.67889754E12, 26.808510638297875], [1.67889677E12, 30.0], [1.67889711E12, 30.0], [1.67889729E12, 30.0], [1.67889763E12, 19.0], [1.67889652E12, 30.0], [1.67889686E12, 30.0], [1.67889704E12, 30.0], [1.67889738E12, 30.0], [1.67889661E12, 30.0], [1.67889695E12, 30.0], [1.67889713E12, 30.0], [1.67889747E12, 30.0], [1.6788967E12, 30.0], [1.67889641E12, 5.842105263157894], [1.67889752E12, 29.0], [1.67889675E12, 30.0], [1.67889709E12, 30.0], [1.67889743E12, 30.0], [1.67889761E12, 21.441860465116275], [1.6788965E12, 28.266666666666666], [1.67889684E12, 30.0], [1.67889718E12, 30.0], [1.67889736E12, 30.0], [1.67889659E12, 30.0], [1.6788977E12, 2.0], [1.67889693E12, 30.0], [1.67889727E12, 30.0], [1.67889745E12, 30.0], [1.67889668E12, 30.0], [1.67889702E12, 30.0], [1.67889673E12, 30.0], [1.67889707E12, 30.0], [1.67889741E12, 30.0], [1.67889648E12, 23.256410256410255], [1.67889682E12, 30.0], [1.67889716E12, 30.0], [1.6788975E12, 29.0], [1.67889657E12, 30.0], [1.67889768E12, 6.318181818181818], [1.67889691E12, 30.0], [1.67889725E12, 30.0], [1.67889759E12, 22.0], [1.67889666E12, 30.0], [1.678897E12, 30.0], [1.67889734E12, 30.0]], "isOverall": false, "label": "线程组", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67889771E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2631.25, "minX": 1.0, "maxY": 6519.6547467007285, "series": [{"data": [[2.0, 3202.75], [3.0, 2905.0], [4.0, 3135.5], [5.0, 3128.625], [6.0, 3376.5], [7.0, 3211.6666666666665], [8.0, 3399.285714285714], [9.0, 3449.0], [10.0, 3539.6], [11.0, 3709.9999999999995], [12.0, 3808.5454545454545], [13.0, 3924.3], [14.0, 4040.133333333333], [15.0, 4312.260869565217], [16.0, 4190.583333333334], [17.0, 4540.083333333334], [18.0, 4766.083333333333], [19.0, 4859.432432432433], [20.0, 4963.0], [21.0, 5056.620689655172], [22.0, 5237.196969696969], [23.0, 5469.999999999999], [24.0, 5460.825000000001], [25.0, 5632.5], [26.0, 5850.48275862069], [27.0, 5898.171428571427], [28.0, 6099.999999999999], [29.0, 6211.807692307691], [30.0, 6519.6547467007285]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[28.11833333333332, 6225.319666666661]], "isOverall": false, "label": "RAMP-Aggregated", "isController": false}, {"data": [[2.0, 2694.0], [3.0, 2655.0], [4.0, 2631.25], [5.0, 2809.2000000000007], [6.0, 3048.3333333333335], [7.0, 2938.166666666667], [8.0, 3052.307692307692], [9.0, 3284.8333333333335], [10.0, 3159.5555555555557], [11.0, 3405.625], [12.0, 3418.5833333333335], [13.0, 3587.8666666666663], [14.0, 3707.166666666667], [15.0, 3851.846153846154], [16.0, 3919.785714285714], [1.0, 2717.0], [17.0, 4085.090909090909], [18.0, 4411.125], [19.0, 4371.967741935484], [20.0, 4512.714285714285], [21.0, 4600.357142857142], [22.0, 4747.358208955225], [23.0, 4981.533333333332], [24.0, 4993.43181818182], [25.0, 5151.54761904762], [26.0, 5372.068965517241], [27.0, 5341.275], [28.0, 5606.176470588235], [29.0, 5628.847328244274], [30.0, 5899.434468085106]], "isOverall": false, "label": "原生", "isController": false}, {"data": [[28.113000000000003, 5635.896000000008]], "isOverall": false, "label": "原生-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 30.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.6788964E12, "maxY": 4.9E-324, "series": [{"data": [[1.67889705E12, 0.0], [1.67889739E12, 0.0], [1.67889662E12, 0.0], [1.6788968E12, 0.0], [1.67889714E12, 0.0], [1.67889748E12, 0.0], [1.67889671E12, 0.0], [1.67889689E12, 0.0], [1.67889723E12, 0.0], [1.67889757E12, 0.0], [1.67889646E12, 0.0], [1.67889664E12, 0.0], [1.67889698E12, 0.0], [1.67889732E12, 0.0], [1.67889655E12, 0.0], [1.67889766E12, 0.0], [1.67889737E12, 0.0], [1.67889771E12, 0.0], [1.6788966E12, 0.0], [1.67889694E12, 0.0], [1.67889712E12, 0.0], [1.67889746E12, 0.0], [1.67889669E12, 0.0], [1.67889703E12, 0.0], [1.67889721E12, 0.0], [1.67889755E12, 0.0], [1.67889644E12, 0.0], [1.67889678E12, 0.0], [1.67889696E12, 0.0], [1.6788973E12, 0.0], [1.67889653E12, 0.0], [1.67889764E12, 0.0], [1.67889687E12, 0.0], [1.67889769E12, 0.0], [1.67889658E12, 0.0], [1.67889692E12, 0.0], [1.67889726E12, 0.0], [1.67889744E12, 0.0], [1.67889667E12, 0.0], [1.67889701E12, 0.0], [1.67889735E12, 0.0], [1.67889753E12, 0.0], [1.67889642E12, 0.0], [1.67889676E12, 0.0], [1.6788971E12, 0.0], [1.67889728E12, 0.0], [1.67889651E12, 0.0], [1.67889762E12, 0.0], [1.67889685E12, 0.0], [1.67889719E12, 0.0], [1.67889656E12, 0.0], [1.6788969E12, 0.0], [1.67889724E12, 0.0], [1.67889647E12, 0.0], [1.67889758E12, 0.0], [1.67889665E12, 0.0], [1.67889699E12, 0.0], [1.67889733E12, 0.0], [1.67889767E12, 0.0], [1.6788964E12, 0.0], [1.67889674E12, 0.0], [1.67889708E12, 0.0], [1.67889742E12, 0.0], [1.67889649E12, 0.0], [1.6788976E12, 0.0], [1.67889683E12, 0.0], [1.67889717E12, 0.0], [1.67889751E12, 0.0], [1.67889688E12, 0.0], [1.67889722E12, 0.0], [1.67889645E12, 0.0], [1.67889756E12, 0.0], [1.67889679E12, 0.0], [1.67889697E12, 0.0], [1.67889731E12, 0.0], [1.67889765E12, 0.0], [1.67889654E12, 0.0], [1.67889672E12, 0.0], [1.67889706E12, 0.0], [1.6788974E12, 0.0], [1.67889663E12, 0.0], [1.67889681E12, 0.0], [1.67889715E12, 0.0], [1.67889749E12, 0.0], [1.6788972E12, 0.0], [1.67889643E12, 0.0], [1.67889754E12, 0.0], [1.67889677E12, 0.0], [1.67889711E12, 0.0], [1.67889729E12, 0.0], [1.67889763E12, 0.0], [1.67889652E12, 0.0], [1.67889686E12, 0.0], [1.67889704E12, 0.0], [1.67889738E12, 0.0], [1.67889661E12, 0.0], [1.67889695E12, 0.0], [1.67889713E12, 0.0], [1.67889747E12, 0.0], [1.6788967E12, 0.0], [1.67889641E12, 0.0], [1.67889752E12, 0.0], [1.67889675E12, 0.0], [1.67889709E12, 0.0], [1.67889743E12, 0.0], [1.67889761E12, 0.0], [1.6788965E12, 0.0], [1.67889684E12, 0.0], [1.67889718E12, 0.0], [1.67889736E12, 0.0], [1.67889659E12, 0.0], [1.6788977E12, 0.0], [1.67889693E12, 0.0], [1.67889727E12, 0.0], [1.67889745E12, 0.0], [1.67889668E12, 0.0], [1.67889702E12, 0.0], [1.67889673E12, 0.0], [1.67889707E12, 0.0], [1.67889741E12, 0.0], [1.67889648E12, 0.0], [1.67889682E12, 0.0], [1.67889716E12, 0.0], [1.6788975E12, 0.0], [1.67889657E12, 0.0], [1.67889768E12, 0.0], [1.67889691E12, 0.0], [1.67889725E12, 0.0], [1.67889759E12, 0.0], [1.67889666E12, 0.0], [1.678897E12, 0.0], [1.67889734E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.67889705E12, 0.0], [1.67889739E12, 0.0], [1.67889662E12, 0.0], [1.6788968E12, 0.0], [1.67889714E12, 0.0], [1.67889748E12, 0.0], [1.67889671E12, 0.0], [1.67889689E12, 0.0], [1.67889723E12, 0.0], [1.67889757E12, 0.0], [1.67889646E12, 0.0], [1.67889664E12, 0.0], [1.67889698E12, 0.0], [1.67889732E12, 0.0], [1.67889655E12, 0.0], [1.67889766E12, 0.0], [1.67889737E12, 0.0], [1.67889771E12, 0.0], [1.6788966E12, 0.0], [1.67889694E12, 0.0], [1.67889712E12, 0.0], [1.67889746E12, 0.0], [1.67889669E12, 0.0], [1.67889703E12, 0.0], [1.67889721E12, 0.0], [1.67889755E12, 0.0], [1.67889644E12, 0.0], [1.67889678E12, 0.0], [1.67889696E12, 0.0], [1.6788973E12, 0.0], [1.67889653E12, 0.0], [1.67889764E12, 0.0], [1.67889687E12, 0.0], [1.67889769E12, 0.0], [1.67889658E12, 0.0], [1.67889692E12, 0.0], [1.67889726E12, 0.0], [1.67889744E12, 0.0], [1.67889667E12, 0.0], [1.67889701E12, 0.0], [1.67889735E12, 0.0], [1.67889753E12, 0.0], [1.67889642E12, 0.0], [1.67889676E12, 0.0], [1.6788971E12, 0.0], [1.67889728E12, 0.0], [1.67889651E12, 0.0], [1.67889762E12, 0.0], [1.67889685E12, 0.0], [1.67889719E12, 0.0], [1.67889656E12, 0.0], [1.6788969E12, 0.0], [1.67889724E12, 0.0], [1.67889647E12, 0.0], [1.67889758E12, 0.0], [1.67889665E12, 0.0], [1.67889699E12, 0.0], [1.67889733E12, 0.0], [1.67889767E12, 0.0], [1.6788964E12, 0.0], [1.67889674E12, 0.0], [1.67889708E12, 0.0], [1.67889742E12, 0.0], [1.67889649E12, 0.0], [1.6788976E12, 0.0], [1.67889683E12, 0.0], [1.67889717E12, 0.0], [1.67889751E12, 0.0], [1.67889688E12, 0.0], [1.67889722E12, 0.0], [1.67889645E12, 0.0], [1.67889756E12, 0.0], [1.67889679E12, 0.0], [1.67889697E12, 0.0], [1.67889731E12, 0.0], [1.67889765E12, 0.0], [1.67889654E12, 0.0], [1.67889672E12, 0.0], [1.67889706E12, 0.0], [1.6788974E12, 0.0], [1.67889663E12, 0.0], [1.67889681E12, 0.0], [1.67889715E12, 0.0], [1.67889749E12, 0.0], [1.6788972E12, 0.0], [1.67889643E12, 0.0], [1.67889754E12, 0.0], [1.67889677E12, 0.0], [1.67889711E12, 0.0], [1.67889729E12, 0.0], [1.67889763E12, 0.0], [1.67889652E12, 0.0], [1.67889686E12, 0.0], [1.67889704E12, 0.0], [1.67889738E12, 0.0], [1.67889661E12, 0.0], [1.67889695E12, 0.0], [1.67889713E12, 0.0], [1.67889747E12, 0.0], [1.6788967E12, 0.0], [1.67889641E12, 0.0], [1.67889752E12, 0.0], [1.67889675E12, 0.0], [1.67889709E12, 0.0], [1.67889743E12, 0.0], [1.67889761E12, 0.0], [1.6788965E12, 0.0], [1.67889684E12, 0.0], [1.67889718E12, 0.0], [1.67889736E12, 0.0], [1.67889659E12, 0.0], [1.6788977E12, 0.0], [1.67889693E12, 0.0], [1.67889727E12, 0.0], [1.67889745E12, 0.0], [1.67889668E12, 0.0], [1.67889702E12, 0.0], [1.67889673E12, 0.0], [1.67889707E12, 0.0], [1.67889741E12, 0.0], [1.67889648E12, 0.0], [1.67889682E12, 0.0], [1.67889716E12, 0.0], [1.6788975E12, 0.0], [1.67889657E12, 0.0], [1.67889768E12, 0.0], [1.67889691E12, 0.0], [1.67889725E12, 0.0], [1.67889759E12, 0.0], [1.67889666E12, 0.0], [1.678897E12, 0.0], [1.67889734E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67889771E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2559.75, "minX": 1.6788964E12, "maxY": 7152.136363636365, "series": [{"data": [[1.67889705E12, 6291.375], [1.67889739E12, 6291.291666666666], [1.67889662E12, 6959.826086956522], [1.6788968E12, 7097.454545454545], [1.67889714E12, 6253.96153846154], [1.67889748E12, 6296.12], [1.67889671E12, 6846.391304347825], [1.67889689E12, 6381.416666666667], [1.67889723E12, 6556.333333333332], [1.67889757E12, 5505.916666666666], [1.67889646E12, 4963.8421052631575], [1.67889664E12, 6877.750000000002], [1.67889698E12, 6277.481481481482], [1.67889732E12, 6346.807692307692], [1.67889655E12, 6920.142857142857], [1.67889766E12, 4174.176470588236], [1.67889737E12, 6354.68], [1.67889771E12, 2981.5], [1.6788966E12, 6662.08], [1.67889694E12, 6404.464285714285], [1.67889712E12, 6290.214285714285], [1.67889746E12, 6319.541666666665], [1.67889669E12, 7116.909090909091], [1.67889703E12, 6429.576923076924], [1.67889721E12, 6324.333333333334], [1.67889755E12, 5769.304347826087], [1.67889644E12, 3894.8947368421054], [1.67889678E12, 7031.000000000001], [1.67889696E12, 6316.250000000002], [1.6788973E12, 6334.300000000001], [1.67889653E12, 6572.695652173913], [1.67889764E12, 4587.049999999998], [1.67889687E12, 6400.0], [1.67889769E12, 3114.125], [1.67889658E12, 6611.653846153848], [1.67889692E12, 6331.833333333333], [1.67889726E12, 6463.560000000001], [1.67889744E12, 6469.888888888889], [1.67889667E12, 7117.263157894737], [1.67889701E12, 6172.904761904762], [1.67889735E12, 6386.518518518517], [1.67889753E12, 6076.038461538461], [1.67889642E12, 3372.666666666666], [1.67889676E12, 7095.652173913043], [1.6788971E12, 6424.399999999999], [1.67889728E12, 6170.318181818182], [1.67889651E12, 6547.833333333334], [1.67889762E12, 4960.695652173913], [1.67889685E12, 6476.857142857144], [1.67889719E12, 6309.954545454546], [1.67889656E12, 6546.869565217391], [1.6788969E12, 6563.519999999999], [1.67889724E12, 6343.045454545456], [1.67889647E12, 5151.523809523809], [1.67889758E12, 5351.583333333333], [1.67889665E12, 6917.653846153845], [1.67889699E12, 6702.32], [1.67889733E12, 6252.04347826087], [1.67889767E12, 3792.6], [1.6788964E12, 3312.1666666666665], [1.67889674E12, 7042.800000000001], [1.67889708E12, 6447.2222222222235], [1.67889742E12, 6308.380952380952], [1.67889649E12, 5835.639999999999], [1.6788976E12, 5176.2], [1.67889683E12, 6413.956521739131], [1.67889717E12, 6399.961538461538], [1.67889751E12, 6220.0952380952385], [1.67889688E12, 6353.068965517242], [1.67889722E12, 6371.615384615384], [1.67889645E12, 4299.578947368422], [1.67889756E12, 5643.227272727273], [1.67889679E12, 7152.136363636365], [1.67889697E12, 6420.48], [1.67889731E12, 6379.400000000001], [1.67889765E12, 4373.555555555557], [1.67889654E12, 6741.333333333334], [1.67889672E12, 6880.130434782609], [1.67889706E12, 6224.391304347826], [1.6788974E12, 6323.4800000000005], [1.67889663E12, 6777.130434782609], [1.67889681E12, 6873.040000000001], [1.67889715E12, 6287.384615384616], [1.67889749E12, 6181.434782608696], [1.6788972E12, 6307.148148148149], [1.67889643E12, 3574.3076923076924], [1.67889754E12, 5839.2692307692305], [1.67889677E12, 7086.13043478261], [1.67889711E12, 6407.727272727273], [1.67889729E12, 6583.714285714286], [1.67889763E12, 4787.190476190475], [1.67889652E12, 6744.079999999999], [1.67889686E12, 6294.857142857143], [1.67889704E12, 6320.500000000001], [1.67889738E12, 6270.884615384615], [1.67889661E12, 6643.916666666667], [1.67889695E12, 6250.190476190475], [1.67889713E12, 6383.772727272727], [1.67889747E12, 6386.24], [1.6788967E12, 6539.280000000001], [1.67889641E12, 3212.777777777778], [1.67889752E12, 6180.791666666667], [1.67889675E12, 7082.833333333333], [1.67889709E12, 6314.680000000001], [1.67889743E12, 6349.961538461537], [1.67889761E12, 5153.666666666667], [1.6788965E12, 6160.478260869566], [1.67889684E12, 6826.680000000001], [1.67889718E12, 6391.576923076924], [1.67889736E12, 6404.772727272727], [1.67889659E12, 7019.105263157895], [1.6788977E12, 2984.75], [1.67889693E12, 6296.28], [1.67889727E12, 6278.571428571428], [1.67889745E12, 6361.920000000001], [1.67889668E12, 7088.391304347826], [1.67889702E12, 6430.800000000001], [1.67889673E12, 6731.124999999999], [1.67889707E12, 6265.52], [1.67889741E12, 6291.346153846153], [1.67889648E12, 5471.789473684212], [1.67889682E12, 6713.0952380952385], [1.67889716E12, 6237.217391304347], [1.6788975E12, 6190.777777777778], [1.67889657E12, 6945.5], [1.67889768E12, 3264.2999999999997], [1.67889691E12, 6365.333333333334], [1.67889725E12, 6465.538461538461], [1.67889759E12, 5196.000000000001], [1.67889666E12, 6821.791666666665], [1.678897E12, 6249.423076923077], [1.67889734E12, 6252.925925925927]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[1.67889705E12, 5708.034482758621], [1.67889739E12, 5638.320000000001], [1.67889662E12, 6297.941176470587], [1.6788968E12, 6383.523809523809], [1.67889714E12, 5636.92], [1.67889748E12, 5683.814814814815], [1.67889671E12, 6282.32], [1.67889689E12, 5798.120000000001], [1.67889723E12, 5862.166666666665], [1.67889757E12, 5027.958333333333], [1.67889646E12, 4428.75], [1.67889664E12, 6270.772727272728], [1.67889698E12, 5799.5], [1.67889732E12, 5800.16], [1.67889655E12, 6205.739130434783], [1.67889766E12, 3785.5000000000005], [1.67889737E12, 5822.320000000001], [1.67889771E12, 2699.5], [1.6788966E12, 6028.32], [1.67889694E12, 5780.391304347827], [1.67889712E12, 5618.76923076923], [1.67889746E12, 5746.916666666666], [1.67889669E12, 6376.583333333333], [1.67889703E12, 5751.956521739131], [1.67889721E12, 5658.76], [1.67889755E12, 5280.541666666667], [1.67889644E12, 3509.7142857142862], [1.67889678E12, 6363.727272727273], [1.67889696E12, 5784.076923076924], [1.6788973E12, 5693.62962962963], [1.67889653E12, 5939.454545454544], [1.67889764E12, 4232.7619047619055], [1.67889687E12, 5750.0], [1.67889769E12, 2798.222222222222], [1.67889658E12, 6054.260869565218], [1.67889692E12, 5784.720000000001], [1.67889726E12, 5818.1], [1.67889744E12, 5827.181818181818], [1.67889667E12, 6387.260869565217], [1.67889701E12, 5716.857142857142], [1.67889735E12, 5778.809523809523], [1.67889753E12, 5459.653846153847], [1.67889642E12, 3057.4], [1.67889676E12, 6501.250000000001], [1.6788971E12, 5828.04347826087], [1.67889728E12, 5651.960000000001], [1.67889651E12, 6018.913043478261], [1.67889762E12, 4505.999999999999], [1.67889685E12, 5839.923076923077], [1.67889719E12, 5804.307692307693], [1.67889656E12, 5963.625000000001], [1.6788969E12, 5931.619047619048], [1.67889724E12, 5723.880000000001], [1.67889647E12, 4641.473684210526], [1.67889758E12, 4904.666666666666], [1.67889665E12, 6171.615384615384], [1.67889699E12, 6063.47619047619], [1.67889733E12, 5701.749999999999], [1.67889767E12, 3338.7142857142853], [1.6788964E12, 2559.75], [1.67889674E12, 6247.666666666667], [1.67889708E12, 5766.130434782608], [1.67889742E12, 5794.592592592594], [1.67889649E12, 5333.727272727273], [1.6788976E12, 4765.954545454545], [1.67889683E12, 5972.080000000001], [1.67889717E12, 5811.818181818182], [1.67889751E12, 5675.043478260871], [1.67889688E12, 5716.153846153847], [1.67889722E12, 5753.374999999998], [1.67889645E12, 3834.5789473684213], [1.67889756E12, 5114.04], [1.67889679E12, 6565.608695652174], [1.67889697E12, 5763.038461538461], [1.67889731E12, 5771.043478260869], [1.67889765E12, 4023.1499999999996], [1.67889654E12, 6174.32], [1.67889672E12, 6204.666666666667], [1.67889706E12, 5651.185185185186], [1.6788974E12, 5656.521739130434], [1.67889663E12, 6176.692307692308], [1.67889681E12, 6249.291666666665], [1.67889715E12, 5743.076923076923], [1.67889749E12, 5519.227272727272], [1.6788972E12, 5665.11111111111], [1.67889643E12, 3235.4000000000005], [1.67889754E12, 5368.2380952380945], [1.67889677E12, 6380.699999999999], [1.67889711E12, 5755.357142857142], [1.67889729E12, 5871.0], [1.67889763E12, 4321.2], [1.67889652E12, 6094.291666666666], [1.67889686E12, 5734.346153846154], [1.67889704E12, 5753.5], [1.67889738E12, 5704.576923076924], [1.67889661E12, 5886.961538461538], [1.67889695E12, 5696.0370370370365], [1.67889713E12, 5771.86956521739], [1.67889747E12, 5752.3600000000015], [1.6788967E12, 5973.000000000001], [1.67889641E12, 2903.1], [1.67889752E12, 5595.846153846154], [1.67889675E12, 6466.772727272727], [1.67889709E12, 5678.6], [1.67889743E12, 5706.583333333333], [1.67889761E12, 4670.40909090909], [1.6788965E12, 5608.954545454547], [1.67889684E12, 6114.000000000001], [1.67889718E12, 5834.565217391305], [1.67889736E12, 5807.038461538461], [1.67889659E12, 6218.708333333334], [1.6788977E12, 2694.3333333333335], [1.67889693E12, 5618.208333333333], [1.67889727E12, 5651.708333333333], [1.67889745E12, 5816.16], [1.67889668E12, 6324.159999999999], [1.67889702E12, 5785.208333333333], [1.67889673E12, 6076.333333333335], [1.67889707E12, 5759.869565217392], [1.67889741E12, 5676.62962962963], [1.67889648E12, 4969.65], [1.67889682E12, 6060.666666666667], [1.67889716E12, 5736.653846153847], [1.6788975E12, 5650.749999999999], [1.67889657E12, 6284.47619047619], [1.67889768E12, 2934.0], [1.67889691E12, 5767.074074074074], [1.67889725E12, 5853.535714285716], [1.67889759E12, 4743.5], [1.67889666E12, 6130.764705882353], [1.678897E12, 5638.0], [1.67889734E12, 5717.6296296296305]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67889771E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6788964E12, "maxY": 4.9E-324, "series": [{"data": [[1.67889705E12, 0.0], [1.67889739E12, 0.0], [1.67889662E12, 0.0], [1.6788968E12, 0.0], [1.67889714E12, 0.0], [1.67889748E12, 0.0], [1.67889671E12, 0.0], [1.67889689E12, 0.0], [1.67889723E12, 0.0], [1.67889757E12, 0.0], [1.67889646E12, 0.0], [1.67889664E12, 0.0], [1.67889698E12, 0.0], [1.67889732E12, 0.0], [1.67889655E12, 0.0], [1.67889766E12, 0.0], [1.67889737E12, 0.0], [1.67889771E12, 0.0], [1.6788966E12, 0.0], [1.67889694E12, 0.0], [1.67889712E12, 0.0], [1.67889746E12, 0.0], [1.67889669E12, 0.0], [1.67889703E12, 0.0], [1.67889721E12, 0.0], [1.67889755E12, 0.0], [1.67889644E12, 0.0], [1.67889678E12, 0.0], [1.67889696E12, 0.0], [1.6788973E12, 0.0], [1.67889653E12, 0.0], [1.67889764E12, 0.0], [1.67889687E12, 0.0], [1.67889769E12, 0.0], [1.67889658E12, 0.0], [1.67889692E12, 0.0], [1.67889726E12, 0.0], [1.67889744E12, 0.0], [1.67889667E12, 0.0], [1.67889701E12, 0.0], [1.67889735E12, 0.0], [1.67889753E12, 0.0], [1.67889642E12, 0.0], [1.67889676E12, 0.0], [1.6788971E12, 0.0], [1.67889728E12, 0.0], [1.67889651E12, 0.0], [1.67889762E12, 0.0], [1.67889685E12, 0.0], [1.67889719E12, 0.0], [1.67889656E12, 0.0], [1.6788969E12, 0.0], [1.67889724E12, 0.0], [1.67889647E12, 0.0], [1.67889758E12, 0.0], [1.67889665E12, 0.0], [1.67889699E12, 0.0], [1.67889733E12, 0.0], [1.67889767E12, 0.0], [1.6788964E12, 0.0], [1.67889674E12, 0.0], [1.67889708E12, 0.0], [1.67889742E12, 0.0], [1.67889649E12, 0.0], [1.6788976E12, 0.0], [1.67889683E12, 0.0], [1.67889717E12, 0.0], [1.67889751E12, 0.0], [1.67889688E12, 0.0], [1.67889722E12, 0.0], [1.67889645E12, 0.0], [1.67889756E12, 0.0], [1.67889679E12, 0.0], [1.67889697E12, 0.0], [1.67889731E12, 0.0], [1.67889765E12, 0.0], [1.67889654E12, 0.0], [1.67889672E12, 0.0], [1.67889706E12, 0.0], [1.6788974E12, 0.0], [1.67889663E12, 0.0], [1.67889681E12, 0.0], [1.67889715E12, 0.0], [1.67889749E12, 0.0], [1.6788972E12, 0.0], [1.67889643E12, 0.0], [1.67889754E12, 0.0], [1.67889677E12, 0.0], [1.67889711E12, 0.0], [1.67889729E12, 0.0], [1.67889763E12, 0.0], [1.67889652E12, 0.0], [1.67889686E12, 0.0], [1.67889704E12, 0.0], [1.67889738E12, 0.0], [1.67889661E12, 0.0], [1.67889695E12, 0.0], [1.67889713E12, 0.0], [1.67889747E12, 0.0], [1.6788967E12, 0.0], [1.67889641E12, 0.0], [1.67889752E12, 0.0], [1.67889675E12, 0.0], [1.67889709E12, 0.0], [1.67889743E12, 0.0], [1.67889761E12, 0.0], [1.6788965E12, 0.0], [1.67889684E12, 0.0], [1.67889718E12, 0.0], [1.67889736E12, 0.0], [1.67889659E12, 0.0], [1.6788977E12, 0.0], [1.67889693E12, 0.0], [1.67889727E12, 0.0], [1.67889745E12, 0.0], [1.67889668E12, 0.0], [1.67889702E12, 0.0], [1.67889673E12, 0.0], [1.67889707E12, 0.0], [1.67889741E12, 0.0], [1.67889648E12, 0.0], [1.67889682E12, 0.0], [1.67889716E12, 0.0], [1.6788975E12, 0.0], [1.67889657E12, 0.0], [1.67889768E12, 0.0], [1.67889691E12, 0.0], [1.67889725E12, 0.0], [1.67889759E12, 0.0], [1.67889666E12, 0.0], [1.678897E12, 0.0], [1.67889734E12, 0.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[1.67889705E12, 0.0], [1.67889739E12, 0.0], [1.67889662E12, 0.0], [1.6788968E12, 0.0], [1.67889714E12, 0.0], [1.67889748E12, 0.0], [1.67889671E12, 0.0], [1.67889689E12, 0.0], [1.67889723E12, 0.0], [1.67889757E12, 0.0], [1.67889646E12, 0.0], [1.67889664E12, 0.0], [1.67889698E12, 0.0], [1.67889732E12, 0.0], [1.67889655E12, 0.0], [1.67889766E12, 0.0], [1.67889737E12, 0.0], [1.67889771E12, 0.0], [1.6788966E12, 0.0], [1.67889694E12, 0.0], [1.67889712E12, 0.0], [1.67889746E12, 0.0], [1.67889669E12, 0.0], [1.67889703E12, 0.0], [1.67889721E12, 0.0], [1.67889755E12, 0.0], [1.67889644E12, 0.0], [1.67889678E12, 0.0], [1.67889696E12, 0.0], [1.6788973E12, 0.0], [1.67889653E12, 0.0], [1.67889764E12, 0.0], [1.67889687E12, 0.0], [1.67889769E12, 0.0], [1.67889658E12, 0.0], [1.67889692E12, 0.0], [1.67889726E12, 0.0], [1.67889744E12, 0.0], [1.67889667E12, 0.0], [1.67889701E12, 0.0], [1.67889735E12, 0.0], [1.67889753E12, 0.0], [1.67889642E12, 0.0], [1.67889676E12, 0.0], [1.6788971E12, 0.0], [1.67889728E12, 0.0], [1.67889651E12, 0.0], [1.67889762E12, 0.0], [1.67889685E12, 0.0], [1.67889719E12, 0.0], [1.67889656E12, 0.0], [1.6788969E12, 0.0], [1.67889724E12, 0.0], [1.67889647E12, 0.0], [1.67889758E12, 0.0], [1.67889665E12, 0.0], [1.67889699E12, 0.0], [1.67889733E12, 0.0], [1.67889767E12, 0.0], [1.6788964E12, 0.0], [1.67889674E12, 0.0], [1.67889708E12, 0.0], [1.67889742E12, 0.0], [1.67889649E12, 0.0], [1.6788976E12, 0.0], [1.67889683E12, 0.0], [1.67889717E12, 0.0], [1.67889751E12, 0.0], [1.67889688E12, 0.0], [1.67889722E12, 0.0], [1.67889645E12, 0.0], [1.67889756E12, 0.0], [1.67889679E12, 0.0], [1.67889697E12, 0.0], [1.67889731E12, 0.0], [1.67889765E12, 0.0], [1.67889654E12, 0.0], [1.67889672E12, 0.0], [1.67889706E12, 0.0], [1.6788974E12, 0.0], [1.67889663E12, 0.0], [1.67889681E12, 0.0], [1.67889715E12, 0.0], [1.67889749E12, 0.0], [1.6788972E12, 0.0], [1.67889643E12, 0.0], [1.67889754E12, 0.0], [1.67889677E12, 0.0], [1.67889711E12, 0.0], [1.67889729E12, 0.0], [1.67889763E12, 0.0], [1.67889652E12, 0.0], [1.67889686E12, 0.0], [1.67889704E12, 0.0], [1.67889738E12, 0.0], [1.67889661E12, 0.0], [1.67889695E12, 0.0], [1.67889713E12, 0.0], [1.67889747E12, 0.0], [1.6788967E12, 0.0], [1.67889641E12, 0.0], [1.67889752E12, 0.0], [1.67889675E12, 0.0], [1.67889709E12, 0.0], [1.67889743E12, 0.0], [1.67889761E12, 0.0], [1.6788965E12, 0.0], [1.67889684E12, 0.0], [1.67889718E12, 0.0], [1.67889736E12, 0.0], [1.67889659E12, 0.0], [1.6788977E12, 0.0], [1.67889693E12, 0.0], [1.67889727E12, 0.0], [1.67889745E12, 0.0], [1.67889668E12, 0.0], [1.67889702E12, 0.0], [1.67889673E12, 0.0], [1.67889707E12, 0.0], [1.67889741E12, 0.0], [1.67889648E12, 0.0], [1.67889682E12, 0.0], [1.67889716E12, 0.0], [1.6788975E12, 0.0], [1.67889657E12, 0.0], [1.67889768E12, 0.0], [1.67889691E12, 0.0], [1.67889725E12, 0.0], [1.67889759E12, 0.0], [1.67889666E12, 0.0], [1.678897E12, 0.0], [1.67889734E12, 0.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67889771E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6788964E12, "maxY": 4.9E-324, "series": [{"data": [[1.67889705E12, 0.0], [1.67889739E12, 0.0], [1.67889662E12, 0.0], [1.6788968E12, 0.0], [1.67889714E12, 0.0], [1.67889748E12, 0.0], [1.67889671E12, 0.0], [1.67889689E12, 0.0], [1.67889723E12, 0.0], [1.67889757E12, 0.0], [1.67889646E12, 0.0], [1.67889664E12, 0.0], [1.67889698E12, 0.0], [1.67889732E12, 0.0], [1.67889655E12, 0.0], [1.67889766E12, 0.0], [1.67889737E12, 0.0], [1.67889771E12, 0.0], [1.6788966E12, 0.0], [1.67889694E12, 0.0], [1.67889712E12, 0.0], [1.67889746E12, 0.0], [1.67889669E12, 0.0], [1.67889703E12, 0.0], [1.67889721E12, 0.0], [1.67889755E12, 0.0], [1.67889644E12, 0.0], [1.67889678E12, 0.0], [1.67889696E12, 0.0], [1.6788973E12, 0.0], [1.67889653E12, 0.0], [1.67889764E12, 0.0], [1.67889687E12, 0.0], [1.67889769E12, 0.0], [1.67889658E12, 0.0], [1.67889692E12, 0.0], [1.67889726E12, 0.0], [1.67889744E12, 0.0], [1.67889667E12, 0.0], [1.67889701E12, 0.0], [1.67889735E12, 0.0], [1.67889753E12, 0.0], [1.67889642E12, 0.0], [1.67889676E12, 0.0], [1.6788971E12, 0.0], [1.67889728E12, 0.0], [1.67889651E12, 0.0], [1.67889762E12, 0.0], [1.67889685E12, 0.0], [1.67889719E12, 0.0], [1.67889656E12, 0.0], [1.6788969E12, 0.0], [1.67889724E12, 0.0], [1.67889647E12, 0.0], [1.67889758E12, 0.0], [1.67889665E12, 0.0], [1.67889699E12, 0.0], [1.67889733E12, 0.0], [1.67889767E12, 0.0], [1.6788964E12, 0.0], [1.67889674E12, 0.0], [1.67889708E12, 0.0], [1.67889742E12, 0.0], [1.67889649E12, 0.0], [1.6788976E12, 0.0], [1.67889683E12, 0.0], [1.67889717E12, 0.0], [1.67889751E12, 0.0], [1.67889688E12, 0.0], [1.67889722E12, 0.0], [1.67889645E12, 0.0], [1.67889756E12, 0.0], [1.67889679E12, 0.0], [1.67889697E12, 0.0], [1.67889731E12, 0.0], [1.67889765E12, 0.0], [1.67889654E12, 0.0], [1.67889672E12, 0.0], [1.67889706E12, 0.0], [1.6788974E12, 0.0], [1.67889663E12, 0.0], [1.67889681E12, 0.0], [1.67889715E12, 0.0], [1.67889749E12, 0.0], [1.6788972E12, 0.0], [1.67889643E12, 0.0], [1.67889754E12, 0.0], [1.67889677E12, 0.0], [1.67889711E12, 0.0], [1.67889729E12, 0.0], [1.67889763E12, 0.0], [1.67889652E12, 0.0], [1.67889686E12, 0.0], [1.67889704E12, 0.0], [1.67889738E12, 0.0], [1.67889661E12, 0.0], [1.67889695E12, 0.0], [1.67889713E12, 0.0], [1.67889747E12, 0.0], [1.6788967E12, 0.0], [1.67889641E12, 0.0], [1.67889752E12, 0.0], [1.67889675E12, 0.0], [1.67889709E12, 0.0], [1.67889743E12, 0.0], [1.67889761E12, 0.0], [1.6788965E12, 0.0], [1.67889684E12, 0.0], [1.67889718E12, 0.0], [1.67889736E12, 0.0], [1.67889659E12, 0.0], [1.6788977E12, 0.0], [1.67889693E12, 0.0], [1.67889727E12, 0.0], [1.67889745E12, 0.0], [1.67889668E12, 0.0], [1.67889702E12, 0.0], [1.67889673E12, 0.0], [1.67889707E12, 0.0], [1.67889741E12, 0.0], [1.67889648E12, 0.0], [1.67889682E12, 0.0], [1.67889716E12, 0.0], [1.6788975E12, 0.0], [1.67889657E12, 0.0], [1.67889768E12, 0.0], [1.67889691E12, 0.0], [1.67889725E12, 0.0], [1.67889759E12, 0.0], [1.67889666E12, 0.0], [1.678897E12, 0.0], [1.67889734E12, 0.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[1.67889705E12, 0.0], [1.67889739E12, 0.0], [1.67889662E12, 0.0], [1.6788968E12, 0.0], [1.67889714E12, 0.0], [1.67889748E12, 0.0], [1.67889671E12, 0.0], [1.67889689E12, 0.0], [1.67889723E12, 0.0], [1.67889757E12, 0.0], [1.67889646E12, 0.0], [1.67889664E12, 0.0], [1.67889698E12, 0.0], [1.67889732E12, 0.0], [1.67889655E12, 0.0], [1.67889766E12, 0.0], [1.67889737E12, 0.0], [1.67889771E12, 0.0], [1.6788966E12, 0.0], [1.67889694E12, 0.0], [1.67889712E12, 0.0], [1.67889746E12, 0.0], [1.67889669E12, 0.0], [1.67889703E12, 0.0], [1.67889721E12, 0.0], [1.67889755E12, 0.0], [1.67889644E12, 0.0], [1.67889678E12, 0.0], [1.67889696E12, 0.0], [1.6788973E12, 0.0], [1.67889653E12, 0.0], [1.67889764E12, 0.0], [1.67889687E12, 0.0], [1.67889769E12, 0.0], [1.67889658E12, 0.0], [1.67889692E12, 0.0], [1.67889726E12, 0.0], [1.67889744E12, 0.0], [1.67889667E12, 0.0], [1.67889701E12, 0.0], [1.67889735E12, 0.0], [1.67889753E12, 0.0], [1.67889642E12, 0.0], [1.67889676E12, 0.0], [1.6788971E12, 0.0], [1.67889728E12, 0.0], [1.67889651E12, 0.0], [1.67889762E12, 0.0], [1.67889685E12, 0.0], [1.67889719E12, 0.0], [1.67889656E12, 0.0], [1.6788969E12, 0.0], [1.67889724E12, 0.0], [1.67889647E12, 0.0], [1.67889758E12, 0.0], [1.67889665E12, 0.0], [1.67889699E12, 0.0], [1.67889733E12, 0.0], [1.67889767E12, 0.0], [1.6788964E12, 0.0], [1.67889674E12, 0.0], [1.67889708E12, 0.0], [1.67889742E12, 0.0], [1.67889649E12, 0.0], [1.6788976E12, 0.0], [1.67889683E12, 0.0], [1.67889717E12, 0.0], [1.67889751E12, 0.0], [1.67889688E12, 0.0], [1.67889722E12, 0.0], [1.67889645E12, 0.0], [1.67889756E12, 0.0], [1.67889679E12, 0.0], [1.67889697E12, 0.0], [1.67889731E12, 0.0], [1.67889765E12, 0.0], [1.67889654E12, 0.0], [1.67889672E12, 0.0], [1.67889706E12, 0.0], [1.6788974E12, 0.0], [1.67889663E12, 0.0], [1.67889681E12, 0.0], [1.67889715E12, 0.0], [1.67889749E12, 0.0], [1.6788972E12, 0.0], [1.67889643E12, 0.0], [1.67889754E12, 0.0], [1.67889677E12, 0.0], [1.67889711E12, 0.0], [1.67889729E12, 0.0], [1.67889763E12, 0.0], [1.67889652E12, 0.0], [1.67889686E12, 0.0], [1.67889704E12, 0.0], [1.67889738E12, 0.0], [1.67889661E12, 0.0], [1.67889695E12, 0.0], [1.67889713E12, 0.0], [1.67889747E12, 0.0], [1.6788967E12, 0.0], [1.67889641E12, 0.0], [1.67889752E12, 0.0], [1.67889675E12, 0.0], [1.67889709E12, 0.0], [1.67889743E12, 0.0], [1.67889761E12, 0.0], [1.6788965E12, 0.0], [1.67889684E12, 0.0], [1.67889718E12, 0.0], [1.67889736E12, 0.0], [1.67889659E12, 0.0], [1.6788977E12, 0.0], [1.67889693E12, 0.0], [1.67889727E12, 0.0], [1.67889745E12, 0.0], [1.67889668E12, 0.0], [1.67889702E12, 0.0], [1.67889673E12, 0.0], [1.67889707E12, 0.0], [1.67889741E12, 0.0], [1.67889648E12, 0.0], [1.67889682E12, 0.0], [1.67889716E12, 0.0], [1.6788975E12, 0.0], [1.67889657E12, 0.0], [1.67889768E12, 0.0], [1.67889691E12, 0.0], [1.67889725E12, 0.0], [1.67889759E12, 0.0], [1.67889666E12, 0.0], [1.678897E12, 0.0], [1.67889734E12, 0.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67889771E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2441.0, "minX": 1.6788964E12, "maxY": 8013.0, "series": [{"data": [[1.67889705E12, 6767.0], [1.67889739E12, 6777.0], [1.67889662E12, 7712.0], [1.6788968E12, 7640.0], [1.67889714E12, 6719.0], [1.67889748E12, 6767.0], [1.67889671E12, 7692.0], [1.67889689E12, 7076.0], [1.67889723E12, 6993.0], [1.67889757E12, 6023.0], [1.67889646E12, 5462.0], [1.67889664E12, 7425.0], [1.67889698E12, 6868.0], [1.67889732E12, 6975.0], [1.67889655E12, 7450.0], [1.67889766E12, 4421.0], [1.67889737E12, 7032.0], [1.67889771E12, 2990.0], [1.6788966E12, 7281.0], [1.67889694E12, 7032.0], [1.67889712E12, 6727.0], [1.67889746E12, 6864.0], [1.67889669E12, 7633.0], [1.67889703E12, 6952.0], [1.67889721E12, 6821.0], [1.67889755E12, 6309.0], [1.67889644E12, 4430.0], [1.67889678E12, 7908.0], [1.67889696E12, 6906.0], [1.6788973E12, 6778.0], [1.67889653E12, 7202.0], [1.67889764E12, 5023.0], [1.67889687E12, 6837.0], [1.67889769E12, 3127.0], [1.67889658E12, 7253.0], [1.67889692E12, 6930.0], [1.67889726E12, 7241.0], [1.67889744E12, 7056.0], [1.67889667E12, 7974.0], [1.67889701E12, 6716.0], [1.67889735E12, 6944.0], [1.67889753E12, 6540.0], [1.67889642E12, 3717.0], [1.67889676E12, 8009.0], [1.6788971E12, 6998.0], [1.67889728E12, 6636.0], [1.67889651E12, 7117.0], [1.67889762E12, 5335.0], [1.67889685E12, 6982.0], [1.67889719E12, 6988.0], [1.67889656E12, 7157.0], [1.6788969E12, 7186.0], [1.67889724E12, 6858.0], [1.67889647E12, 5682.0], [1.67889758E12, 5762.0], [1.67889665E12, 7553.0], [1.67889699E12, 7324.0], [1.67889733E12, 6848.0], [1.67889767E12, 4108.0], [1.6788964E12, 4314.0], [1.67889674E12, 7644.0], [1.67889708E12, 6932.0], [1.67889742E12, 6823.0], [1.67889649E12, 6594.0], [1.6788976E12, 5607.0], [1.67889683E12, 7299.0], [1.67889717E12, 6909.0], [1.67889751E12, 6772.0], [1.67889688E12, 6864.0], [1.67889722E12, 6893.0], [1.67889645E12, 4762.0], [1.67889756E12, 6188.0], [1.67889679E12, 7970.0], [1.67889697E12, 6906.0], [1.67889731E12, 7027.0], [1.67889765E12, 4683.0], [1.67889654E12, 7440.0], [1.67889672E12, 7404.0], [1.67889706E12, 6718.0], [1.6788974E12, 6758.0], [1.67889663E12, 7491.0], [1.67889681E12, 7573.0], [1.67889715E12, 6845.0], [1.67889749E12, 6741.0], [1.6788972E12, 6783.0], [1.67889643E12, 3933.0], [1.67889754E12, 6289.0], [1.67889677E12, 8013.0], [1.67889711E12, 7190.0], [1.67889729E12, 7088.0], [1.67889763E12, 5169.0], [1.67889652E12, 7464.0], [1.67889686E12, 6790.0], [1.67889704E12, 6874.0], [1.67889738E12, 6770.0], [1.67889661E12, 7381.0], [1.67889695E12, 6774.0], [1.67889713E12, 6871.0], [1.67889747E12, 7059.0], [1.6788967E12, 7352.0], [1.67889641E12, 3617.0], [1.67889752E12, 6824.0], [1.67889675E12, 7720.0], [1.67889709E12, 6816.0], [1.67889743E12, 6848.0], [1.67889761E12, 5523.0], [1.6788965E12, 6939.0], [1.67889684E12, 7594.0], [1.67889718E12, 7055.0], [1.67889736E12, 6902.0], [1.67889659E12, 7548.0], [1.6788977E12, 2997.0], [1.67889693E12, 6812.0], [1.67889727E12, 6720.0], [1.67889745E12, 6848.0], [1.67889668E12, 7938.0], [1.67889702E12, 6921.0], [1.67889673E12, 7289.0], [1.67889707E12, 6779.0], [1.67889741E12, 6749.0], [1.67889648E12, 6005.0], [1.67889682E12, 7312.0], [1.67889716E12, 6784.0], [1.6788975E12, 6748.0], [1.67889657E12, 7646.0], [1.67889768E12, 3415.0], [1.67889691E12, 6869.0], [1.67889725E12, 6982.0], [1.67889759E12, 5516.0], [1.67889666E12, 7568.0], [1.678897E12, 6749.0], [1.67889734E12, 6682.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.67889705E12, 6697.6], [1.67889739E12, 6654.0], [1.67889662E12, 7499.0], [1.6788968E12, 7592.4], [1.67889714E12, 6670.0], [1.67889748E12, 6675.2], [1.67889671E12, 7505.8], [1.67889689E12, 6761.0], [1.67889723E12, 6937.5], [1.67889757E12, 5794.7], [1.67889646E12, 5404.0], [1.67889664E12, 7333.6], [1.67889698E12, 6681.0], [1.67889732E12, 6771.6], [1.67889655E12, 7321.0], [1.67889766E12, 4408.0], [1.67889737E12, 6794.4], [1.67889771E12, 2990.0], [1.6788966E12, 7113.9], [1.67889694E12, 6808.2], [1.67889712E12, 6613.0], [1.67889746E12, 6691.5], [1.67889669E12, 7547.6], [1.67889703E12, 6910.0], [1.67889721E12, 6727.0], [1.67889755E12, 6042.400000000001], [1.67889644E12, 4164.2], [1.67889678E12, 7681.0], [1.67889696E12, 6726.9], [1.6788973E12, 6636.6], [1.67889653E12, 7101.4], [1.67889764E12, 4798.6], [1.67889687E12, 6782.3], [1.67889769E12, 3125.4], [1.67889658E12, 7038.0], [1.67889692E12, 6773.0], [1.67889726E12, 6890.2], [1.67889744E12, 6883.0], [1.67889667E12, 7617.900000000001], [1.67889701E12, 6654.0], [1.67889735E12, 6786.7], [1.67889753E12, 6428.6], [1.67889642E12, 3674.4], [1.67889676E12, 7577.8], [1.6788971E12, 6866.6], [1.67889728E12, 6573.2], [1.67889651E12, 7043.400000000001], [1.67889762E12, 5235.6], [1.67889685E12, 6879.0], [1.67889719E12, 6721.4], [1.67889656E12, 6982.4], [1.6788969E12, 7047.9], [1.67889724E12, 6706.2], [1.67889647E12, 5654.4], [1.67889758E12, 5656.7], [1.67889665E12, 7372.1], [1.67889699E12, 7115.6], [1.67889733E12, 6674.4], [1.67889767E12, 4020.0], [1.6788964E12, 4223.200000000001], [1.67889674E12, 7519.0], [1.67889708E12, 6829.0], [1.67889742E12, 6678.7], [1.67889649E12, 6354.400000000001], [1.6788976E12, 5528.4], [1.67889683E12, 6758.4], [1.67889717E12, 6805.8], [1.67889751E12, 6663.0], [1.67889688E12, 6766.8], [1.67889722E12, 6835.5], [1.67889645E12, 4602.8], [1.67889756E12, 5885.6], [1.67889679E12, 7745.6], [1.67889697E12, 6809.4], [1.67889731E12, 6838.5], [1.67889765E12, 4621.3], [1.67889654E12, 7220.0], [1.67889672E12, 7257.6], [1.67889706E12, 6638.2], [1.6788974E12, 6683.3], [1.67889663E12, 7224.0], [1.67889681E12, 7464.0], [1.67889715E12, 6688.400000000001], [1.67889749E12, 6573.8], [1.6788972E12, 6701.5], [1.67889643E12, 3888.0], [1.67889754E12, 6178.0], [1.67889677E12, 7781.8], [1.67889711E12, 6875.0], [1.67889729E12, 6963.5], [1.67889763E12, 5039.6], [1.67889652E12, 7353.0], [1.67889686E12, 6713.0], [1.67889704E12, 6801.2], [1.67889738E12, 6659.4], [1.67889661E12, 7142.5], [1.67889695E12, 6606.0], [1.67889713E12, 6802.2], [1.67889747E12, 6809.3], [1.6788967E12, 7120.0], [1.67889641E12, 3588.0], [1.67889752E12, 6576.0], [1.67889675E12, 7522.6], [1.67889709E12, 6683.9], [1.67889743E12, 6767.2], [1.67889761E12, 5450.4], [1.6788965E12, 6586.599999999999], [1.67889684E12, 7282.599999999999], [1.67889718E12, 6864.0], [1.67889736E12, 6850.8], [1.67889659E12, 7441.0], [1.6788977E12, 2997.0], [1.67889693E12, 6640.0], [1.67889727E12, 6659.5], [1.67889745E12, 6781.0], [1.67889668E12, 7670.9], [1.67889702E12, 6740.0], [1.67889673E12, 7183.6], [1.67889707E12, 6665.0], [1.67889741E12, 6679.8], [1.67889648E12, 5917.0], [1.67889682E12, 7197.8], [1.67889716E12, 6712.0], [1.6788975E12, 6622.4], [1.67889657E12, 7474.6], [1.67889768E12, 3410.1], [1.67889691E12, 6757.6], [1.67889725E12, 6871.0], [1.67889759E12, 5464.2], [1.67889666E12, 7288.2], [1.678897E12, 6636.4], [1.67889734E12, 6641.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.67889705E12, 6767.0], [1.67889739E12, 6777.0], [1.67889662E12, 7712.0], [1.6788968E12, 7640.0], [1.67889714E12, 6719.0], [1.67889748E12, 6767.0], [1.67889671E12, 7692.0], [1.67889689E12, 7076.0], [1.67889723E12, 6993.0], [1.67889757E12, 6023.0], [1.67889646E12, 5462.0], [1.67889664E12, 7425.0], [1.67889698E12, 6868.0], [1.67889732E12, 6975.0], [1.67889655E12, 7450.0], [1.67889766E12, 4421.0], [1.67889737E12, 7032.0], [1.67889771E12, 2990.0], [1.6788966E12, 7281.0], [1.67889694E12, 7032.0], [1.67889712E12, 6727.0], [1.67889746E12, 6864.0], [1.67889669E12, 7633.0], [1.67889703E12, 6952.0], [1.67889721E12, 6821.0], [1.67889755E12, 6309.0], [1.67889644E12, 4430.0], [1.67889678E12, 7908.0], [1.67889696E12, 6906.0], [1.6788973E12, 6778.0], [1.67889653E12, 7202.0], [1.67889764E12, 5023.0], [1.67889687E12, 6837.0], [1.67889769E12, 3127.0], [1.67889658E12, 7253.0], [1.67889692E12, 6930.0], [1.67889726E12, 7241.0], [1.67889744E12, 7056.0], [1.67889667E12, 7974.0], [1.67889701E12, 6716.0], [1.67889735E12, 6944.0], [1.67889753E12, 6540.0], [1.67889642E12, 3717.0], [1.67889676E12, 8009.0], [1.6788971E12, 6998.0], [1.67889728E12, 6636.0], [1.67889651E12, 7117.0], [1.67889762E12, 5335.0], [1.67889685E12, 6982.0], [1.67889719E12, 6988.0], [1.67889656E12, 7157.0], [1.6788969E12, 7186.0], [1.67889724E12, 6858.0], [1.67889647E12, 5682.0], [1.67889758E12, 5762.0], [1.67889665E12, 7553.0], [1.67889699E12, 7324.0], [1.67889733E12, 6848.0], [1.67889767E12, 4108.0], [1.6788964E12, 4314.0], [1.67889674E12, 7644.0], [1.67889708E12, 6932.0], [1.67889742E12, 6823.0], [1.67889649E12, 6594.0], [1.6788976E12, 5607.0], [1.67889683E12, 7299.0], [1.67889717E12, 6909.0], [1.67889751E12, 6772.0], [1.67889688E12, 6864.0], [1.67889722E12, 6893.0], [1.67889645E12, 4762.0], [1.67889756E12, 6188.0], [1.67889679E12, 7970.0], [1.67889697E12, 6906.0], [1.67889731E12, 7027.0], [1.67889765E12, 4683.0], [1.67889654E12, 7440.0], [1.67889672E12, 7404.0], [1.67889706E12, 6718.0], [1.6788974E12, 6758.0], [1.67889663E12, 7491.0], [1.67889681E12, 7573.0], [1.67889715E12, 6845.0], [1.67889749E12, 6741.0], [1.6788972E12, 6783.0], [1.67889643E12, 3933.0], [1.67889754E12, 6289.0], [1.67889677E12, 8013.0], [1.67889711E12, 7190.0], [1.67889729E12, 7088.0], [1.67889763E12, 5169.0], [1.67889652E12, 7464.0], [1.67889686E12, 6790.0], [1.67889704E12, 6874.0], [1.67889738E12, 6770.0], [1.67889661E12, 7381.0], [1.67889695E12, 6774.0], [1.67889713E12, 6871.0], [1.67889747E12, 7059.0], [1.6788967E12, 7352.0], [1.67889641E12, 3617.0], [1.67889752E12, 6824.0], [1.67889675E12, 7720.0], [1.67889709E12, 6816.0], [1.67889743E12, 6848.0], [1.67889761E12, 5523.0], [1.6788965E12, 6939.0], [1.67889684E12, 7594.0], [1.67889718E12, 7055.0], [1.67889736E12, 6902.0], [1.67889659E12, 7548.0], [1.6788977E12, 2997.0], [1.67889693E12, 6812.0], [1.67889727E12, 6720.0], [1.67889745E12, 6848.0], [1.67889668E12, 7938.0], [1.67889702E12, 6921.0], [1.67889673E12, 7289.0], [1.67889707E12, 6779.0], [1.67889741E12, 6749.0], [1.67889648E12, 6005.0], [1.67889682E12, 7312.0], [1.67889716E12, 6784.0], [1.6788975E12, 6748.0], [1.67889657E12, 7646.0], [1.67889768E12, 3415.0], [1.67889691E12, 6869.0], [1.67889725E12, 6982.0], [1.67889759E12, 5516.0], [1.67889666E12, 7568.0], [1.678897E12, 6749.0], [1.67889734E12, 6682.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.67889705E12, 6748.1], [1.67889739E12, 6691.5], [1.67889662E12, 7649.349999999999], [1.6788968E12, 7620.0], [1.67889714E12, 6705.0], [1.67889748E12, 6745.349999999999], [1.67889671E12, 7579.4], [1.67889689E12, 6916.0], [1.67889723E12, 6958.15], [1.67889757E12, 5924.9], [1.67889646E12, 5431.0], [1.67889664E12, 7395.55], [1.67889698E12, 6801.5], [1.67889732E12, 6869.2], [1.67889655E12, 7374.75], [1.67889766E12, 4410.0], [1.67889737E12, 6867.05], [1.67889771E12, 2990.0], [1.6788966E12, 7216.3], [1.67889694E12, 6937.2], [1.67889712E12, 6689.5], [1.67889746E12, 6769.95], [1.67889669E12, 7606.9], [1.67889703E12, 6929.0], [1.67889721E12, 6757.0], [1.67889755E12, 6197.799999999999], [1.67889644E12, 4328.5], [1.67889678E12, 7804.25], [1.67889696E12, 6815.599999999999], [1.6788973E12, 6745.2], [1.67889653E12, 7161.3], [1.67889764E12, 4935.2], [1.67889687E12, 6800.15], [1.67889769E12, 3127.0], [1.67889658E12, 7104.5], [1.67889692E12, 6842.5], [1.67889726E12, 7055.8], [1.67889744E12, 6976.5], [1.67889667E12, 7774.35], [1.67889701E12, 6686.5], [1.67889735E12, 6852.0], [1.67889753E12, 6498.349999999999], [1.67889642E12, 3705.3], [1.67889676E12, 7890.4], [1.6788971E12, 6960.8], [1.67889728E12, 6599.0], [1.67889651E12, 7096.4], [1.67889762E12, 5261.45], [1.67889685E12, 6944.5], [1.67889719E12, 6871.95], [1.67889656E12, 7040.0], [1.6788969E12, 7129.45], [1.67889724E12, 6786.4], [1.67889647E12, 5675.7], [1.67889758E12, 5710.15], [1.67889665E12, 7484.95], [1.67889699E12, 7210.7], [1.67889733E12, 6783.4], [1.67889767E12, 4082.0], [1.6788964E12, 4314.0], [1.67889674E12, 7626.5], [1.67889708E12, 6897.8], [1.67889742E12, 6806.7], [1.67889649E12, 6517.799999999999], [1.6788976E12, 5571.95], [1.67889683E12, 7048.299999999999], [1.67889717E12, 6846.9], [1.67889751E12, 6741.75], [1.67889688E12, 6794.0], [1.67889722E12, 6871.1], [1.67889645E12, 4715.45], [1.67889756E12, 6044.8], [1.67889679E12, 7918.9], [1.67889697E12, 6855.4], [1.67889731E12, 6942.5], [1.67889765E12, 4671.6], [1.67889654E12, 7301.5], [1.67889672E12, 7337.8], [1.67889706E12, 6698.65], [1.6788974E12, 6739.0], [1.67889663E12, 7449.5], [1.67889681E12, 7533.5], [1.67889715E12, 6787.549999999999], [1.67889749E12, 6610.3], [1.6788972E12, 6758.75], [1.67889643E12, 3924.9], [1.67889754E12, 6213.8], [1.67889677E12, 7920.0], [1.67889711E12, 7134.2], [1.67889729E12, 7084.5], [1.67889763E12, 5089.1], [1.67889652E12, 7437.0], [1.67889686E12, 6758.8], [1.67889704E12, 6865.4], [1.67889738E12, 6710.9], [1.67889661E12, 7248.65], [1.67889695E12, 6715.95], [1.67889713E12, 6836.3], [1.67889747E12, 6941.0], [1.6788967E12, 7238.3], [1.67889641E12, 3617.0], [1.67889752E12, 6766.599999999999], [1.67889675E12, 7587.0], [1.67889709E12, 6765.5], [1.67889743E12, 6783.15], [1.67889761E12, 5519.8], [1.6788965E12, 6848.4], [1.67889684E12, 7468.2], [1.67889718E12, 6917.5], [1.67889736E12, 6861.55], [1.67889659E12, 7521.599999999999], [1.6788977E12, 2997.0], [1.67889693E12, 6734.0], [1.67889727E12, 6709.7], [1.67889745E12, 6823.7], [1.67889668E12, 7835.65], [1.67889702E12, 6894.0], [1.67889673E12, 7256.7], [1.67889707E12, 6715.65], [1.67889741E12, 6707.7], [1.67889648E12, 5963.0], [1.67889682E12, 7235.3], [1.67889716E12, 6775.5], [1.6788975E12, 6726.2], [1.67889657E12, 7566.7], [1.67889768E12, 3414.4], [1.67889691E12, 6843.0], [1.67889725E12, 6942.75], [1.67889759E12, 5498.75], [1.67889666E12, 7419.5], [1.678897E12, 6716.0], [1.67889734E12, 6668.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.67889705E12, 5159.0], [1.67889739E12, 5078.0], [1.67889662E12, 5516.0], [1.6788968E12, 5675.0], [1.67889714E12, 5057.0], [1.67889748E12, 4878.0], [1.67889671E12, 5494.0], [1.67889689E12, 5189.0], [1.67889723E12, 5397.0], [1.67889757E12, 4421.0], [1.67889646E12, 3874.0], [1.67889664E12, 5626.0], [1.67889698E12, 5217.0], [1.67889732E12, 5270.0], [1.67889655E12, 5425.0], [1.67889766E12, 3246.0], [1.67889737E12, 5276.0], [1.67889771E12, 2686.0], [1.6788966E12, 5347.0], [1.67889694E12, 5152.0], [1.67889712E12, 4862.0], [1.67889746E12, 5165.0], [1.67889669E12, 5515.0], [1.67889703E12, 5183.0], [1.67889721E12, 5188.0], [1.67889755E12, 4635.0], [1.67889644E12, 3188.0], [1.67889678E12, 5612.0], [1.67889696E12, 5267.0], [1.6788973E12, 4942.0], [1.67889653E12, 5290.0], [1.67889764E12, 3628.0], [1.67889687E12, 5252.0], [1.67889769E12, 2734.0], [1.67889658E12, 5137.0], [1.67889692E12, 5282.0], [1.67889726E12, 5189.0], [1.67889744E12, 5290.0], [1.67889667E12, 5790.0], [1.67889701E12, 5152.0], [1.67889735E12, 5268.0], [1.67889753E12, 4792.0], [1.67889642E12, 2826.0], [1.67889676E12, 5329.0], [1.6788971E12, 5262.0], [1.67889728E12, 5061.0], [1.67889651E12, 5368.0], [1.67889762E12, 3876.0], [1.67889685E12, 5219.0], [1.67889719E12, 5184.0], [1.67889656E12, 5221.0], [1.6788969E12, 5306.0], [1.67889724E12, 5211.0], [1.67889647E12, 4128.0], [1.67889758E12, 4194.0], [1.67889665E12, 5594.0], [1.67889699E12, 5535.0], [1.67889733E12, 5165.0], [1.67889767E12, 2829.0], [1.6788964E12, 2441.0], [1.67889674E12, 5286.0], [1.67889708E12, 5097.0], [1.67889742E12, 5230.0], [1.67889649E12, 4604.0], [1.6788976E12, 4127.0], [1.67889683E12, 5263.0], [1.67889717E12, 5266.0], [1.67889751E12, 5095.0], [1.67889688E12, 5197.0], [1.67889722E12, 5253.0], [1.67889645E12, 3499.0], [1.67889756E12, 4508.0], [1.67889679E12, 5856.0], [1.67889697E12, 5284.0], [1.67889731E12, 5068.0], [1.67889765E12, 3523.0], [1.67889654E12, 5245.0], [1.67889672E12, 5340.0], [1.67889706E12, 5095.0], [1.6788974E12, 5033.0], [1.67889663E12, 5642.0], [1.67889681E12, 5521.0], [1.67889715E12, 5209.0], [1.67889749E12, 4788.0], [1.6788972E12, 5191.0], [1.67889643E12, 2931.0], [1.67889754E12, 4738.0], [1.67889677E12, 5631.0], [1.67889711E12, 5032.0], [1.67889729E12, 4973.0], [1.67889763E12, 3753.0], [1.67889652E12, 5199.0], [1.67889686E12, 5250.0], [1.67889704E12, 5096.0], [1.67889738E12, 5157.0], [1.67889661E12, 5219.0], [1.67889695E12, 5022.0], [1.67889713E12, 4997.0], [1.67889747E12, 5167.0], [1.6788967E12, 5378.0], [1.67889641E12, 2649.0], [1.67889752E12, 5121.0], [1.67889675E12, 5657.0], [1.67889709E12, 4987.0], [1.67889743E12, 5188.0], [1.67889761E12, 3939.0], [1.6788965E12, 4962.0], [1.67889684E12, 5390.0], [1.67889718E12, 5071.0], [1.67889736E12, 5180.0], [1.67889659E12, 5274.0], [1.6788977E12, 2688.0], [1.67889693E12, 4983.0], [1.67889727E12, 4960.0], [1.67889745E12, 5213.0], [1.67889668E12, 5585.0], [1.67889702E12, 5226.0], [1.67889673E12, 5322.0], [1.67889707E12, 5204.0], [1.67889741E12, 5079.0], [1.67889648E12, 4366.0], [1.67889682E12, 5308.0], [1.67889716E12, 5155.0], [1.6788975E12, 4949.0], [1.67889657E12, 5482.0], [1.67889768E12, 2686.0], [1.67889691E12, 5092.0], [1.67889725E12, 5219.0], [1.67889759E12, 4113.0], [1.67889666E12, 5521.0], [1.678897E12, 5158.0], [1.67889734E12, 5194.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.67889705E12, 5948.0], [1.67889739E12, 5924.0], [1.67889662E12, 6745.5], [1.6788968E12, 6745.0], [1.67889714E12, 5937.0], [1.67889748E12, 5961.5], [1.67889671E12, 6597.5], [1.67889689E12, 6021.0], [1.67889723E12, 6154.0], [1.67889757E12, 5186.5], [1.67889646E12, 4756.0], [1.67889664E12, 6531.0], [1.67889698E12, 5967.0], [1.67889732E12, 6050.0], [1.67889655E12, 6578.5], [1.67889766E12, 3925.0], [1.67889737E12, 6062.5], [1.67889771E12, 2707.5], [1.6788966E12, 6330.5], [1.67889694E12, 6029.0], [1.67889712E12, 5923.0], [1.67889746E12, 5942.0], [1.67889669E12, 6699.0], [1.67889703E12, 6032.0], [1.67889721E12, 5925.0], [1.67889755E12, 5471.0], [1.67889644E12, 3731.0], [1.67889678E12, 6701.0], [1.67889696E12, 6020.0], [1.6788973E12, 5938.0], [1.67889653E12, 6260.0], [1.67889764E12, 4368.0], [1.67889687E12, 5996.5], [1.67889769E12, 2829.0], [1.67889658E12, 6325.0], [1.67889692E12, 6017.0], [1.67889726E12, 6126.0], [1.67889744E12, 6119.0], [1.67889667E12, 6675.5], [1.67889701E12, 5927.0], [1.67889735E12, 6037.0], [1.67889753E12, 5729.0], [1.67889642E12, 3259.0], [1.67889676E12, 6851.0], [1.6788971E12, 6082.0], [1.67889728E12, 5899.0], [1.67889651E12, 6220.0], [1.67889762E12, 4657.5], [1.67889685E12, 6116.5], [1.67889719E12, 6018.0], [1.67889656E12, 6232.0], [1.6788969E12, 6274.0], [1.67889724E12, 5995.0], [1.67889647E12, 4814.5], [1.67889758E12, 5068.5], [1.67889665E12, 6494.0], [1.67889699E12, 6404.0], [1.67889733E12, 5956.0], [1.67889767E12, 3494.0], [1.6788964E12, 2940.5], [1.67889674E12, 6667.0], [1.67889708E12, 6105.5], [1.67889742E12, 6027.5], [1.67889649E12, 5647.0], [1.6788976E12, 4858.0], [1.67889683E12, 6088.0], [1.67889717E12, 6065.5], [1.67889751E12, 5879.5], [1.67889688E12, 5965.0], [1.67889722E12, 5990.5], [1.67889645E12, 4069.5], [1.67889756E12, 5306.0], [1.67889679E12, 6872.0], [1.67889697E12, 6055.0], [1.67889731E12, 6046.5], [1.67889765E12, 4173.0], [1.67889654E12, 6441.0], [1.67889672E12, 6472.0], [1.67889706E12, 5905.5], [1.6788974E12, 5950.0], [1.67889663E12, 6421.0], [1.67889681E12, 6478.0], [1.67889715E12, 5981.5], [1.67889749E12, 5838.0], [1.6788972E12, 5936.0], [1.67889643E12, 3422.0], [1.67889754E12, 5556.0], [1.67889677E12, 6640.0], [1.67889711E12, 5922.5], [1.67889729E12, 6338.0], [1.67889763E12, 4481.0], [1.67889652E12, 6461.0], [1.67889686E12, 5947.0], [1.67889704E12, 5962.5], [1.67889738E12, 5950.5], [1.67889661E12, 6162.0], [1.67889695E12, 5942.0], [1.67889713E12, 6035.0], [1.67889747E12, 5989.0], [1.6788967E12, 6211.0], [1.67889641E12, 3111.0], [1.67889752E12, 5837.0], [1.67889675E12, 6688.0], [1.67889709E12, 5979.0], [1.67889743E12, 6012.5], [1.67889761E12, 4821.0], [1.6788965E12, 5894.0], [1.67889684E12, 6490.0], [1.67889718E12, 6072.0], [1.67889736E12, 6025.5], [1.67889659E12, 6569.0], [1.6788977E12, 2978.0], [1.67889693E12, 5908.0], [1.67889727E12, 5928.0], [1.67889745E12, 6069.5], [1.67889668E12, 6651.5], [1.67889702E12, 6123.0], [1.67889673E12, 6362.0], [1.67889707E12, 5960.0], [1.67889741E12, 5926.0], [1.67889648E12, 5229.0], [1.67889682E12, 6436.0], [1.67889716E12, 5948.0], [1.6788975E12, 5886.0], [1.67889657E12, 6671.0], [1.67889768E12, 3080.5], [1.67889691E12, 5961.0], [1.67889725E12, 6116.5], [1.67889759E12, 4869.0], [1.67889666E12, 6481.0], [1.678897E12, 5907.0], [1.67889734E12, 5950.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67889771E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 5359.0, "minX": 1.0, "maxY": 6101.0, "series": [{"data": [[1.0, 5359.0], [2.0, 5934.0], [4.0, 6004.5], [8.0, 6025.5], [9.0, 5998.0], [5.0, 5986.0], [10.0, 6045.0], [11.0, 6101.0], [3.0, 5952.5], [6.0, 6014.0], [12.0, 5868.0], [7.0, 5981.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 12.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[1.0, 0.0], [2.0, 0.0], [4.0, 0.0], [8.0, 0.0], [9.0, 0.0], [5.0, 0.0], [10.0, 0.0], [11.0, 0.0], [3.0, 0.0], [6.0, 0.0], [12.0, 0.0], [7.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 12.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.67889639E12, "maxY": 5.5, "series": [{"data": [[1.67889705E12, 5.3], [1.67889739E12, 4.9], [1.67889662E12, 4.0], [1.6788968E12, 4.3], [1.67889714E12, 5.1], [1.67889748E12, 5.1], [1.67889671E12, 4.8], [1.67889689E12, 4.9], [1.67889723E12, 4.8], [1.67889757E12, 4.7], [1.67889646E12, 4.1], [1.67889664E12, 4.2], [1.67889698E12, 4.9], [1.67889732E12, 5.1], [1.67889655E12, 4.4], [1.67889766E12, 3.6], [1.67889737E12, 5.0], [1.67889771E12, 0.4], [1.6788966E12, 5.0], [1.67889694E12, 5.1], [1.67889712E12, 5.4], [1.67889746E12, 4.8], [1.67889669E12, 4.6], [1.67889703E12, 4.9], [1.67889721E12, 4.9], [1.67889755E12, 4.6], [1.67889644E12, 3.6], [1.67889678E12, 4.4], [1.67889696E12, 5.0], [1.6788973E12, 4.7], [1.67889653E12, 4.5], [1.67889764E12, 3.9], [1.67889687E12, 4.6], [1.67889769E12, 1.4], [1.67889658E12, 4.9], [1.67889692E12, 4.9], [1.67889726E12, 4.5], [1.67889744E12, 4.9], [1.67889667E12, 4.2], [1.67889701E12, 4.9], [1.67889735E12, 4.8], [1.67889753E12, 5.0], [1.67889642E12, 2.8], [1.67889676E12, 4.7], [1.6788971E12, 4.8], [1.67889728E12, 4.7], [1.67889651E12, 4.7], [1.67889762E12, 4.4], [1.67889685E12, 5.4], [1.67889719E12, 4.8], [1.67889656E12, 4.7], [1.6788969E12, 4.6], [1.67889724E12, 4.7], [1.67889647E12, 4.3], [1.67889758E12, 4.6], [1.67889665E12, 5.2], [1.67889699E12, 4.6], [1.67889733E12, 4.7], [1.67889767E12, 2.5], [1.6788964E12, 1.3], [1.67889674E12, 4.9], [1.67889708E12, 5.0], [1.67889742E12, 4.8], [1.67889649E12, 4.9], [1.6788976E12, 4.2], [1.67889683E12, 4.8], [1.67889717E12, 4.8], [1.67889751E12, 4.4], [1.67889688E12, 5.5], [1.67889722E12, 5.0], [1.67889645E12, 4.0], [1.67889756E12, 4.7], [1.67889679E12, 4.5], [1.67889697E12, 5.1], [1.67889731E12, 4.8], [1.67889765E12, 3.6], [1.67889654E12, 4.9], [1.67889672E12, 4.7], [1.67889706E12, 5.0], [1.6788974E12, 4.8], [1.67889663E12, 4.9], [1.67889681E12, 4.9], [1.67889715E12, 5.2], [1.67889749E12, 4.5], [1.6788972E12, 5.4], [1.67889643E12, 3.0], [1.67889754E12, 4.6], [1.67889677E12, 4.3], [1.67889711E12, 5.0], [1.67889729E12, 5.4], [1.67889763E12, 4.1], [1.67889652E12, 4.9], [1.67889686E12, 4.7], [1.67889704E12, 4.8], [1.67889738E12, 5.2], [1.67889661E12, 5.0], [1.67889695E12, 4.8], [1.67889713E12, 4.5], [1.67889747E12, 5.0], [1.6788967E12, 4.5], [1.67889641E12, 2.1], [1.67889752E12, 5.0], [1.67889675E12, 4.0], [1.67889709E12, 5.0], [1.67889743E12, 5.0], [1.67889761E12, 4.2], [1.6788965E12, 4.8], [1.67889684E12, 4.5], [1.67889718E12, 4.9], [1.67889736E12, 4.8], [1.67889659E12, 4.3], [1.6788977E12, 0.7], [1.67889693E12, 4.9], [1.67889727E12, 5.2], [1.67889745E12, 5.0], [1.67889668E12, 4.8], [1.67889702E12, 4.9], [1.67889673E12, 4.5], [1.67889707E12, 4.8], [1.67889741E12, 5.3], [1.67889648E12, 4.2], [1.67889682E12, 4.5], [1.67889716E12, 4.9], [1.67889639E12, 0.2], [1.6788975E12, 5.5], [1.67889657E12, 4.5], [1.67889768E12, 1.9], [1.67889691E12, 5.1], [1.67889725E12, 5.4], [1.67889759E12, 4.6], [1.67889666E12, 4.1], [1.678897E12, 5.3], [1.67889734E12, 5.4]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67889771E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.6788964E12, "maxY": 5.5, "series": [{"data": [[1.67889705E12, 5.3], [1.67889739E12, 4.9], [1.67889662E12, 4.0], [1.6788968E12, 4.3], [1.67889714E12, 5.1], [1.67889748E12, 5.2], [1.67889671E12, 4.8], [1.67889689E12, 4.9], [1.67889723E12, 4.8], [1.67889757E12, 4.8], [1.67889646E12, 3.9], [1.67889664E12, 4.2], [1.67889698E12, 4.9], [1.67889732E12, 5.1], [1.67889655E12, 4.4], [1.67889766E12, 3.9], [1.67889737E12, 5.0], [1.67889771E12, 0.6], [1.6788966E12, 5.0], [1.67889694E12, 5.1], [1.67889712E12, 5.4], [1.67889746E12, 4.8], [1.67889669E12, 4.6], [1.67889703E12, 4.9], [1.67889721E12, 4.9], [1.67889755E12, 4.7], [1.67889644E12, 3.3], [1.67889678E12, 4.4], [1.67889696E12, 5.0], [1.6788973E12, 4.7], [1.67889653E12, 4.5], [1.67889764E12, 4.1], [1.67889687E12, 4.6], [1.67889769E12, 1.7], [1.67889658E12, 4.9], [1.67889692E12, 4.9], [1.67889726E12, 4.5], [1.67889744E12, 4.9], [1.67889667E12, 4.2], [1.67889701E12, 4.9], [1.67889735E12, 4.8], [1.67889753E12, 5.2], [1.67889642E12, 2.5], [1.67889676E12, 4.7], [1.6788971E12, 4.8], [1.67889728E12, 4.7], [1.67889651E12, 4.7], [1.67889762E12, 4.6], [1.67889685E12, 5.4], [1.67889719E12, 4.8], [1.67889656E12, 4.7], [1.6788969E12, 4.6], [1.67889724E12, 4.7], [1.67889647E12, 4.0], [1.67889758E12, 4.8], [1.67889665E12, 5.2], [1.67889699E12, 4.6], [1.67889733E12, 4.7], [1.67889767E12, 2.9], [1.6788964E12, 1.0], [1.67889674E12, 4.9], [1.67889708E12, 5.0], [1.67889742E12, 4.8], [1.67889649E12, 4.7], [1.6788976E12, 4.2], [1.67889683E12, 4.8], [1.67889717E12, 4.8], [1.67889751E12, 4.4], [1.67889688E12, 5.5], [1.67889722E12, 5.0], [1.67889645E12, 3.8], [1.67889756E12, 4.7], [1.67889679E12, 4.5], [1.67889697E12, 5.1], [1.67889731E12, 4.8], [1.67889765E12, 3.8], [1.67889654E12, 4.9], [1.67889672E12, 4.7], [1.67889706E12, 5.0], [1.6788974E12, 4.8], [1.67889663E12, 4.9], [1.67889681E12, 4.9], [1.67889715E12, 5.2], [1.67889749E12, 4.5], [1.6788972E12, 5.4], [1.67889643E12, 2.8], [1.67889754E12, 4.7], [1.67889677E12, 4.3], [1.67889711E12, 5.0], [1.67889729E12, 5.4], [1.67889763E12, 4.1], [1.67889652E12, 4.9], [1.67889686E12, 4.7], [1.67889704E12, 4.8], [1.67889738E12, 5.2], [1.67889661E12, 5.0], [1.67889695E12, 4.8], [1.67889713E12, 4.5], [1.67889747E12, 5.0], [1.6788967E12, 4.5], [1.67889641E12, 1.9], [1.67889752E12, 5.0], [1.67889675E12, 4.0], [1.67889709E12, 5.0], [1.67889743E12, 5.0], [1.67889761E12, 4.3], [1.6788965E12, 4.5], [1.67889684E12, 4.5], [1.67889718E12, 4.9], [1.67889736E12, 4.8], [1.67889659E12, 4.3], [1.6788977E12, 0.7], [1.67889693E12, 4.9], [1.67889727E12, 5.2], [1.67889745E12, 5.0], [1.67889668E12, 4.8], [1.67889702E12, 4.9], [1.67889673E12, 4.5], [1.67889707E12, 4.8], [1.67889741E12, 5.3], [1.67889648E12, 3.9], [1.67889682E12, 4.5], [1.67889716E12, 4.9], [1.6788975E12, 5.5], [1.67889657E12, 4.5], [1.67889768E12, 2.2], [1.67889691E12, 5.1], [1.67889725E12, 5.4], [1.67889759E12, 4.6], [1.67889666E12, 4.1], [1.678897E12, 5.3], [1.67889734E12, 5.4]], "isOverall": false, "label": "EMPTY_RES_CODE", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67889771E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.6788964E12, "maxY": 2.9, "series": [{"data": [[1.67889705E12, 2.4], [1.67889739E12, 2.4], [1.67889662E12, 2.3], [1.6788968E12, 2.2], [1.67889714E12, 2.6], [1.67889748E12, 2.5], [1.67889671E12, 2.3], [1.67889689E12, 2.4], [1.67889723E12, 2.4], [1.67889757E12, 2.4], [1.67889646E12, 1.9], [1.67889664E12, 2.0], [1.67889698E12, 2.7], [1.67889732E12, 2.6], [1.67889655E12, 2.1], [1.67889766E12, 1.7], [1.67889737E12, 2.5], [1.67889771E12, 0.2], [1.6788966E12, 2.5], [1.67889694E12, 2.8], [1.67889712E12, 2.8], [1.67889746E12, 2.4], [1.67889669E12, 2.2], [1.67889703E12, 2.6], [1.67889721E12, 2.4], [1.67889755E12, 2.3], [1.67889644E12, 1.9], [1.67889678E12, 2.2], [1.67889696E12, 2.4], [1.6788973E12, 2.0], [1.67889653E12, 2.3], [1.67889764E12, 2.0], [1.67889687E12, 2.2], [1.67889769E12, 0.8], [1.67889658E12, 2.6], [1.67889692E12, 2.4], [1.67889726E12, 2.5], [1.67889744E12, 2.7], [1.67889667E12, 1.9], [1.67889701E12, 2.1], [1.67889735E12, 2.7], [1.67889753E12, 2.6], [1.67889642E12, 1.5], [1.67889676E12, 2.3], [1.6788971E12, 2.5], [1.67889728E12, 2.2], [1.67889651E12, 2.4], [1.67889762E12, 2.3], [1.67889685E12, 2.8], [1.67889719E12, 2.2], [1.67889656E12, 2.3], [1.6788969E12, 2.5], [1.67889724E12, 2.2], [1.67889647E12, 2.1], [1.67889758E12, 2.4], [1.67889665E12, 2.6], [1.67889699E12, 2.5], [1.67889733E12, 2.3], [1.67889767E12, 1.5], [1.6788964E12, 0.6], [1.67889674E12, 2.5], [1.67889708E12, 2.7], [1.67889742E12, 2.1], [1.67889649E12, 2.5], [1.6788976E12, 2.0], [1.67889683E12, 2.3], [1.67889717E12, 2.6], [1.67889751E12, 2.1], [1.67889688E12, 2.9], [1.67889722E12, 2.6], [1.67889645E12, 1.9], [1.67889756E12, 2.2], [1.67889679E12, 2.2], [1.67889697E12, 2.5], [1.67889731E12, 2.5], [1.67889765E12, 1.8], [1.67889654E12, 2.4], [1.67889672E12, 2.3], [1.67889706E12, 2.3], [1.6788974E12, 2.5], [1.67889663E12, 2.3], [1.67889681E12, 2.5], [1.67889715E12, 2.6], [1.67889749E12, 2.3], [1.6788972E12, 2.7], [1.67889643E12, 1.3], [1.67889754E12, 2.6], [1.67889677E12, 2.3], [1.67889711E12, 2.2], [1.67889729E12, 2.8], [1.67889763E12, 2.1], [1.67889652E12, 2.5], [1.67889686E12, 2.1], [1.67889704E12, 2.6], [1.67889738E12, 2.6], [1.67889661E12, 2.4], [1.67889695E12, 2.1], [1.67889713E12, 2.2], [1.67889747E12, 2.5], [1.6788967E12, 2.5], [1.67889641E12, 0.9], [1.67889752E12, 2.4], [1.67889675E12, 1.8], [1.67889709E12, 2.5], [1.67889743E12, 2.6], [1.67889761E12, 2.1], [1.6788965E12, 2.3], [1.67889684E12, 2.5], [1.67889718E12, 2.6], [1.67889736E12, 2.2], [1.67889659E12, 1.9], [1.6788977E12, 0.4], [1.67889693E12, 2.5], [1.67889727E12, 2.8], [1.67889745E12, 2.5], [1.67889668E12, 2.3], [1.67889702E12, 2.5], [1.67889673E12, 2.4], [1.67889707E12, 2.5], [1.67889741E12, 2.6], [1.67889648E12, 1.9], [1.67889682E12, 2.1], [1.67889716E12, 2.3], [1.6788975E12, 2.7], [1.67889657E12, 2.4], [1.67889768E12, 1.0], [1.67889691E12, 2.4], [1.67889725E12, 2.6], [1.67889759E12, 2.4], [1.67889666E12, 2.4], [1.678897E12, 2.6], [1.67889734E12, 2.7]], "isOverall": false, "label": "RAMP-success", "isController": false}, {"data": [[1.67889705E12, 2.9], [1.67889739E12, 2.5], [1.67889662E12, 1.7], [1.6788968E12, 2.1], [1.67889714E12, 2.5], [1.67889748E12, 2.7], [1.67889671E12, 2.5], [1.67889689E12, 2.5], [1.67889723E12, 2.4], [1.67889757E12, 2.4], [1.67889646E12, 2.0], [1.67889664E12, 2.2], [1.67889698E12, 2.2], [1.67889732E12, 2.5], [1.67889655E12, 2.3], [1.67889766E12, 2.2], [1.67889737E12, 2.5], [1.67889771E12, 0.4], [1.6788966E12, 2.5], [1.67889694E12, 2.3], [1.67889712E12, 2.6], [1.67889746E12, 2.4], [1.67889669E12, 2.4], [1.67889703E12, 2.3], [1.67889721E12, 2.5], [1.67889755E12, 2.4], [1.67889644E12, 1.4], [1.67889678E12, 2.2], [1.67889696E12, 2.6], [1.6788973E12, 2.7], [1.67889653E12, 2.2], [1.67889764E12, 2.1], [1.67889687E12, 2.4], [1.67889769E12, 0.9], [1.67889658E12, 2.3], [1.67889692E12, 2.5], [1.67889726E12, 2.0], [1.67889744E12, 2.2], [1.67889667E12, 2.3], [1.67889701E12, 2.8], [1.67889735E12, 2.1], [1.67889753E12, 2.6], [1.67889642E12, 1.0], [1.67889676E12, 2.4], [1.6788971E12, 2.3], [1.67889728E12, 2.5], [1.67889651E12, 2.3], [1.67889762E12, 2.3], [1.67889685E12, 2.6], [1.67889719E12, 2.6], [1.67889656E12, 2.4], [1.6788969E12, 2.1], [1.67889724E12, 2.5], [1.67889647E12, 1.9], [1.67889758E12, 2.4], [1.67889665E12, 2.6], [1.67889699E12, 2.1], [1.67889733E12, 2.4], [1.67889767E12, 1.4], [1.6788964E12, 0.4], [1.67889674E12, 2.4], [1.67889708E12, 2.3], [1.67889742E12, 2.7], [1.67889649E12, 2.2], [1.6788976E12, 2.2], [1.67889683E12, 2.5], [1.67889717E12, 2.2], [1.67889751E12, 2.3], [1.67889688E12, 2.6], [1.67889722E12, 2.4], [1.67889645E12, 1.9], [1.67889756E12, 2.5], [1.67889679E12, 2.3], [1.67889697E12, 2.6], [1.67889731E12, 2.3], [1.67889765E12, 2.0], [1.67889654E12, 2.5], [1.67889672E12, 2.4], [1.67889706E12, 2.7], [1.6788974E12, 2.3], [1.67889663E12, 2.6], [1.67889681E12, 2.4], [1.67889715E12, 2.6], [1.67889749E12, 2.2], [1.6788972E12, 2.7], [1.67889643E12, 1.5], [1.67889754E12, 2.1], [1.67889677E12, 2.0], [1.67889711E12, 2.8], [1.67889729E12, 2.6], [1.67889763E12, 2.0], [1.67889652E12, 2.4], [1.67889686E12, 2.6], [1.67889704E12, 2.2], [1.67889738E12, 2.6], [1.67889661E12, 2.6], [1.67889695E12, 2.7], [1.67889713E12, 2.3], [1.67889747E12, 2.5], [1.6788967E12, 2.0], [1.67889641E12, 1.0], [1.67889752E12, 2.6], [1.67889675E12, 2.2], [1.67889709E12, 2.5], [1.67889743E12, 2.4], [1.67889761E12, 2.2], [1.6788965E12, 2.2], [1.67889684E12, 2.0], [1.67889718E12, 2.3], [1.67889736E12, 2.6], [1.67889659E12, 2.4], [1.6788977E12, 0.3], [1.67889693E12, 2.4], [1.67889727E12, 2.4], [1.67889745E12, 2.5], [1.67889668E12, 2.5], [1.67889702E12, 2.4], [1.67889673E12, 2.1], [1.67889707E12, 2.3], [1.67889741E12, 2.7], [1.67889648E12, 2.0], [1.67889682E12, 2.4], [1.67889716E12, 2.6], [1.6788975E12, 2.8], [1.67889657E12, 2.1], [1.67889768E12, 1.2], [1.67889691E12, 2.7], [1.67889725E12, 2.8], [1.67889759E12, 2.2], [1.67889666E12, 1.7], [1.678897E12, 2.7], [1.67889734E12, 2.7]], "isOverall": false, "label": "原生-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67889771E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.6788964E12, "maxY": 5.5, "series": [{"data": [[1.67889705E12, 5.3], [1.67889739E12, 4.9], [1.67889662E12, 4.0], [1.6788968E12, 4.3], [1.67889714E12, 5.1], [1.67889748E12, 5.2], [1.67889671E12, 4.8], [1.67889689E12, 4.9], [1.67889723E12, 4.8], [1.67889757E12, 4.8], [1.67889646E12, 3.9], [1.67889664E12, 4.2], [1.67889698E12, 4.9], [1.67889732E12, 5.1], [1.67889655E12, 4.4], [1.67889766E12, 3.9], [1.67889737E12, 5.0], [1.67889771E12, 0.6], [1.6788966E12, 5.0], [1.67889694E12, 5.1], [1.67889712E12, 5.4], [1.67889746E12, 4.8], [1.67889669E12, 4.6], [1.67889703E12, 4.9], [1.67889721E12, 4.9], [1.67889755E12, 4.7], [1.67889644E12, 3.3], [1.67889678E12, 4.4], [1.67889696E12, 5.0], [1.6788973E12, 4.7], [1.67889653E12, 4.5], [1.67889764E12, 4.1], [1.67889687E12, 4.6], [1.67889769E12, 1.7], [1.67889658E12, 4.9], [1.67889692E12, 4.9], [1.67889726E12, 4.5], [1.67889744E12, 4.9], [1.67889667E12, 4.2], [1.67889701E12, 4.9], [1.67889735E12, 4.8], [1.67889753E12, 5.2], [1.67889642E12, 2.5], [1.67889676E12, 4.7], [1.6788971E12, 4.8], [1.67889728E12, 4.7], [1.67889651E12, 4.7], [1.67889762E12, 4.6], [1.67889685E12, 5.4], [1.67889719E12, 4.8], [1.67889656E12, 4.7], [1.6788969E12, 4.6], [1.67889724E12, 4.7], [1.67889647E12, 4.0], [1.67889758E12, 4.8], [1.67889665E12, 5.2], [1.67889699E12, 4.6], [1.67889733E12, 4.7], [1.67889767E12, 2.9], [1.6788964E12, 1.0], [1.67889674E12, 4.9], [1.67889708E12, 5.0], [1.67889742E12, 4.8], [1.67889649E12, 4.7], [1.6788976E12, 4.2], [1.67889683E12, 4.8], [1.67889717E12, 4.8], [1.67889751E12, 4.4], [1.67889688E12, 5.5], [1.67889722E12, 5.0], [1.67889645E12, 3.8], [1.67889756E12, 4.7], [1.67889679E12, 4.5], [1.67889697E12, 5.1], [1.67889731E12, 4.8], [1.67889765E12, 3.8], [1.67889654E12, 4.9], [1.67889672E12, 4.7], [1.67889706E12, 5.0], [1.6788974E12, 4.8], [1.67889663E12, 4.9], [1.67889681E12, 4.9], [1.67889715E12, 5.2], [1.67889749E12, 4.5], [1.6788972E12, 5.4], [1.67889643E12, 2.8], [1.67889754E12, 4.7], [1.67889677E12, 4.3], [1.67889711E12, 5.0], [1.67889729E12, 5.4], [1.67889763E12, 4.1], [1.67889652E12, 4.9], [1.67889686E12, 4.7], [1.67889704E12, 4.8], [1.67889738E12, 5.2], [1.67889661E12, 5.0], [1.67889695E12, 4.8], [1.67889713E12, 4.5], [1.67889747E12, 5.0], [1.6788967E12, 4.5], [1.67889641E12, 1.9], [1.67889752E12, 5.0], [1.67889675E12, 4.0], [1.67889709E12, 5.0], [1.67889743E12, 5.0], [1.67889761E12, 4.3], [1.6788965E12, 4.5], [1.67889684E12, 4.5], [1.67889718E12, 4.9], [1.67889736E12, 4.8], [1.67889659E12, 4.3], [1.6788977E12, 0.7], [1.67889693E12, 4.9], [1.67889727E12, 5.2], [1.67889745E12, 5.0], [1.67889668E12, 4.8], [1.67889702E12, 4.9], [1.67889673E12, 4.5], [1.67889707E12, 4.8], [1.67889741E12, 5.3], [1.67889648E12, 3.9], [1.67889682E12, 4.5], [1.67889716E12, 4.9], [1.6788975E12, 5.5], [1.67889657E12, 4.5], [1.67889768E12, 2.2], [1.67889691E12, 5.1], [1.67889725E12, 5.4], [1.67889759E12, 4.6], [1.67889666E12, 4.1], [1.678897E12, 5.3], [1.67889734E12, 5.4]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67889771E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

