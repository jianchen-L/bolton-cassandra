/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2498.0, "minX": 0.0, "maxY": 8844.0, "series": [{"data": [[0.0, 2723.0], [0.1, 2756.0], [0.2, 2872.0], [0.3, 3021.0], [0.4, 3028.0], [0.5, 3048.0], [0.6, 3068.0], [0.7, 3100.0], [0.8, 3119.0], [0.9, 3164.0], [1.0, 3180.0], [1.1, 3185.0], [1.2, 3188.0], [1.3, 3216.0], [1.4, 3253.0], [1.5, 3366.0], [1.6, 3459.0], [1.7, 3496.0], [1.8, 3544.0], [1.9, 3582.0], [2.0, 3609.0], [2.1, 3616.0], [2.2, 3641.0], [2.3, 3662.0], [2.4, 3678.0], [2.5, 3712.0], [2.6, 3749.0], [2.7, 3761.0], [2.8, 3810.0], [2.9, 3874.0], [3.0, 3948.0], [3.1, 3998.0], [3.2, 4005.0], [3.3, 4012.0], [3.4, 4042.0], [3.5, 4062.0], [3.6, 4084.0], [3.7, 4090.0], [3.8, 4113.0], [3.9, 4126.0], [4.0, 4155.0], [4.1, 4160.0], [4.2, 4179.0], [4.3, 4202.0], [4.4, 4222.0], [4.5, 4237.0], [4.6, 4242.0], [4.7, 4246.0], [4.8, 4257.0], [4.9, 4274.0], [5.0, 4335.0], [5.1, 4355.0], [5.2, 4378.0], [5.3, 4424.0], [5.4, 4444.0], [5.5, 4472.0], [5.6, 4499.0], [5.7, 4505.0], [5.8, 4527.0], [5.9, 4542.0], [6.0, 4571.0], [6.1, 4645.0], [6.2, 4664.0], [6.3, 4695.0], [6.4, 4746.0], [6.5, 4772.0], [6.6, 4810.0], [6.7, 4850.0], [6.8, 4868.0], [6.9, 4901.0], [7.0, 4929.0], [7.1, 4941.0], [7.2, 4953.0], [7.3, 4960.0], [7.4, 4984.0], [7.5, 4996.0], [7.6, 5036.0], [7.7, 5042.0], [7.8, 5053.0], [7.9, 5067.0], [8.0, 5078.0], [8.1, 5100.0], [8.2, 5110.0], [8.3, 5117.0], [8.4, 5119.0], [8.5, 5141.0], [8.6, 5147.0], [8.7, 5153.0], [8.8, 5167.0], [8.9, 5190.0], [9.0, 5199.0], [9.1, 5209.0], [9.2, 5220.0], [9.3, 5242.0], [9.4, 5266.0], [9.5, 5277.0], [9.6, 5294.0], [9.7, 5329.0], [9.8, 5346.0], [9.9, 5371.0], [10.0, 5404.0], [10.1, 5432.0], [10.2, 5456.0], [10.3, 5477.0], [10.4, 5496.0], [10.5, 5515.0], [10.6, 5568.0], [10.7, 5578.0], [10.8, 5596.0], [10.9, 5635.0], [11.0, 5646.0], [11.1, 5669.0], [11.2, 5688.0], [11.3, 5712.0], [11.4, 5718.0], [11.5, 5736.0], [11.6, 5752.0], [11.7, 5758.0], [11.8, 5765.0], [11.9, 5788.0], [12.0, 5812.0], [12.1, 5836.0], [12.2, 5842.0], [12.3, 5849.0], [12.4, 5855.0], [12.5, 5868.0], [12.6, 5877.0], [12.7, 5893.0], [12.8, 5907.0], [12.9, 5915.0], [13.0, 5919.0], [13.1, 5932.0], [13.2, 5942.0], [13.3, 5951.0], [13.4, 5959.0], [13.5, 5962.0], [13.6, 5974.0], [13.7, 5979.0], [13.8, 5987.0], [13.9, 5993.0], [14.0, 5999.0], [14.1, 6007.0], [14.2, 6009.0], [14.3, 6016.0], [14.4, 6019.0], [14.5, 6024.0], [14.6, 6025.0], [14.7, 6029.0], [14.8, 6036.0], [14.9, 6041.0], [15.0, 6048.0], [15.1, 6050.0], [15.2, 6055.0], [15.3, 6057.0], [15.4, 6059.0], [15.5, 6062.0], [15.6, 6063.0], [15.7, 6065.0], [15.8, 6069.0], [15.9, 6075.0], [16.0, 6079.0], [16.1, 6081.0], [16.2, 6083.0], [16.3, 6084.0], [16.4, 6087.0], [16.5, 6088.0], [16.6, 6091.0], [16.7, 6095.0], [16.8, 6097.0], [16.9, 6099.0], [17.0, 6101.0], [17.1, 6103.0], [17.2, 6108.0], [17.3, 6114.0], [17.4, 6116.0], [17.5, 6117.0], [17.6, 6119.0], [17.7, 6123.0], [17.8, 6127.0], [17.9, 6130.0], [18.0, 6132.0], [18.1, 6138.0], [18.2, 6139.0], [18.3, 6139.0], [18.4, 6142.0], [18.5, 6143.0], [18.6, 6147.0], [18.7, 6149.0], [18.8, 6152.0], [18.9, 6153.0], [19.0, 6155.0], [19.1, 6160.0], [19.2, 6166.0], [19.3, 6169.0], [19.4, 6170.0], [19.5, 6172.0], [19.6, 6174.0], [19.7, 6176.0], [19.8, 6182.0], [19.9, 6184.0], [20.0, 6190.0], [20.1, 6191.0], [20.2, 6194.0], [20.3, 6194.0], [20.4, 6197.0], [20.5, 6198.0], [20.6, 6201.0], [20.7, 6203.0], [20.8, 6205.0], [20.9, 6209.0], [21.0, 6211.0], [21.1, 6214.0], [21.2, 6218.0], [21.3, 6221.0], [21.4, 6223.0], [21.5, 6226.0], [21.6, 6227.0], [21.7, 6231.0], [21.8, 6233.0], [21.9, 6235.0], [22.0, 6240.0], [22.1, 6242.0], [22.2, 6243.0], [22.3, 6247.0], [22.4, 6248.0], [22.5, 6252.0], [22.6, 6256.0], [22.7, 6256.0], [22.8, 6256.0], [22.9, 6257.0], [23.0, 6258.0], [23.1, 6260.0], [23.2, 6264.0], [23.3, 6264.0], [23.4, 6266.0], [23.5, 6266.0], [23.6, 6268.0], [23.7, 6268.0], [23.8, 6269.0], [23.9, 6269.0], [24.0, 6273.0], [24.1, 6275.0], [24.2, 6278.0], [24.3, 6278.0], [24.4, 6281.0], [24.5, 6284.0], [24.6, 6285.0], [24.7, 6286.0], [24.8, 6290.0], [24.9, 6291.0], [25.0, 6294.0], [25.1, 6297.0], [25.2, 6299.0], [25.3, 6300.0], [25.4, 6300.0], [25.5, 6303.0], [25.6, 6307.0], [25.7, 6307.0], [25.8, 6309.0], [25.9, 6309.0], [26.0, 6313.0], [26.1, 6315.0], [26.2, 6315.0], [26.3, 6317.0], [26.4, 6319.0], [26.5, 6320.0], [26.6, 6323.0], [26.7, 6325.0], [26.8, 6326.0], [26.9, 6327.0], [27.0, 6328.0], [27.1, 6329.0], [27.2, 6332.0], [27.3, 6333.0], [27.4, 6336.0], [27.5, 6339.0], [27.6, 6341.0], [27.7, 6342.0], [27.8, 6343.0], [27.9, 6347.0], [28.0, 6348.0], [28.1, 6349.0], [28.2, 6350.0], [28.3, 6350.0], [28.4, 6353.0], [28.5, 6353.0], [28.6, 6355.0], [28.7, 6356.0], [28.8, 6358.0], [28.9, 6360.0], [29.0, 6369.0], [29.1, 6371.0], [29.2, 6374.0], [29.3, 6377.0], [29.4, 6378.0], [29.5, 6379.0], [29.6, 6380.0], [29.7, 6382.0], [29.8, 6383.0], [29.9, 6385.0], [30.0, 6388.0], [30.1, 6389.0], [30.2, 6390.0], [30.3, 6390.0], [30.4, 6392.0], [30.5, 6394.0], [30.6, 6397.0], [30.7, 6403.0], [30.8, 6406.0], [30.9, 6409.0], [31.0, 6410.0], [31.1, 6413.0], [31.2, 6415.0], [31.3, 6417.0], [31.4, 6420.0], [31.5, 6422.0], [31.6, 6424.0], [31.7, 6426.0], [31.8, 6428.0], [31.9, 6429.0], [32.0, 6431.0], [32.1, 6431.0], [32.2, 6433.0], [32.3, 6434.0], [32.4, 6436.0], [32.5, 6436.0], [32.6, 6438.0], [32.7, 6440.0], [32.8, 6441.0], [32.9, 6443.0], [33.0, 6445.0], [33.1, 6446.0], [33.2, 6446.0], [33.3, 6447.0], [33.4, 6450.0], [33.5, 6451.0], [33.6, 6452.0], [33.7, 6454.0], [33.8, 6455.0], [33.9, 6457.0], [34.0, 6460.0], [34.1, 6462.0], [34.2, 6463.0], [34.3, 6465.0], [34.4, 6466.0], [34.5, 6469.0], [34.6, 6472.0], [34.7, 6475.0], [34.8, 6477.0], [34.9, 6479.0], [35.0, 6480.0], [35.1, 6482.0], [35.2, 6485.0], [35.3, 6486.0], [35.4, 6489.0], [35.5, 6492.0], [35.6, 6493.0], [35.7, 6494.0], [35.8, 6495.0], [35.9, 6497.0], [36.0, 6498.0], [36.1, 6503.0], [36.2, 6504.0], [36.3, 6507.0], [36.4, 6510.0], [36.5, 6512.0], [36.6, 6515.0], [36.7, 6518.0], [36.8, 6523.0], [36.9, 6525.0], [37.0, 6529.0], [37.1, 6532.0], [37.2, 6534.0], [37.3, 6535.0], [37.4, 6537.0], [37.5, 6538.0], [37.6, 6539.0], [37.7, 6543.0], [37.8, 6547.0], [37.9, 6549.0], [38.0, 6551.0], [38.1, 6554.0], [38.2, 6557.0], [38.3, 6559.0], [38.4, 6560.0], [38.5, 6562.0], [38.6, 6564.0], [38.7, 6572.0], [38.8, 6574.0], [38.9, 6576.0], [39.0, 6578.0], [39.1, 6581.0], [39.2, 6584.0], [39.3, 6585.0], [39.4, 6587.0], [39.5, 6589.0], [39.6, 6594.0], [39.7, 6598.0], [39.8, 6600.0], [39.9, 6602.0], [40.0, 6604.0], [40.1, 6607.0], [40.2, 6609.0], [40.3, 6614.0], [40.4, 6618.0], [40.5, 6620.0], [40.6, 6621.0], [40.7, 6622.0], [40.8, 6622.0], [40.9, 6623.0], [41.0, 6625.0], [41.1, 6628.0], [41.2, 6630.0], [41.3, 6632.0], [41.4, 6634.0], [41.5, 6637.0], [41.6, 6642.0], [41.7, 6646.0], [41.8, 6647.0], [41.9, 6648.0], [42.0, 6651.0], [42.1, 6655.0], [42.2, 6657.0], [42.3, 6659.0], [42.4, 6660.0], [42.5, 6662.0], [42.6, 6665.0], [42.7, 6665.0], [42.8, 6667.0], [42.9, 6669.0], [43.0, 6671.0], [43.1, 6676.0], [43.2, 6677.0], [43.3, 6679.0], [43.4, 6680.0], [43.5, 6681.0], [43.6, 6683.0], [43.7, 6685.0], [43.8, 6688.0], [43.9, 6692.0], [44.0, 6694.0], [44.1, 6699.0], [44.2, 6703.0], [44.3, 6705.0], [44.4, 6707.0], [44.5, 6708.0], [44.6, 6711.0], [44.7, 6714.0], [44.8, 6716.0], [44.9, 6718.0], [45.0, 6720.0], [45.1, 6721.0], [45.2, 6723.0], [45.3, 6725.0], [45.4, 6726.0], [45.5, 6728.0], [45.6, 6730.0], [45.7, 6732.0], [45.8, 6733.0], [45.9, 6734.0], [46.0, 6736.0], [46.1, 6738.0], [46.2, 6739.0], [46.3, 6741.0], [46.4, 6742.0], [46.5, 6744.0], [46.6, 6746.0], [46.7, 6751.0], [46.8, 6754.0], [46.9, 6754.0], [47.0, 6755.0], [47.1, 6758.0], [47.2, 6760.0], [47.3, 6762.0], [47.4, 6763.0], [47.5, 6763.0], [47.6, 6763.0], [47.7, 6765.0], [47.8, 6767.0], [47.9, 6768.0], [48.0, 6769.0], [48.1, 6770.0], [48.2, 6773.0], [48.3, 6773.0], [48.4, 6775.0], [48.5, 6777.0], [48.6, 6779.0], [48.7, 6779.0], [48.8, 6780.0], [48.9, 6781.0], [49.0, 6783.0], [49.1, 6784.0], [49.2, 6786.0], [49.3, 6786.0], [49.4, 6789.0], [49.5, 6792.0], [49.6, 6794.0], [49.7, 6796.0], [49.8, 6797.0], [49.9, 6800.0], [50.0, 6800.0], [50.1, 6804.0], [50.2, 6808.0], [50.3, 6809.0], [50.4, 6810.0], [50.5, 6812.0], [50.6, 6813.0], [50.7, 6814.0], [50.8, 6815.0], [50.9, 6817.0], [51.0, 6818.0], [51.1, 6820.0], [51.2, 6822.0], [51.3, 6824.0], [51.4, 6825.0], [51.5, 6829.0], [51.6, 6830.0], [51.7, 6832.0], [51.8, 6833.0], [51.9, 6834.0], [52.0, 6836.0], [52.1, 6837.0], [52.2, 6838.0], [52.3, 6839.0], [52.4, 6841.0], [52.5, 6846.0], [52.6, 6847.0], [52.7, 6848.0], [52.8, 6850.0], [52.9, 6851.0], [53.0, 6851.0], [53.1, 6852.0], [53.2, 6855.0], [53.3, 6857.0], [53.4, 6858.0], [53.5, 6858.0], [53.6, 6859.0], [53.7, 6859.0], [53.8, 6861.0], [53.9, 6862.0], [54.0, 6863.0], [54.1, 6864.0], [54.2, 6866.0], [54.3, 6868.0], [54.4, 6870.0], [54.5, 6871.0], [54.6, 6872.0], [54.7, 6874.0], [54.8, 6875.0], [54.9, 6876.0], [55.0, 6876.0], [55.1, 6877.0], [55.2, 6880.0], [55.3, 6881.0], [55.4, 6883.0], [55.5, 6884.0], [55.6, 6885.0], [55.7, 6886.0], [55.8, 6887.0], [55.9, 6889.0], [56.0, 6890.0], [56.1, 6892.0], [56.2, 6897.0], [56.3, 6898.0], [56.4, 6899.0], [56.5, 6901.0], [56.6, 6903.0], [56.7, 6904.0], [56.8, 6904.0], [56.9, 6906.0], [57.0, 6907.0], [57.1, 6909.0], [57.2, 6911.0], [57.3, 6912.0], [57.4, 6912.0], [57.5, 6913.0], [57.6, 6914.0], [57.7, 6917.0], [57.8, 6918.0], [57.9, 6919.0], [58.0, 6920.0], [58.1, 6921.0], [58.2, 6922.0], [58.3, 6923.0], [58.4, 6924.0], [58.5, 6925.0], [58.6, 6926.0], [58.7, 6927.0], [58.8, 6928.0], [58.9, 6929.0], [59.0, 6930.0], [59.1, 6931.0], [59.2, 6932.0], [59.3, 6932.0], [59.4, 6935.0], [59.5, 6935.0], [59.6, 6936.0], [59.7, 6937.0], [59.8, 6938.0], [59.9, 6940.0], [60.0, 6941.0], [60.1, 6942.0], [60.2, 6944.0], [60.3, 6945.0], [60.4, 6946.0], [60.5, 6948.0], [60.6, 6950.0], [60.7, 6951.0], [60.8, 6952.0], [60.9, 6954.0], [61.0, 6956.0], [61.1, 6957.0], [61.2, 6959.0], [61.3, 6960.0], [61.4, 6961.0], [61.5, 6963.0], [61.6, 6965.0], [61.7, 6967.0], [61.8, 6968.0], [61.9, 6969.0], [62.0, 6970.0], [62.1, 6971.0], [62.2, 6972.0], [62.3, 6973.0], [62.4, 6975.0], [62.5, 6976.0], [62.6, 6978.0], [62.7, 6979.0], [62.8, 6980.0], [62.9, 6980.0], [63.0, 6983.0], [63.1, 6986.0], [63.2, 6987.0], [63.3, 6989.0], [63.4, 6990.0], [63.5, 6991.0], [63.6, 6993.0], [63.7, 6996.0], [63.8, 6997.0], [63.9, 7000.0], [64.0, 7002.0], [64.1, 7003.0], [64.2, 7005.0], [64.3, 7007.0], [64.4, 7009.0], [64.5, 7010.0], [64.6, 7011.0], [64.7, 7013.0], [64.8, 7014.0], [64.9, 7016.0], [65.0, 7017.0], [65.1, 7019.0], [65.2, 7021.0], [65.3, 7022.0], [65.4, 7024.0], [65.5, 7024.0], [65.6, 7025.0], [65.7, 7026.0], [65.8, 7027.0], [65.9, 7030.0], [66.0, 7031.0], [66.1, 7033.0], [66.2, 7034.0], [66.3, 7035.0], [66.4, 7036.0], [66.5, 7037.0], [66.6, 7039.0], [66.7, 7040.0], [66.8, 7045.0], [66.9, 7045.0], [67.0, 7046.0], [67.1, 7048.0], [67.2, 7050.0], [67.3, 7051.0], [67.4, 7051.0], [67.5, 7053.0], [67.6, 7053.0], [67.7, 7056.0], [67.8, 7056.0], [67.9, 7058.0], [68.0, 7059.0], [68.1, 7061.0], [68.2, 7063.0], [68.3, 7065.0], [68.4, 7065.0], [68.5, 7067.0], [68.6, 7069.0], [68.7, 7069.0], [68.8, 7071.0], [68.9, 7071.0], [69.0, 7072.0], [69.1, 7073.0], [69.2, 7074.0], [69.3, 7076.0], [69.4, 7076.0], [69.5, 7079.0], [69.6, 7079.0], [69.7, 7080.0], [69.8, 7082.0], [69.9, 7084.0], [70.0, 7084.0], [70.1, 7086.0], [70.2, 7086.0], [70.3, 7087.0], [70.4, 7088.0], [70.5, 7089.0], [70.6, 7090.0], [70.7, 7092.0], [70.8, 7093.0], [70.9, 7094.0], [71.0, 7095.0], [71.1, 7096.0], [71.2, 7098.0], [71.3, 7099.0], [71.4, 7099.0], [71.5, 7100.0], [71.6, 7102.0], [71.7, 7102.0], [71.8, 7103.0], [71.9, 7104.0], [72.0, 7105.0], [72.1, 7105.0], [72.2, 7107.0], [72.3, 7109.0], [72.4, 7111.0], [72.5, 7112.0], [72.6, 7112.0], [72.7, 7114.0], [72.8, 7115.0], [72.9, 7117.0], [73.0, 7117.0], [73.1, 7119.0], [73.2, 7120.0], [73.3, 7121.0], [73.4, 7122.0], [73.5, 7122.0], [73.6, 7124.0], [73.7, 7125.0], [73.8, 7127.0], [73.9, 7128.0], [74.0, 7129.0], [74.1, 7131.0], [74.2, 7133.0], [74.3, 7134.0], [74.4, 7138.0], [74.5, 7140.0], [74.6, 7142.0], [74.7, 7146.0], [74.8, 7148.0], [74.9, 7149.0], [75.0, 7152.0], [75.1, 7154.0], [75.2, 7155.0], [75.3, 7157.0], [75.4, 7161.0], [75.5, 7162.0], [75.6, 7162.0], [75.7, 7163.0], [75.8, 7165.0], [75.9, 7166.0], [76.0, 7171.0], [76.1, 7173.0], [76.2, 7175.0], [76.3, 7175.0], [76.4, 7177.0], [76.5, 7178.0], [76.6, 7179.0], [76.7, 7179.0], [76.8, 7180.0], [76.9, 7181.0], [77.0, 7182.0], [77.1, 7183.0], [77.2, 7184.0], [77.3, 7184.0], [77.4, 7185.0], [77.5, 7188.0], [77.6, 7190.0], [77.7, 7190.0], [77.8, 7193.0], [77.9, 7194.0], [78.0, 7196.0], [78.1, 7197.0], [78.2, 7199.0], [78.3, 7201.0], [78.4, 7202.0], [78.5, 7204.0], [78.6, 7206.0], [78.7, 7207.0], [78.8, 7209.0], [78.9, 7210.0], [79.0, 7211.0], [79.1, 7213.0], [79.2, 7215.0], [79.3, 7216.0], [79.4, 7218.0], [79.5, 7220.0], [79.6, 7222.0], [79.7, 7223.0], [79.8, 7226.0], [79.9, 7226.0], [80.0, 7228.0], [80.1, 7229.0], [80.2, 7230.0], [80.3, 7233.0], [80.4, 7234.0], [80.5, 7236.0], [80.6, 7236.0], [80.7, 7239.0], [80.8, 7239.0], [80.9, 7240.0], [81.0, 7241.0], [81.1, 7242.0], [81.2, 7243.0], [81.3, 7245.0], [81.4, 7246.0], [81.5, 7246.0], [81.6, 7248.0], [81.7, 7250.0], [81.8, 7251.0], [81.9, 7252.0], [82.0, 7255.0], [82.1, 7256.0], [82.2, 7257.0], [82.3, 7260.0], [82.4, 7262.0], [82.5, 7263.0], [82.6, 7264.0], [82.7, 7265.0], [82.8, 7266.0], [82.9, 7266.0], [83.0, 7269.0], [83.1, 7269.0], [83.2, 7270.0], [83.3, 7274.0], [83.4, 7274.0], [83.5, 7277.0], [83.6, 7278.0], [83.7, 7279.0], [83.8, 7281.0], [83.9, 7283.0], [84.0, 7284.0], [84.1, 7286.0], [84.2, 7287.0], [84.3, 7290.0], [84.4, 7291.0], [84.5, 7293.0], [84.6, 7294.0], [84.7, 7296.0], [84.8, 7298.0], [84.9, 7299.0], [85.0, 7300.0], [85.1, 7300.0], [85.2, 7303.0], [85.3, 7303.0], [85.4, 7304.0], [85.5, 7306.0], [85.6, 7307.0], [85.7, 7310.0], [85.8, 7311.0], [85.9, 7313.0], [86.0, 7314.0], [86.1, 7316.0], [86.2, 7317.0], [86.3, 7318.0], [86.4, 7320.0], [86.5, 7323.0], [86.6, 7326.0], [86.7, 7328.0], [86.8, 7329.0], [86.9, 7331.0], [87.0, 7332.0], [87.1, 7333.0], [87.2, 7335.0], [87.3, 7338.0], [87.4, 7340.0], [87.5, 7343.0], [87.6, 7345.0], [87.7, 7349.0], [87.8, 7351.0], [87.9, 7352.0], [88.0, 7352.0], [88.1, 7354.0], [88.2, 7357.0], [88.3, 7357.0], [88.4, 7360.0], [88.5, 7361.0], [88.6, 7362.0], [88.7, 7363.0], [88.8, 7364.0], [88.9, 7368.0], [89.0, 7373.0], [89.1, 7373.0], [89.2, 7373.0], [89.3, 7375.0], [89.4, 7377.0], [89.5, 7378.0], [89.6, 7380.0], [89.7, 7382.0], [89.8, 7384.0], [89.9, 7386.0], [90.0, 7387.0], [90.1, 7390.0], [90.2, 7393.0], [90.3, 7394.0], [90.4, 7395.0], [90.5, 7399.0], [90.6, 7401.0], [90.7, 7403.0], [90.8, 7406.0], [90.9, 7408.0], [91.0, 7409.0], [91.1, 7411.0], [91.2, 7413.0], [91.3, 7418.0], [91.4, 7419.0], [91.5, 7422.0], [91.6, 7423.0], [91.7, 7427.0], [91.8, 7428.0], [91.9, 7430.0], [92.0, 7432.0], [92.1, 7437.0], [92.2, 7440.0], [92.3, 7442.0], [92.4, 7444.0], [92.5, 7446.0], [92.6, 7449.0], [92.7, 7452.0], [92.8, 7458.0], [92.9, 7459.0], [93.0, 7466.0], [93.1, 7468.0], [93.2, 7474.0], [93.3, 7476.0], [93.4, 7478.0], [93.5, 7483.0], [93.6, 7486.0], [93.7, 7489.0], [93.8, 7496.0], [93.9, 7498.0], [94.0, 7500.0], [94.1, 7507.0], [94.2, 7508.0], [94.3, 7513.0], [94.4, 7516.0], [94.5, 7519.0], [94.6, 7525.0], [94.7, 7529.0], [94.8, 7531.0], [94.9, 7533.0], [95.0, 7537.0], [95.1, 7542.0], [95.2, 7545.0], [95.3, 7550.0], [95.4, 7550.0], [95.5, 7553.0], [95.6, 7556.0], [95.7, 7562.0], [95.8, 7563.0], [95.9, 7566.0], [96.0, 7568.0], [96.1, 7571.0], [96.2, 7572.0], [96.3, 7576.0], [96.4, 7577.0], [96.5, 7581.0], [96.6, 7595.0], [96.7, 7604.0], [96.8, 7607.0], [96.9, 7616.0], [97.0, 7622.0], [97.1, 7627.0], [97.2, 7632.0], [97.3, 7636.0], [97.4, 7639.0], [97.5, 7641.0], [97.6, 7659.0], [97.7, 7662.0], [97.8, 7670.0], [97.9, 7676.0], [98.0, 7687.0], [98.1, 7691.0], [98.2, 7700.0], [98.3, 7710.0], [98.4, 7731.0], [98.5, 7750.0], [98.6, 7769.0], [98.7, 7777.0], [98.8, 7813.0], [98.9, 7822.0], [99.0, 7852.0], [99.1, 7886.0], [99.2, 7895.0], [99.3, 7927.0], [99.4, 7985.0], [99.5, 8047.0], [99.6, 8083.0], [99.7, 8111.0], [99.8, 8375.0], [99.9, 8658.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[0.0, 2498.0], [0.1, 2690.0], [0.2, 2713.0], [0.3, 2742.0], [0.4, 2778.0], [0.5, 2783.0], [0.6, 2816.0], [0.7, 2818.0], [0.8, 2823.0], [0.9, 2845.0], [1.0, 2866.0], [1.1, 2869.0], [1.2, 2872.0], [1.3, 2897.0], [1.4, 2961.0], [1.5, 3032.0], [1.6, 3071.0], [1.7, 3078.0], [1.8, 3104.0], [1.9, 3126.0], [2.0, 3181.0], [2.1, 3193.0], [2.2, 3210.0], [2.3, 3237.0], [2.4, 3272.0], [2.5, 3283.0], [2.6, 3291.0], [2.7, 3303.0], [2.8, 3317.0], [2.9, 3344.0], [3.0, 3386.0], [3.1, 3402.0], [3.2, 3442.0], [3.3, 3492.0], [3.4, 3521.0], [3.5, 3536.0], [3.6, 3551.0], [3.7, 3561.0], [3.8, 3579.0], [3.9, 3614.0], [4.0, 3653.0], [4.1, 3669.0], [4.2, 3691.0], [4.3, 3703.0], [4.4, 3720.0], [4.5, 3735.0], [4.6, 3753.0], [4.7, 3774.0], [4.8, 3791.0], [4.9, 3815.0], [5.0, 3827.0], [5.1, 3860.0], [5.2, 3895.0], [5.3, 3910.0], [5.4, 3921.0], [5.5, 3945.0], [5.6, 3949.0], [5.7, 3961.0], [5.8, 3972.0], [5.9, 3979.0], [6.0, 3985.0], [6.1, 3996.0], [6.2, 4021.0], [6.3, 4033.0], [6.4, 4050.0], [6.5, 4075.0], [6.6, 4093.0], [6.7, 4143.0], [6.8, 4157.0], [6.9, 4159.0], [7.0, 4177.0], [7.1, 4191.0], [7.2, 4215.0], [7.3, 4247.0], [7.4, 4295.0], [7.5, 4314.0], [7.6, 4322.0], [7.7, 4341.0], [7.8, 4376.0], [7.9, 4393.0], [8.0, 4396.0], [8.1, 4412.0], [8.2, 4455.0], [8.3, 4462.0], [8.4, 4477.0], [8.5, 4496.0], [8.6, 4506.0], [8.7, 4511.0], [8.8, 4516.0], [8.9, 4530.0], [9.0, 4547.0], [9.1, 4552.0], [9.2, 4561.0], [9.3, 4570.0], [9.4, 4581.0], [9.5, 4586.0], [9.6, 4596.0], [9.7, 4598.0], [9.8, 4606.0], [9.9, 4625.0], [10.0, 4631.0], [10.1, 4646.0], [10.2, 4674.0], [10.3, 4697.0], [10.4, 4744.0], [10.5, 4765.0], [10.6, 4766.0], [10.7, 4782.0], [10.8, 4791.0], [10.9, 4818.0], [11.0, 4835.0], [11.1, 4843.0], [11.2, 4854.0], [11.3, 4868.0], [11.4, 4874.0], [11.5, 4886.0], [11.6, 4918.0], [11.7, 4952.0], [11.8, 4977.0], [11.9, 5012.0], [12.0, 5032.0], [12.1, 5051.0], [12.2, 5062.0], [12.3, 5096.0], [12.4, 5116.0], [12.5, 5129.0], [12.6, 5139.0], [12.7, 5170.0], [12.8, 5175.0], [12.9, 5195.0], [13.0, 5205.0], [13.1, 5217.0], [13.2, 5223.0], [13.3, 5246.0], [13.4, 5250.0], [13.5, 5261.0], [13.6, 5275.0], [13.7, 5287.0], [13.8, 5294.0], [13.9, 5299.0], [14.0, 5304.0], [14.1, 5312.0], [14.2, 5313.0], [14.3, 5314.0], [14.4, 5321.0], [14.5, 5323.0], [14.6, 5325.0], [14.7, 5328.0], [14.8, 5332.0], [14.9, 5338.0], [15.0, 5340.0], [15.1, 5344.0], [15.2, 5349.0], [15.3, 5351.0], [15.4, 5356.0], [15.5, 5356.0], [15.6, 5360.0], [15.7, 5364.0], [15.8, 5366.0], [15.9, 5368.0], [16.0, 5372.0], [16.1, 5375.0], [16.2, 5378.0], [16.3, 5383.0], [16.4, 5388.0], [16.5, 5389.0], [16.6, 5390.0], [16.7, 5395.0], [16.8, 5395.0], [16.9, 5399.0], [17.0, 5400.0], [17.1, 5404.0], [17.2, 5408.0], [17.3, 5409.0], [17.4, 5411.0], [17.5, 5414.0], [17.6, 5414.0], [17.7, 5416.0], [17.8, 5420.0], [17.9, 5422.0], [18.0, 5423.0], [18.1, 5424.0], [18.2, 5425.0], [18.3, 5427.0], [18.4, 5428.0], [18.5, 5430.0], [18.6, 5432.0], [18.7, 5434.0], [18.8, 5437.0], [18.9, 5437.0], [19.0, 5438.0], [19.1, 5439.0], [19.2, 5439.0], [19.3, 5440.0], [19.4, 5442.0], [19.5, 5444.0], [19.6, 5445.0], [19.7, 5447.0], [19.8, 5449.0], [19.9, 5450.0], [20.0, 5451.0], [20.1, 5452.0], [20.2, 5453.0], [20.3, 5454.0], [20.4, 5455.0], [20.5, 5456.0], [20.6, 5460.0], [20.7, 5461.0], [20.8, 5463.0], [20.9, 5464.0], [21.0, 5465.0], [21.1, 5466.0], [21.2, 5467.0], [21.3, 5469.0], [21.4, 5471.0], [21.5, 5472.0], [21.6, 5474.0], [21.7, 5474.0], [21.8, 5476.0], [21.9, 5478.0], [22.0, 5479.0], [22.1, 5480.0], [22.2, 5481.0], [22.3, 5482.0], [22.4, 5484.0], [22.5, 5485.0], [22.6, 5487.0], [22.7, 5488.0], [22.8, 5490.0], [22.9, 5492.0], [23.0, 5493.0], [23.1, 5495.0], [23.2, 5495.0], [23.3, 5496.0], [23.4, 5497.0], [23.5, 5498.0], [23.6, 5499.0], [23.7, 5501.0], [23.8, 5502.0], [23.9, 5502.0], [24.0, 5505.0], [24.1, 5506.0], [24.2, 5508.0], [24.3, 5510.0], [24.4, 5511.0], [24.5, 5512.0], [24.6, 5514.0], [24.7, 5516.0], [24.8, 5518.0], [24.9, 5519.0], [25.0, 5521.0], [25.1, 5521.0], [25.2, 5523.0], [25.3, 5523.0], [25.4, 5524.0], [25.5, 5525.0], [25.6, 5527.0], [25.7, 5528.0], [25.8, 5528.0], [25.9, 5531.0], [26.0, 5532.0], [26.1, 5533.0], [26.2, 5534.0], [26.3, 5537.0], [26.4, 5537.0], [26.5, 5538.0], [26.6, 5539.0], [26.7, 5541.0], [26.8, 5542.0], [26.9, 5544.0], [27.0, 5544.0], [27.1, 5545.0], [27.2, 5546.0], [27.3, 5547.0], [27.4, 5548.0], [27.5, 5550.0], [27.6, 5552.0], [27.7, 5552.0], [27.8, 5553.0], [27.9, 5553.0], [28.0, 5555.0], [28.1, 5556.0], [28.2, 5557.0], [28.3, 5559.0], [28.4, 5559.0], [28.5, 5561.0], [28.6, 5562.0], [28.7, 5564.0], [28.8, 5565.0], [28.9, 5565.0], [29.0, 5566.0], [29.1, 5566.0], [29.2, 5569.0], [29.3, 5571.0], [29.4, 5573.0], [29.5, 5573.0], [29.6, 5575.0], [29.7, 5577.0], [29.8, 5578.0], [29.9, 5579.0], [30.0, 5580.0], [30.1, 5580.0], [30.2, 5582.0], [30.3, 5585.0], [30.4, 5586.0], [30.5, 5587.0], [30.6, 5588.0], [30.7, 5589.0], [30.8, 5591.0], [30.9, 5592.0], [31.0, 5593.0], [31.1, 5596.0], [31.2, 5596.0], [31.3, 5598.0], [31.4, 5600.0], [31.5, 5602.0], [31.6, 5603.0], [31.7, 5604.0], [31.8, 5604.0], [31.9, 5604.0], [32.0, 5606.0], [32.1, 5607.0], [32.2, 5608.0], [32.3, 5609.0], [32.4, 5609.0], [32.5, 5610.0], [32.6, 5611.0], [32.7, 5612.0], [32.8, 5613.0], [32.9, 5615.0], [33.0, 5616.0], [33.1, 5616.0], [33.2, 5618.0], [33.3, 5619.0], [33.4, 5620.0], [33.5, 5621.0], [33.6, 5622.0], [33.7, 5623.0], [33.8, 5624.0], [33.9, 5625.0], [34.0, 5627.0], [34.1, 5627.0], [34.2, 5628.0], [34.3, 5629.0], [34.4, 5630.0], [34.5, 5631.0], [34.6, 5632.0], [34.7, 5633.0], [34.8, 5634.0], [34.9, 5634.0], [35.0, 5635.0], [35.1, 5635.0], [35.2, 5635.0], [35.3, 5636.0], [35.4, 5639.0], [35.5, 5640.0], [35.6, 5641.0], [35.7, 5643.0], [35.8, 5644.0], [35.9, 5645.0], [36.0, 5647.0], [36.1, 5648.0], [36.2, 5649.0], [36.3, 5650.0], [36.4, 5651.0], [36.5, 5653.0], [36.6, 5654.0], [36.7, 5655.0], [36.8, 5657.0], [36.9, 5657.0], [37.0, 5658.0], [37.1, 5658.0], [37.2, 5661.0], [37.3, 5662.0], [37.4, 5663.0], [37.5, 5663.0], [37.6, 5665.0], [37.7, 5665.0], [37.8, 5666.0], [37.9, 5667.0], [38.0, 5667.0], [38.1, 5668.0], [38.2, 5671.0], [38.3, 5672.0], [38.4, 5673.0], [38.5, 5674.0], [38.6, 5675.0], [38.7, 5676.0], [38.8, 5678.0], [38.9, 5679.0], [39.0, 5680.0], [39.1, 5680.0], [39.2, 5681.0], [39.3, 5682.0], [39.4, 5683.0], [39.5, 5685.0], [39.6, 5686.0], [39.7, 5687.0], [39.8, 5688.0], [39.9, 5689.0], [40.0, 5689.0], [40.1, 5690.0], [40.2, 5691.0], [40.3, 5692.0], [40.4, 5693.0], [40.5, 5694.0], [40.6, 5695.0], [40.7, 5696.0], [40.8, 5696.0], [40.9, 5697.0], [41.0, 5700.0], [41.1, 5701.0], [41.2, 5701.0], [41.3, 5702.0], [41.4, 5703.0], [41.5, 5704.0], [41.6, 5704.0], [41.7, 5706.0], [41.8, 5708.0], [41.9, 5711.0], [42.0, 5711.0], [42.1, 5712.0], [42.2, 5712.0], [42.3, 5713.0], [42.4, 5715.0], [42.5, 5715.0], [42.6, 5716.0], [42.7, 5719.0], [42.8, 5720.0], [42.9, 5721.0], [43.0, 5723.0], [43.1, 5724.0], [43.2, 5726.0], [43.3, 5727.0], [43.4, 5727.0], [43.5, 5728.0], [43.6, 5729.0], [43.7, 5731.0], [43.8, 5732.0], [43.9, 5732.0], [44.0, 5733.0], [44.1, 5735.0], [44.2, 5736.0], [44.3, 5738.0], [44.4, 5739.0], [44.5, 5740.0], [44.6, 5740.0], [44.7, 5743.0], [44.8, 5744.0], [44.9, 5746.0], [45.0, 5746.0], [45.1, 5748.0], [45.2, 5751.0], [45.3, 5751.0], [45.4, 5752.0], [45.5, 5754.0], [45.6, 5755.0], [45.7, 5757.0], [45.8, 5757.0], [45.9, 5759.0], [46.0, 5760.0], [46.1, 5761.0], [46.2, 5763.0], [46.3, 5764.0], [46.4, 5765.0], [46.5, 5767.0], [46.6, 5770.0], [46.7, 5771.0], [46.8, 5772.0], [46.9, 5773.0], [47.0, 5773.0], [47.1, 5774.0], [47.2, 5776.0], [47.3, 5777.0], [47.4, 5777.0], [47.5, 5778.0], [47.6, 5782.0], [47.7, 5782.0], [47.8, 5783.0], [47.9, 5784.0], [48.0, 5784.0], [48.1, 5785.0], [48.2, 5786.0], [48.3, 5787.0], [48.4, 5789.0], [48.5, 5791.0], [48.6, 5792.0], [48.7, 5792.0], [48.8, 5794.0], [48.9, 5794.0], [49.0, 5797.0], [49.1, 5798.0], [49.2, 5799.0], [49.3, 5799.0], [49.4, 5801.0], [49.5, 5802.0], [49.6, 5803.0], [49.7, 5804.0], [49.8, 5806.0], [49.9, 5808.0], [50.0, 5810.0], [50.1, 5812.0], [50.2, 5813.0], [50.3, 5813.0], [50.4, 5814.0], [50.5, 5815.0], [50.6, 5817.0], [50.7, 5818.0], [50.8, 5818.0], [50.9, 5819.0], [51.0, 5820.0], [51.1, 5822.0], [51.2, 5824.0], [51.3, 5825.0], [51.4, 5827.0], [51.5, 5829.0], [51.6, 5830.0], [51.7, 5831.0], [51.8, 5833.0], [51.9, 5833.0], [52.0, 5834.0], [52.1, 5836.0], [52.2, 5839.0], [52.3, 5841.0], [52.4, 5842.0], [52.5, 5844.0], [52.6, 5847.0], [52.7, 5852.0], [52.8, 5853.0], [52.9, 5854.0], [53.0, 5855.0], [53.1, 5857.0], [53.2, 5857.0], [53.3, 5858.0], [53.4, 5861.0], [53.5, 5862.0], [53.6, 5864.0], [53.7, 5865.0], [53.8, 5867.0], [53.9, 5869.0], [54.0, 5870.0], [54.1, 5870.0], [54.2, 5872.0], [54.3, 5873.0], [54.4, 5876.0], [54.5, 5877.0], [54.6, 5881.0], [54.7, 5881.0], [54.8, 5883.0], [54.9, 5884.0], [55.0, 5884.0], [55.1, 5884.0], [55.2, 5885.0], [55.3, 5888.0], [55.4, 5889.0], [55.5, 5890.0], [55.6, 5891.0], [55.7, 5893.0], [55.8, 5895.0], [55.9, 5895.0], [56.0, 5896.0], [56.1, 5897.0], [56.2, 5898.0], [56.3, 5903.0], [56.4, 5903.0], [56.5, 5904.0], [56.6, 5906.0], [56.7, 5908.0], [56.8, 5909.0], [56.9, 5910.0], [57.0, 5912.0], [57.1, 5914.0], [57.2, 5916.0], [57.3, 5917.0], [57.4, 5918.0], [57.5, 5920.0], [57.6, 5922.0], [57.7, 5925.0], [57.8, 5926.0], [57.9, 5928.0], [58.0, 5929.0], [58.1, 5930.0], [58.2, 5932.0], [58.3, 5934.0], [58.4, 5936.0], [58.5, 5937.0], [58.6, 5939.0], [58.7, 5940.0], [58.8, 5942.0], [58.9, 5943.0], [59.0, 5946.0], [59.1, 5947.0], [59.2, 5949.0], [59.3, 5950.0], [59.4, 5951.0], [59.5, 5951.0], [59.6, 5952.0], [59.7, 5953.0], [59.8, 5955.0], [59.9, 5955.0], [60.0, 5958.0], [60.1, 5961.0], [60.2, 5963.0], [60.3, 5965.0], [60.4, 5968.0], [60.5, 5973.0], [60.6, 5975.0], [60.7, 5979.0], [60.8, 5981.0], [60.9, 5983.0], [61.0, 5984.0], [61.1, 5986.0], [61.2, 5988.0], [61.3, 5989.0], [61.4, 5990.0], [61.5, 5991.0], [61.6, 5992.0], [61.7, 5994.0], [61.8, 5997.0], [61.9, 5998.0], [62.0, 6001.0], [62.1, 6001.0], [62.2, 6003.0], [62.3, 6005.0], [62.4, 6007.0], [62.5, 6008.0], [62.6, 6009.0], [62.7, 6012.0], [62.8, 6015.0], [62.9, 6016.0], [63.0, 6018.0], [63.1, 6019.0], [63.2, 6020.0], [63.3, 6023.0], [63.4, 6027.0], [63.5, 6032.0], [63.6, 6033.0], [63.7, 6033.0], [63.8, 6035.0], [63.9, 6036.0], [64.0, 6037.0], [64.1, 6038.0], [64.2, 6040.0], [64.3, 6041.0], [64.4, 6042.0], [64.5, 6043.0], [64.6, 6044.0], [64.7, 6046.0], [64.8, 6047.0], [64.9, 6049.0], [65.0, 6049.0], [65.1, 6050.0], [65.2, 6052.0], [65.3, 6054.0], [65.4, 6057.0], [65.5, 6059.0], [65.6, 6062.0], [65.7, 6065.0], [65.8, 6066.0], [65.9, 6069.0], [66.0, 6072.0], [66.1, 6073.0], [66.2, 6074.0], [66.3, 6078.0], [66.4, 6083.0], [66.5, 6086.0], [66.6, 6089.0], [66.7, 6092.0], [66.8, 6093.0], [66.9, 6095.0], [67.0, 6097.0], [67.1, 6100.0], [67.2, 6101.0], [67.3, 6102.0], [67.4, 6104.0], [67.5, 6105.0], [67.6, 6106.0], [67.7, 6107.0], [67.8, 6108.0], [67.9, 6109.0], [68.0, 6110.0], [68.1, 6112.0], [68.2, 6113.0], [68.3, 6114.0], [68.4, 6118.0], [68.5, 6119.0], [68.6, 6124.0], [68.7, 6125.0], [68.8, 6127.0], [68.9, 6130.0], [69.0, 6131.0], [69.1, 6134.0], [69.2, 6135.0], [69.3, 6138.0], [69.4, 6139.0], [69.5, 6140.0], [69.6, 6142.0], [69.7, 6146.0], [69.8, 6147.0], [69.9, 6149.0], [70.0, 6151.0], [70.1, 6153.0], [70.2, 6154.0], [70.3, 6155.0], [70.4, 6156.0], [70.5, 6159.0], [70.6, 6160.0], [70.7, 6162.0], [70.8, 6163.0], [70.9, 6165.0], [71.0, 6168.0], [71.1, 6171.0], [71.2, 6173.0], [71.3, 6174.0], [71.4, 6176.0], [71.5, 6177.0], [71.6, 6179.0], [71.7, 6180.0], [71.8, 6181.0], [71.9, 6183.0], [72.0, 6185.0], [72.1, 6188.0], [72.2, 6190.0], [72.3, 6192.0], [72.4, 6193.0], [72.5, 6195.0], [72.6, 6198.0], [72.7, 6199.0], [72.8, 6202.0], [72.9, 6204.0], [73.0, 6205.0], [73.1, 6207.0], [73.2, 6209.0], [73.3, 6211.0], [73.4, 6214.0], [73.5, 6216.0], [73.6, 6218.0], [73.7, 6222.0], [73.8, 6224.0], [73.9, 6227.0], [74.0, 6228.0], [74.1, 6229.0], [74.2, 6231.0], [74.3, 6231.0], [74.4, 6233.0], [74.5, 6236.0], [74.6, 6237.0], [74.7, 6238.0], [74.8, 6239.0], [74.9, 6241.0], [75.0, 6243.0], [75.1, 6244.0], [75.2, 6246.0], [75.3, 6251.0], [75.4, 6253.0], [75.5, 6255.0], [75.6, 6257.0], [75.7, 6258.0], [75.8, 6261.0], [75.9, 6264.0], [76.0, 6264.0], [76.1, 6268.0], [76.2, 6269.0], [76.3, 6272.0], [76.4, 6273.0], [76.5, 6275.0], [76.6, 6279.0], [76.7, 6281.0], [76.8, 6283.0], [76.9, 6285.0], [77.0, 6287.0], [77.1, 6288.0], [77.2, 6289.0], [77.3, 6291.0], [77.4, 6293.0], [77.5, 6294.0], [77.6, 6295.0], [77.7, 6296.0], [77.8, 6298.0], [77.9, 6303.0], [78.0, 6304.0], [78.1, 6307.0], [78.2, 6308.0], [78.3, 6310.0], [78.4, 6312.0], [78.5, 6314.0], [78.6, 6315.0], [78.7, 6317.0], [78.8, 6319.0], [78.9, 6321.0], [79.0, 6322.0], [79.1, 6324.0], [79.2, 6327.0], [79.3, 6328.0], [79.4, 6329.0], [79.5, 6332.0], [79.6, 6333.0], [79.7, 6334.0], [79.8, 6336.0], [79.9, 6338.0], [80.0, 6340.0], [80.1, 6341.0], [80.2, 6341.0], [80.3, 6342.0], [80.4, 6347.0], [80.5, 6349.0], [80.6, 6349.0], [80.7, 6351.0], [80.8, 6354.0], [80.9, 6356.0], [81.0, 6358.0], [81.1, 6359.0], [81.2, 6368.0], [81.3, 6369.0], [81.4, 6370.0], [81.5, 6372.0], [81.6, 6374.0], [81.7, 6378.0], [81.8, 6378.0], [81.9, 6380.0], [82.0, 6383.0], [82.1, 6384.0], [82.2, 6386.0], [82.3, 6387.0], [82.4, 6390.0], [82.5, 6391.0], [82.6, 6393.0], [82.7, 6393.0], [82.8, 6395.0], [82.9, 6397.0], [83.0, 6400.0], [83.1, 6402.0], [83.2, 6403.0], [83.3, 6405.0], [83.4, 6409.0], [83.5, 6411.0], [83.6, 6413.0], [83.7, 6415.0], [83.8, 6418.0], [83.9, 6419.0], [84.0, 6421.0], [84.1, 6425.0], [84.2, 6427.0], [84.3, 6428.0], [84.4, 6431.0], [84.5, 6433.0], [84.6, 6435.0], [84.7, 6437.0], [84.8, 6439.0], [84.9, 6442.0], [85.0, 6444.0], [85.1, 6446.0], [85.2, 6448.0], [85.3, 6450.0], [85.4, 6451.0], [85.5, 6451.0], [85.6, 6452.0], [85.7, 6459.0], [85.8, 6460.0], [85.9, 6461.0], [86.0, 6463.0], [86.1, 6466.0], [86.2, 6467.0], [86.3, 6468.0], [86.4, 6468.0], [86.5, 6470.0], [86.6, 6474.0], [86.7, 6481.0], [86.8, 6483.0], [86.9, 6487.0], [87.0, 6489.0], [87.1, 6492.0], [87.2, 6494.0], [87.3, 6496.0], [87.4, 6498.0], [87.5, 6501.0], [87.6, 6504.0], [87.7, 6505.0], [87.8, 6507.0], [87.9, 6509.0], [88.0, 6512.0], [88.1, 6513.0], [88.2, 6514.0], [88.3, 6516.0], [88.4, 6518.0], [88.5, 6520.0], [88.6, 6522.0], [88.7, 6522.0], [88.8, 6524.0], [88.9, 6526.0], [89.0, 6528.0], [89.1, 6529.0], [89.2, 6533.0], [89.3, 6536.0], [89.4, 6538.0], [89.5, 6540.0], [89.6, 6542.0], [89.7, 6545.0], [89.8, 6551.0], [89.9, 6552.0], [90.0, 6555.0], [90.1, 6557.0], [90.2, 6559.0], [90.3, 6562.0], [90.4, 6564.0], [90.5, 6566.0], [90.6, 6569.0], [90.7, 6572.0], [90.8, 6573.0], [90.9, 6574.0], [91.0, 6576.0], [91.1, 6577.0], [91.2, 6581.0], [91.3, 6582.0], [91.4, 6583.0], [91.5, 6585.0], [91.6, 6585.0], [91.7, 6587.0], [91.8, 6589.0], [91.9, 6591.0], [92.0, 6597.0], [92.1, 6601.0], [92.2, 6603.0], [92.3, 6607.0], [92.4, 6607.0], [92.5, 6609.0], [92.6, 6609.0], [92.7, 6612.0], [92.8, 6613.0], [92.9, 6614.0], [93.0, 6616.0], [93.1, 6622.0], [93.2, 6625.0], [93.3, 6631.0], [93.4, 6635.0], [93.5, 6637.0], [93.6, 6641.0], [93.7, 6647.0], [93.8, 6651.0], [93.9, 6656.0], [94.0, 6662.0], [94.1, 6668.0], [94.2, 6669.0], [94.3, 6677.0], [94.4, 6678.0], [94.5, 6682.0], [94.6, 6684.0], [94.7, 6685.0], [94.8, 6686.0], [94.9, 6697.0], [95.0, 6702.0], [95.1, 6706.0], [95.2, 6707.0], [95.3, 6710.0], [95.4, 6715.0], [95.5, 6717.0], [95.6, 6719.0], [95.7, 6726.0], [95.8, 6730.0], [95.9, 6734.0], [96.0, 6740.0], [96.1, 6745.0], [96.2, 6752.0], [96.3, 6753.0], [96.4, 6760.0], [96.5, 6766.0], [96.6, 6769.0], [96.7, 6776.0], [96.8, 6781.0], [96.9, 6782.0], [97.0, 6784.0], [97.1, 6793.0], [97.2, 6806.0], [97.3, 6811.0], [97.4, 6818.0], [97.5, 6824.0], [97.6, 6827.0], [97.7, 6832.0], [97.8, 6836.0], [97.9, 6840.0], [98.0, 6843.0], [98.1, 6848.0], [98.2, 6863.0], [98.3, 6866.0], [98.4, 6870.0], [98.5, 6882.0], [98.6, 6917.0], [98.7, 6942.0], [98.8, 6949.0], [98.9, 6960.0], [99.0, 6990.0], [99.1, 7013.0], [99.2, 7027.0], [99.3, 7056.0], [99.4, 7080.0], [99.5, 7154.0], [99.6, 7243.0], [99.7, 7393.0], [99.8, 7621.0], [99.9, 7968.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 2400.0, "maxY": 289.0, "series": [{"data": [[2800.0, 2.0], [2700.0, 5.0], [2900.0, 1.0], [3000.0, 13.0], [3100.0, 17.0], [3300.0, 4.0], [3200.0, 4.0], [3400.0, 5.0], [3500.0, 8.0], [3600.0, 14.0], [3700.0, 10.0], [3800.0, 6.0], [3900.0, 5.0], [4000.0, 19.0], [4100.0, 16.0], [4300.0, 7.0], [4200.0, 21.0], [4600.0, 8.0], [4500.0, 13.0], [4400.0, 12.0], [4700.0, 8.0], [4800.0, 9.0], [4900.0, 19.0], [5000.0, 16.0], [5100.0, 29.0], [5200.0, 18.0], [5300.0, 10.0], [5400.0, 14.0], [5500.0, 13.0], [5600.0, 13.0], [5700.0, 20.0], [5800.0, 24.0], [5900.0, 38.0], [6000.0, 88.0], [6100.0, 106.0], [6200.0, 142.0], [6300.0, 163.0], [6400.0, 161.0], [6500.0, 112.0], [6600.0, 130.0], [6700.0, 172.0], [6800.0, 197.0], [6900.0, 223.0], [7000.0, 227.0], [7100.0, 205.0], [7400.0, 103.0], [7300.0, 166.0], [7200.0, 203.0], [7600.0, 47.0], [7500.0, 80.0], [7800.0, 13.0], [7900.0, 7.0], [7700.0, 18.0], [8000.0, 6.0], [8100.0, 4.0], [8300.0, 1.0], [8600.0, 2.0], [8500.0, 1.0], [8800.0, 2.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[2400.0, 1.0], [2500.0, 1.0], [2600.0, 4.0], [2700.0, 11.0], [2800.0, 22.0], [2900.0, 5.0], [3000.0, 9.0], [3100.0, 11.0], [3200.0, 16.0], [3300.0, 13.0], [3400.0, 8.0], [3500.0, 15.0], [3600.0, 12.0], [3700.0, 18.0], [3800.0, 12.0], [3900.0, 26.0], [4000.0, 15.0], [4100.0, 16.0], [4200.0, 8.0], [4300.0, 18.0], [4400.0, 16.0], [4500.0, 35.0], [4600.0, 18.0], [4700.0, 15.0], [4800.0, 22.0], [4900.0, 10.0], [5000.0, 13.0], [5100.0, 18.0], [5200.0, 32.0], [5300.0, 90.0], [5400.0, 199.0], [5500.0, 231.0], [5600.0, 289.0], [5700.0, 250.0], [5800.0, 207.0], [5900.0, 173.0], [6000.0, 153.0], [6100.0, 170.0], [6200.0, 153.0], [6300.0, 154.0], [6600.0, 86.0], [6400.0, 134.0], [6500.0, 140.0], [6700.0, 66.0], [6800.0, 42.0], [6900.0, 16.0], [7000.0, 11.0], [7100.0, 2.0], [7400.0, 2.0], [7300.0, 2.0], [7200.0, 4.0], [7600.0, 1.0], [7800.0, 2.0], [7900.0, 1.0], [8000.0, 2.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 8800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 6000.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6000.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 6000.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.67889472E12, "maxY": 30.0, "series": [{"data": [[1.67889542E12, 30.0], [1.67889508E12, 30.0], [1.67889474E12, 6.6842105263157885], [1.67889585E12, 30.0], [1.67889567E12, 30.0], [1.67889533E12, 30.0], [1.67889603E12, 10.833333333333332], [1.67889499E12, 30.0], [1.67889576E12, 30.0], [1.67889558E12, 30.0], [1.67889524E12, 30.0], [1.6788949E12, 30.0], [1.67889583E12, 30.0], [1.67889549E12, 30.0], [1.67889515E12, 30.0], [1.67889481E12, 24.19565217391304], [1.67889592E12, 28.585365853658537], [1.6788951E12, 30.0], [1.67889476E12, 11.666666666666664], [1.67889587E12, 30.0], [1.67889553E12, 30.0], [1.67889535E12, 30.0], [1.67889601E12, 13.611111111111112], [1.67889501E12, 30.0], [1.67889578E12, 30.0], [1.67889544E12, 30.0], [1.67889526E12, 30.0], [1.67889492E12, 30.0], [1.67889569E12, 30.0], [1.67889551E12, 30.0], [1.67889517E12, 30.0], [1.67889483E12, 29.187499999999996], [1.67889594E12, 26.156862745098042], [1.6788956E12, 30.0], [1.67889495E12, 30.0], [1.67889572E12, 30.0], [1.67889538E12, 30.0], [1.67889504E12, 30.0], [1.67889486E12, 30.0], [1.67889597E12, 20.714285714285708], [1.67889563E12, 30.0], [1.67889529E12, 30.0], [1.67889511E12, 30.0], [1.67889608E12, 2.375], [1.67889477E12, 14.090909090909092], [1.67889588E12, 30.0], [1.67889554E12, 30.0], [1.6788952E12, 30.0], [1.67889502E12, 30.0], [1.67889579E12, 30.0], [1.67889545E12, 30.0], [1.67889574E12, 30.0], [1.6788954E12, 30.0], [1.67889506E12, 30.0], [1.67889472E12, 2.3333333333333335], [1.67889599E12, 17.97368421052631], [1.67889565E12, 30.0], [1.67889531E12, 30.0], [1.67889497E12, 30.0], [1.67889479E12, 19.256410256410255], [1.6788959E12, 30.0], [1.67889556E12, 30.0], [1.67889522E12, 30.0], [1.67889488E12, 30.0], [1.67889581E12, 30.0], [1.67889547E12, 30.0], [1.67889513E12, 30.0], [1.67889606E12, 5.5], [1.67889559E12, 30.0], [1.67889525E12, 30.0], [1.67889491E12, 30.0], [1.67889568E12, 30.0], [1.6788955E12, 30.0], [1.67889516E12, 30.0], [1.67889482E12, 26.673913043478265], [1.67889593E12, 27.479166666666664], [1.67889575E12, 30.0], [1.67889541E12, 30.0], [1.67889507E12, 30.0], [1.67889473E12, 4.2142857142857135], [1.67889584E12, 30.0], [1.67889566E12, 30.0], [1.67889532E12, 30.0], [1.67889604E12, 8.653846153846153], [1.67889498E12, 30.0], [1.67889527E12, 30.0], [1.67889609E12, 1.0], [1.67889493E12, 30.0], [1.6788957E12, 30.0], [1.67889536E12, 30.0], [1.67889518E12, 30.0], [1.67889484E12, 30.0], [1.67889595E12, 24.288888888888895], [1.67889561E12, 30.0], [1.67889543E12, 30.0], [1.67889509E12, 30.0], [1.67889475E12, 9.08333333333333], [1.67889586E12, 30.0], [1.67889552E12, 30.0], [1.67889534E12, 30.0], [1.67889602E12, 11.727272727272728], [1.678895E12, 30.0], [1.67889577E12, 30.0], [1.67889478E12, 16.78048780487805], [1.67889589E12, 30.0], [1.67889555E12, 30.0], [1.67889521E12, 30.0], [1.67889503E12, 30.0], [1.6788958E12, 30.0], [1.67889546E12, 30.0], [1.67889512E12, 30.0], [1.67889607E12, 3.666666666666666], [1.67889494E12, 30.0], [1.67889571E12, 30.0], [1.67889537E12, 30.0], [1.67889519E12, 30.0], [1.67889485E12, 30.0], [1.67889596E12, 22.818181818181817], [1.67889562E12, 30.0], [1.67889528E12, 30.0], [1.67889591E12, 29.040816326530614], [1.67889557E12, 30.0], [1.67889523E12, 30.0], [1.67889489E12, 30.0], [1.678896E12, 16.486486486486488], [1.67889582E12, 30.0], [1.67889548E12, 30.0], [1.67889514E12, 30.0], [1.67889605E12, 7.000000000000001], [1.6788948E12, 21.651162790697672], [1.67889573E12, 30.0], [1.67889539E12, 30.0], [1.67889505E12, 30.0], [1.67889487E12, 30.0], [1.67889598E12, 19.755555555555556], [1.67889564E12, 30.0], [1.6788953E12, 30.0], [1.67889496E12, 30.0]], "isOverall": false, "label": "线程组", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67889609E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2713.0, "minX": 1.0, "maxY": 6870.015193922436, "series": [{"data": [[2.0, 3500.5], [3.0, 3011.5], [4.0, 2746.5], [5.0, 3065.0], [6.0, 3172.0714285714284], [7.0, 3299.8], [8.0, 3495.357142857143], [9.0, 3562.181818181818], [10.0, 4090.125], [11.0, 3955.2000000000003], [12.0, 4008.6842105263154], [13.0, 4056.7999999999997], [14.0, 4335.2380952380945], [15.0, 4479.4], [16.0, 4503.0], [1.0, 3100.0], [17.0, 4767.111111111111], [18.0, 4865.0], [19.0, 4850.0], [20.0, 5185.050000000001], [21.0, 5298.266666666666], [22.0, 5297.478260869566], [23.0, 5409.6875], [24.0, 5598.88888888889], [25.0, 5605.666666666667], [26.0, 5925.500000000001], [27.0, 6385.36], [28.0, 6713.999999999999], [29.0, 6676.395833333335], [30.0, 6870.015193922436]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[28.182999999999982, 6570.327333333335]], "isOverall": false, "label": "RAMP-Aggregated", "isController": false}, {"data": [[2.0, 2713.0], [3.0, 2769.0], [4.0, 2762.0], [5.0, 2789.5], [6.0, 2887.1666666666665], [7.0, 3024.6666666666665], [8.0, 3111.833333333333], [9.0, 3209.857142857143], [10.0, 3390.0], [11.0, 3559.708333333333], [12.0, 3612.4], [13.0, 3530.4705882352937], [14.0, 3740.3750000000005], [15.0, 4034.916666666667], [16.0, 3826.3749999999995], [1.0, 2761.5], [17.0, 4148.416666666667], [18.0, 4201.210526315789], [19.0, 4203.47619047619], [20.0, 4466.275862068967], [21.0, 4525.380952380952], [22.0, 4701.428571428572], [23.0, 4581.846153846154], [24.0, 4786.529411764705], [25.0, 5027.1875], [26.0, 5078.580645161289], [27.0, 5605.0], [28.0, 5815.740740740741], [29.0, 5793.413043478259], [30.0, 5991.439920159684]], "isOverall": false, "label": "原生", "isController": false}, {"data": [[28.181000000000022, 5729.077999999991]], "isOverall": false, "label": "原生-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 30.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.67889472E12, "maxY": 4.9E-324, "series": [{"data": [[1.67889542E12, 0.0], [1.67889508E12, 0.0], [1.67889474E12, 0.0], [1.67889585E12, 0.0], [1.67889567E12, 0.0], [1.67889533E12, 0.0], [1.67889603E12, 0.0], [1.67889499E12, 0.0], [1.67889576E12, 0.0], [1.67889558E12, 0.0], [1.67889524E12, 0.0], [1.6788949E12, 0.0], [1.67889583E12, 0.0], [1.67889549E12, 0.0], [1.67889515E12, 0.0], [1.67889481E12, 0.0], [1.67889592E12, 0.0], [1.6788951E12, 0.0], [1.67889476E12, 0.0], [1.67889587E12, 0.0], [1.67889553E12, 0.0], [1.67889535E12, 0.0], [1.67889601E12, 0.0], [1.67889501E12, 0.0], [1.67889578E12, 0.0], [1.67889544E12, 0.0], [1.67889526E12, 0.0], [1.67889492E12, 0.0], [1.67889569E12, 0.0], [1.67889551E12, 0.0], [1.67889517E12, 0.0], [1.67889483E12, 0.0], [1.67889594E12, 0.0], [1.6788956E12, 0.0], [1.67889495E12, 0.0], [1.67889572E12, 0.0], [1.67889538E12, 0.0], [1.67889504E12, 0.0], [1.67889486E12, 0.0], [1.67889597E12, 0.0], [1.67889563E12, 0.0], [1.67889529E12, 0.0], [1.67889511E12, 0.0], [1.67889608E12, 0.0], [1.67889477E12, 0.0], [1.67889588E12, 0.0], [1.67889554E12, 0.0], [1.6788952E12, 0.0], [1.67889502E12, 0.0], [1.67889579E12, 0.0], [1.67889545E12, 0.0], [1.67889574E12, 0.0], [1.6788954E12, 0.0], [1.67889506E12, 0.0], [1.67889472E12, 0.0], [1.67889599E12, 0.0], [1.67889565E12, 0.0], [1.67889531E12, 0.0], [1.67889497E12, 0.0], [1.67889479E12, 0.0], [1.6788959E12, 0.0], [1.67889556E12, 0.0], [1.67889522E12, 0.0], [1.67889488E12, 0.0], [1.67889581E12, 0.0], [1.67889547E12, 0.0], [1.67889513E12, 0.0], [1.67889606E12, 0.0], [1.67889559E12, 0.0], [1.67889525E12, 0.0], [1.67889491E12, 0.0], [1.67889568E12, 0.0], [1.6788955E12, 0.0], [1.67889516E12, 0.0], [1.67889482E12, 0.0], [1.67889593E12, 0.0], [1.67889575E12, 0.0], [1.67889541E12, 0.0], [1.67889507E12, 0.0], [1.67889473E12, 0.0], [1.67889584E12, 0.0], [1.67889566E12, 0.0], [1.67889532E12, 0.0], [1.67889604E12, 0.0], [1.67889498E12, 0.0], [1.67889527E12, 0.0], [1.67889609E12, 0.0], [1.67889493E12, 0.0], [1.6788957E12, 0.0], [1.67889536E12, 0.0], [1.67889518E12, 0.0], [1.67889484E12, 0.0], [1.67889595E12, 0.0], [1.67889561E12, 0.0], [1.67889543E12, 0.0], [1.67889509E12, 0.0], [1.67889475E12, 0.0], [1.67889586E12, 0.0], [1.67889552E12, 0.0], [1.67889534E12, 0.0], [1.67889602E12, 0.0], [1.678895E12, 0.0], [1.67889577E12, 0.0], [1.67889478E12, 0.0], [1.67889589E12, 0.0], [1.67889555E12, 0.0], [1.67889521E12, 0.0], [1.67889503E12, 0.0], [1.6788958E12, 0.0], [1.67889546E12, 0.0], [1.67889512E12, 0.0], [1.67889607E12, 0.0], [1.67889494E12, 0.0], [1.67889571E12, 0.0], [1.67889537E12, 0.0], [1.67889519E12, 0.0], [1.67889485E12, 0.0], [1.67889596E12, 0.0], [1.67889562E12, 0.0], [1.67889528E12, 0.0], [1.67889591E12, 0.0], [1.67889557E12, 0.0], [1.67889523E12, 0.0], [1.67889489E12, 0.0], [1.678896E12, 0.0], [1.67889582E12, 0.0], [1.67889548E12, 0.0], [1.67889514E12, 0.0], [1.67889605E12, 0.0], [1.6788948E12, 0.0], [1.67889573E12, 0.0], [1.67889539E12, 0.0], [1.67889505E12, 0.0], [1.67889487E12, 0.0], [1.67889598E12, 0.0], [1.67889564E12, 0.0], [1.6788953E12, 0.0], [1.67889496E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.67889542E12, 0.0], [1.67889508E12, 0.0], [1.67889474E12, 0.0], [1.67889585E12, 0.0], [1.67889567E12, 0.0], [1.67889533E12, 0.0], [1.67889603E12, 0.0], [1.67889499E12, 0.0], [1.67889576E12, 0.0], [1.67889558E12, 0.0], [1.67889524E12, 0.0], [1.6788949E12, 0.0], [1.67889583E12, 0.0], [1.67889549E12, 0.0], [1.67889515E12, 0.0], [1.67889481E12, 0.0], [1.67889592E12, 0.0], [1.6788951E12, 0.0], [1.67889476E12, 0.0], [1.67889587E12, 0.0], [1.67889553E12, 0.0], [1.67889535E12, 0.0], [1.67889601E12, 0.0], [1.67889501E12, 0.0], [1.67889578E12, 0.0], [1.67889544E12, 0.0], [1.67889526E12, 0.0], [1.67889492E12, 0.0], [1.67889569E12, 0.0], [1.67889551E12, 0.0], [1.67889517E12, 0.0], [1.67889483E12, 0.0], [1.67889594E12, 0.0], [1.6788956E12, 0.0], [1.67889495E12, 0.0], [1.67889572E12, 0.0], [1.67889538E12, 0.0], [1.67889504E12, 0.0], [1.67889486E12, 0.0], [1.67889597E12, 0.0], [1.67889563E12, 0.0], [1.67889529E12, 0.0], [1.67889511E12, 0.0], [1.67889608E12, 0.0], [1.67889477E12, 0.0], [1.67889588E12, 0.0], [1.67889554E12, 0.0], [1.6788952E12, 0.0], [1.67889502E12, 0.0], [1.67889579E12, 0.0], [1.67889545E12, 0.0], [1.67889574E12, 0.0], [1.6788954E12, 0.0], [1.67889506E12, 0.0], [1.67889472E12, 0.0], [1.67889599E12, 0.0], [1.67889565E12, 0.0], [1.67889531E12, 0.0], [1.67889497E12, 0.0], [1.67889479E12, 0.0], [1.6788959E12, 0.0], [1.67889556E12, 0.0], [1.67889522E12, 0.0], [1.67889488E12, 0.0], [1.67889581E12, 0.0], [1.67889547E12, 0.0], [1.67889513E12, 0.0], [1.67889606E12, 0.0], [1.67889559E12, 0.0], [1.67889525E12, 0.0], [1.67889491E12, 0.0], [1.67889568E12, 0.0], [1.6788955E12, 0.0], [1.67889516E12, 0.0], [1.67889482E12, 0.0], [1.67889593E12, 0.0], [1.67889575E12, 0.0], [1.67889541E12, 0.0], [1.67889507E12, 0.0], [1.67889473E12, 0.0], [1.67889584E12, 0.0], [1.67889566E12, 0.0], [1.67889532E12, 0.0], [1.67889604E12, 0.0], [1.67889498E12, 0.0], [1.67889527E12, 0.0], [1.67889609E12, 0.0], [1.67889493E12, 0.0], [1.6788957E12, 0.0], [1.67889536E12, 0.0], [1.67889518E12, 0.0], [1.67889484E12, 0.0], [1.67889595E12, 0.0], [1.67889561E12, 0.0], [1.67889543E12, 0.0], [1.67889509E12, 0.0], [1.67889475E12, 0.0], [1.67889586E12, 0.0], [1.67889552E12, 0.0], [1.67889534E12, 0.0], [1.67889602E12, 0.0], [1.678895E12, 0.0], [1.67889577E12, 0.0], [1.67889478E12, 0.0], [1.67889589E12, 0.0], [1.67889555E12, 0.0], [1.67889521E12, 0.0], [1.67889503E12, 0.0], [1.6788958E12, 0.0], [1.67889546E12, 0.0], [1.67889512E12, 0.0], [1.67889607E12, 0.0], [1.67889494E12, 0.0], [1.67889571E12, 0.0], [1.67889537E12, 0.0], [1.67889519E12, 0.0], [1.67889485E12, 0.0], [1.67889596E12, 0.0], [1.67889562E12, 0.0], [1.67889528E12, 0.0], [1.67889591E12, 0.0], [1.67889557E12, 0.0], [1.67889523E12, 0.0], [1.67889489E12, 0.0], [1.678896E12, 0.0], [1.67889582E12, 0.0], [1.67889548E12, 0.0], [1.67889514E12, 0.0], [1.67889605E12, 0.0], [1.6788948E12, 0.0], [1.67889573E12, 0.0], [1.67889539E12, 0.0], [1.67889505E12, 0.0], [1.67889487E12, 0.0], [1.67889598E12, 0.0], [1.67889564E12, 0.0], [1.6788953E12, 0.0], [1.67889496E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67889609E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2700.0, "minX": 1.67889472E12, "maxY": 7828.849999999999, "series": [{"data": [[1.67889542E12, 7032.086956521737], [1.67889508E12, 6889.173913043479], [1.67889474E12, 3149.0], [1.67889585E12, 6693.800000000001], [1.67889567E12, 6815.428571428572], [1.67889533E12, 6969.0], [1.67889603E12, 3790.785714285714], [1.67889499E12, 6606.280000000002], [1.67889576E12, 6893.333333333331], [1.67889558E12, 7215.142857142857], [1.67889524E12, 7079.545454545454], [1.6788949E12, 6611.65], [1.67889583E12, 7040.695652173913], [1.67889549E12, 6974.095238095237], [1.67889515E12, 6683.041666666666], [1.67889481E12, 5451.478260869567], [1.67889592E12, 6797.09090909091], [1.6788951E12, 6693.375], [1.67889476E12, 3931.6000000000004], [1.67889587E12, 6790.208333333333], [1.67889553E12, 6989.681818181818], [1.67889535E12, 7068.0370370370365], [1.67889601E12, 4284.647058823531], [1.67889501E12, 6856.956521739131], [1.67889578E12, 6719.166666666668], [1.67889544E12, 7387.55], [1.67889526E12, 6487.538461538464], [1.67889492E12, 6535.083333333334], [1.67889569E12, 7000.32], [1.67889551E12, 7113.88], [1.67889517E12, 6521.964285714284], [1.67889483E12, 6205.653846153847], [1.67889594E12, 6016.961538461538], [1.6788956E12, 6799.68], [1.67889495E12, 6603.0], [1.67889572E12, 6765.925925925926], [1.67889538E12, 7008.041666666666], [1.67889504E12, 6681.041666666667], [1.67889486E12, 6884.923076923076], [1.67889597E12, 5631.238095238096], [1.67889563E12, 6727.703703703703], [1.67889529E12, 6628.727272727272], [1.67889511E12, 6794.360000000001], [1.67889608E12, 3044.75], [1.67889477E12, 4234.937500000001], [1.67889588E12, 7147.0], [1.67889554E12, 7122.809523809523], [1.6788952E12, 6705.000000000001], [1.67889502E12, 6871.5], [1.67889579E12, 6864.5], [1.67889545E12, 6737.95], [1.67889574E12, 6836.863636363637], [1.6788954E12, 7333.954545454544], [1.67889506E12, 6698.708333333334], [1.67889472E12, 3500.5], [1.67889599E12, 4976.388888888889], [1.67889565E12, 6995.727272727273], [1.67889531E12, 7159.749999999999], [1.67889497E12, 6782.000000000001], [1.67889479E12, 4749.952380952382], [1.6788959E12, 6924.173913043479], [1.67889556E12, 6859.347826086956], [1.67889522E12, 6617.160000000002], [1.67889488E12, 6639.8], [1.67889581E12, 6454.260869565216], [1.67889547E12, 7050.727272727272], [1.67889513E12, 6634.153846153848], [1.67889606E12, 3154.222222222222], [1.67889559E12, 7103.478260869564], [1.67889525E12, 6840.8076923076915], [1.67889491E12, 6561.444444444444], [1.67889568E12, 6804.5999999999985], [1.6788955E12, 7234.4400000000005], [1.67889516E12, 6814.043478260869], [1.67889482E12, 5902.826086956522], [1.67889593E12, 6819.249999999999], [1.67889575E12, 6890.925925925925], [1.67889541E12, 7176.684210526316], [1.67889507E12, 6982.959999999999], [1.67889473E12, 2888.875], [1.67889584E12, 7138.3076923076915], [1.67889566E12, 6857.166666666666], [1.67889532E12, 7068.0], [1.67889604E12, 3607.909090909091], [1.67889498E12, 6986.799999999999], [1.67889527E12, 7391.761904761905], [1.67889493E12, 6567.230769230769], [1.6788957E12, 7019.285714285714], [1.67889536E12, 6963.913043478261], [1.67889518E12, 6536.538461538462], [1.67889484E12, 6914.85], [1.67889595E12, 5680.249999999999], [1.67889561E12, 6723.624999999999], [1.67889543E12, 6963.3703703703695], [1.67889509E12, 6725.449999999999], [1.67889475E12, 3806.3076923076924], [1.67889586E12, 6847.44], [1.67889552E12, 6718.954545454545], [1.67889534E12, 7072.5], [1.67889602E12, 4107.222222222222], [1.678895E12, 6738.40909090909], [1.67889577E12, 6834.304347826086], [1.67889478E12, 4406.045454545454], [1.67889589E12, 6813.150000000001], [1.67889555E12, 7383.875], [1.67889521E12, 6664.923076923077], [1.67889503E12, 7099.590909090909], [1.6788958E12, 6844.4000000000015], [1.67889546E12, 6970.57142857143], [1.67889512E12, 6824.76923076923], [1.67889607E12, 3087.8], [1.67889494E12, 6641.814814814814], [1.67889571E12, 6916.999999999999], [1.67889537E12, 7067.222222222223], [1.67889519E12, 6493.285714285715], [1.67889485E12, 7828.849999999999], [1.67889596E12, 5496.363636363636], [1.67889562E12, 6714.684210526316], [1.67889528E12, 6984.818181818182], [1.67889591E12, 6895.458333333334], [1.67889557E12, 7220.090909090908], [1.67889523E12, 6568.636363636364], [1.67889489E12, 6957.304347826088], [1.678896E12, 4958.111111111111], [1.67889582E12, 6844.454545454546], [1.67889548E12, 6941.136363636364], [1.67889514E12, 6646.78947368421], [1.67889605E12, 3423.0], [1.6788948E12, 5119.045454545454], [1.67889573E12, 6926.136363636365], [1.67889539E12, 7201.84], [1.67889505E12, 6774.166666666667], [1.67889487E12, 6578.25], [1.67889598E12, 5094.863636363635], [1.67889564E12, 6737.115384615385], [1.6788953E12, 7117.166666666668], [1.67889496E12, 6707.46153846154]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[1.67889542E12, 6087.136363636363], [1.67889508E12, 5985.333333333333], [1.67889474E12, 2869.4444444444443], [1.67889585E12, 5926.083333333334], [1.67889567E12, 5937.360000000001], [1.67889533E12, 6093.64], [1.67889603E12, 3363.625], [1.67889499E12, 5772.84], [1.67889576E12, 5996.714285714286], [1.67889558E12, 6330.826086956522], [1.67889524E12, 6307.086956521739], [1.6788949E12, 5720.807692307692], [1.67889583E12, 6188.78947368421], [1.67889549E12, 6045.4400000000005], [1.67889515E12, 5830.307692307692], [1.67889481E12, 4775.08695652174], [1.67889592E12, 5978.78947368421], [1.6788951E12, 5878.384615384615], [1.67889476E12, 3598.933333333333], [1.67889587E12, 5971.954545454547], [1.67889553E12, 6058.76], [1.67889535E12, 6244.450000000001], [1.67889601E12, 3639.0000000000005], [1.67889501E12, 5965.916666666666], [1.67889578E12, 5940.458333333334], [1.67889544E12, 6368.043478260869], [1.67889526E12, 5651.208333333334], [1.67889492E12, 5734.840000000001], [1.67889569E12, 6182.000000000001], [1.67889551E12, 6239.227272727273], [1.67889517E12, 5729.043478260869], [1.67889483E12, 5388.863636363636], [1.67889594E12, 5237.8], [1.6788956E12, 6009.181818181818], [1.67889495E12, 5790.652173913043], [1.67889572E12, 5889.260869565218], [1.67889538E12, 6248.0], [1.67889504E12, 5813.5], [1.67889486E12, 6040.583333333334], [1.67889597E12, 4774.238095238096], [1.67889563E12, 5864.44], [1.67889529E12, 5898.0], [1.67889511E12, 6019.523809523809], [1.67889608E12, 2722.0], [1.67889477E12, 3707.588235294118], [1.67889588E12, 6125.181818181817], [1.67889554E12, 6217.809523809524], [1.6788952E12, 5868.666666666667], [1.67889502E12, 5993.913043478261], [1.67889579E12, 5924.142857142857], [1.67889545E12, 5866.32], [1.67889574E12, 6099.0], [1.6788954E12, 6272.608695652174], [1.67889506E12, 5870.36], [1.67889472E12, 2738.0], [1.67889599E12, 4259.35], [1.67889565E12, 6208.166666666667], [1.67889531E12, 6358.333333333334], [1.67889497E12, 5867.0], [1.67889479E12, 4143.000000000001], [1.6788959E12, 6012.304347826086], [1.67889556E12, 6109.818181818182], [1.67889522E12, 5842.846153846155], [1.67889488E12, 5781.333333333333], [1.67889581E12, 5691.04], [1.67889547E12, 6122.333333333332], [1.67889513E12, 5750.125000000001], [1.67889606E12, 2847.2727272727275], [1.67889559E12, 6177.727272727272], [1.67889525E12, 5878.739130434782], [1.67889491E12, 5663.416666666666], [1.67889568E12, 5898.571428571429], [1.6788955E12, 6232.9047619047615], [1.67889516E12, 5846.636363636363], [1.67889482E12, 5175.478260869565], [1.67889593E12, 5907.875], [1.67889575E12, 5957.423076923076], [1.67889541E12, 6289.461538461539], [1.67889507E12, 6080.8421052631575], [1.67889473E12, 2700.0], [1.67889584E12, 6147.880000000001], [1.67889566E12, 5897.607142857142], [1.67889532E12, 6096.68], [1.67889604E12, 3271.2000000000003], [1.67889498E12, 6175.913043478261], [1.67889527E12, 6218.149999999999], [1.67889609E12, 2824.0], [1.67889493E12, 5752.727272727272], [1.6788957E12, 6113.423076923078], [1.67889536E12, 6000.608695652174], [1.67889518E12, 5734.599999999999], [1.67889484E12, 5868.952380952381], [1.67889595E12, 4943.960000000001], [1.67889561E12, 5816.719999999999], [1.67889543E12, 6045.380952380952], [1.67889509E12, 5820.115384615385], [1.67889475E12, 3218.363636363637], [1.67889586E12, 5950.166666666668], [1.67889552E12, 5936.95652173913], [1.67889534E12, 6167.136363636364], [1.67889602E12, 3697.2000000000003], [1.678895E12, 5994.238095238094], [1.67889577E12, 5941.040000000002], [1.67889478E12, 3899.894736842105], [1.67889589E12, 6024.625000000001], [1.67889555E12, 6470.333333333333], [1.67889521E12, 5712.409090909091], [1.67889503E12, 6128.916666666667], [1.6788958E12, 5911.400000000001], [1.67889546E12, 6033.772727272725], [1.67889512E12, 6013.142857142857], [1.67889607E12, 2824.4285714285716], [1.67889494E12, 5758.12], [1.67889571E12, 6100.454545454545], [1.67889537E12, 6178.7307692307695], [1.67889519E12, 5743.0], [1.67889485E12, 6804.521739130435], [1.67889596E12, 4703.045454545456], [1.67889562E12, 5871.64], [1.67889528E12, 5973.538461538461], [1.67889591E12, 5922.28], [1.67889557E12, 6219.416666666668], [1.67889523E12, 5712.4800000000005], [1.67889489E12, 6014.777777777777], [1.678896E12, 4278.526315789473], [1.67889582E12, 6013.3600000000015], [1.67889548E12, 6072.583333333333], [1.67889514E12, 5849.703703703704], [1.67889605E12, 3084.222222222222], [1.6788948E12, 4458.809523809525], [1.67889573E12, 6004.76], [1.67889539E12, 6330.777777777777], [1.67889505E12, 5976.208333333333], [1.67889487E12, 5785.869565217392], [1.67889598E12, 4351.478260869564], [1.67889564E12, 5815.833333333333], [1.6788953E12, 6222.590909090907], [1.67889496E12, 5779.0370370370365]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67889609E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.67889472E12, "maxY": 4.9E-324, "series": [{"data": [[1.67889542E12, 0.0], [1.67889508E12, 0.0], [1.67889474E12, 0.0], [1.67889585E12, 0.0], [1.67889567E12, 0.0], [1.67889533E12, 0.0], [1.67889603E12, 0.0], [1.67889499E12, 0.0], [1.67889576E12, 0.0], [1.67889558E12, 0.0], [1.67889524E12, 0.0], [1.6788949E12, 0.0], [1.67889583E12, 0.0], [1.67889549E12, 0.0], [1.67889515E12, 0.0], [1.67889481E12, 0.0], [1.67889592E12, 0.0], [1.6788951E12, 0.0], [1.67889476E12, 0.0], [1.67889587E12, 0.0], [1.67889553E12, 0.0], [1.67889535E12, 0.0], [1.67889601E12, 0.0], [1.67889501E12, 0.0], [1.67889578E12, 0.0], [1.67889544E12, 0.0], [1.67889526E12, 0.0], [1.67889492E12, 0.0], [1.67889569E12, 0.0], [1.67889551E12, 0.0], [1.67889517E12, 0.0], [1.67889483E12, 0.0], [1.67889594E12, 0.0], [1.6788956E12, 0.0], [1.67889495E12, 0.0], [1.67889572E12, 0.0], [1.67889538E12, 0.0], [1.67889504E12, 0.0], [1.67889486E12, 0.0], [1.67889597E12, 0.0], [1.67889563E12, 0.0], [1.67889529E12, 0.0], [1.67889511E12, 0.0], [1.67889608E12, 0.0], [1.67889477E12, 0.0], [1.67889588E12, 0.0], [1.67889554E12, 0.0], [1.6788952E12, 0.0], [1.67889502E12, 0.0], [1.67889579E12, 0.0], [1.67889545E12, 0.0], [1.67889574E12, 0.0], [1.6788954E12, 0.0], [1.67889506E12, 0.0], [1.67889472E12, 0.0], [1.67889599E12, 0.0], [1.67889565E12, 0.0], [1.67889531E12, 0.0], [1.67889497E12, 0.0], [1.67889479E12, 0.0], [1.6788959E12, 0.0], [1.67889556E12, 0.0], [1.67889522E12, 0.0], [1.67889488E12, 0.0], [1.67889581E12, 0.0], [1.67889547E12, 0.0], [1.67889513E12, 0.0], [1.67889606E12, 0.0], [1.67889559E12, 0.0], [1.67889525E12, 0.0], [1.67889491E12, 0.0], [1.67889568E12, 0.0], [1.6788955E12, 0.0], [1.67889516E12, 0.0], [1.67889482E12, 0.0], [1.67889593E12, 0.0], [1.67889575E12, 0.0], [1.67889541E12, 0.0], [1.67889507E12, 0.0], [1.67889473E12, 0.0], [1.67889584E12, 0.0], [1.67889566E12, 0.0], [1.67889532E12, 0.0], [1.67889604E12, 0.0], [1.67889498E12, 0.0], [1.67889527E12, 0.0], [1.67889493E12, 0.0], [1.6788957E12, 0.0], [1.67889536E12, 0.0], [1.67889518E12, 0.0], [1.67889484E12, 0.0], [1.67889595E12, 0.0], [1.67889561E12, 0.0], [1.67889543E12, 0.0], [1.67889509E12, 0.0], [1.67889475E12, 0.0], [1.67889586E12, 0.0], [1.67889552E12, 0.0], [1.67889534E12, 0.0], [1.67889602E12, 0.0], [1.678895E12, 0.0], [1.67889577E12, 0.0], [1.67889478E12, 0.0], [1.67889589E12, 0.0], [1.67889555E12, 0.0], [1.67889521E12, 0.0], [1.67889503E12, 0.0], [1.6788958E12, 0.0], [1.67889546E12, 0.0], [1.67889512E12, 0.0], [1.67889607E12, 0.0], [1.67889494E12, 0.0], [1.67889571E12, 0.0], [1.67889537E12, 0.0], [1.67889519E12, 0.0], [1.67889485E12, 0.0], [1.67889596E12, 0.0], [1.67889562E12, 0.0], [1.67889528E12, 0.0], [1.67889591E12, 0.0], [1.67889557E12, 0.0], [1.67889523E12, 0.0], [1.67889489E12, 0.0], [1.678896E12, 0.0], [1.67889582E12, 0.0], [1.67889548E12, 0.0], [1.67889514E12, 0.0], [1.67889605E12, 0.0], [1.6788948E12, 0.0], [1.67889573E12, 0.0], [1.67889539E12, 0.0], [1.67889505E12, 0.0], [1.67889487E12, 0.0], [1.67889598E12, 0.0], [1.67889564E12, 0.0], [1.6788953E12, 0.0], [1.67889496E12, 0.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[1.67889542E12, 0.0], [1.67889508E12, 0.0], [1.67889474E12, 0.0], [1.67889585E12, 0.0], [1.67889567E12, 0.0], [1.67889533E12, 0.0], [1.67889603E12, 0.0], [1.67889499E12, 0.0], [1.67889576E12, 0.0], [1.67889558E12, 0.0], [1.67889524E12, 0.0], [1.6788949E12, 0.0], [1.67889583E12, 0.0], [1.67889549E12, 0.0], [1.67889515E12, 0.0], [1.67889481E12, 0.0], [1.67889592E12, 0.0], [1.6788951E12, 0.0], [1.67889476E12, 0.0], [1.67889587E12, 0.0], [1.67889553E12, 0.0], [1.67889535E12, 0.0], [1.67889601E12, 0.0], [1.67889501E12, 0.0], [1.67889578E12, 0.0], [1.67889544E12, 0.0], [1.67889526E12, 0.0], [1.67889492E12, 0.0], [1.67889569E12, 0.0], [1.67889551E12, 0.0], [1.67889517E12, 0.0], [1.67889483E12, 0.0], [1.67889594E12, 0.0], [1.6788956E12, 0.0], [1.67889495E12, 0.0], [1.67889572E12, 0.0], [1.67889538E12, 0.0], [1.67889504E12, 0.0], [1.67889486E12, 0.0], [1.67889597E12, 0.0], [1.67889563E12, 0.0], [1.67889529E12, 0.0], [1.67889511E12, 0.0], [1.67889608E12, 0.0], [1.67889477E12, 0.0], [1.67889588E12, 0.0], [1.67889554E12, 0.0], [1.6788952E12, 0.0], [1.67889502E12, 0.0], [1.67889579E12, 0.0], [1.67889545E12, 0.0], [1.67889574E12, 0.0], [1.6788954E12, 0.0], [1.67889506E12, 0.0], [1.67889472E12, 0.0], [1.67889599E12, 0.0], [1.67889565E12, 0.0], [1.67889531E12, 0.0], [1.67889497E12, 0.0], [1.67889479E12, 0.0], [1.6788959E12, 0.0], [1.67889556E12, 0.0], [1.67889522E12, 0.0], [1.67889488E12, 0.0], [1.67889581E12, 0.0], [1.67889547E12, 0.0], [1.67889513E12, 0.0], [1.67889606E12, 0.0], [1.67889559E12, 0.0], [1.67889525E12, 0.0], [1.67889491E12, 0.0], [1.67889568E12, 0.0], [1.6788955E12, 0.0], [1.67889516E12, 0.0], [1.67889482E12, 0.0], [1.67889593E12, 0.0], [1.67889575E12, 0.0], [1.67889541E12, 0.0], [1.67889507E12, 0.0], [1.67889473E12, 0.0], [1.67889584E12, 0.0], [1.67889566E12, 0.0], [1.67889532E12, 0.0], [1.67889604E12, 0.0], [1.67889498E12, 0.0], [1.67889527E12, 0.0], [1.67889609E12, 0.0], [1.67889493E12, 0.0], [1.6788957E12, 0.0], [1.67889536E12, 0.0], [1.67889518E12, 0.0], [1.67889484E12, 0.0], [1.67889595E12, 0.0], [1.67889561E12, 0.0], [1.67889543E12, 0.0], [1.67889509E12, 0.0], [1.67889475E12, 0.0], [1.67889586E12, 0.0], [1.67889552E12, 0.0], [1.67889534E12, 0.0], [1.67889602E12, 0.0], [1.678895E12, 0.0], [1.67889577E12, 0.0], [1.67889478E12, 0.0], [1.67889589E12, 0.0], [1.67889555E12, 0.0], [1.67889521E12, 0.0], [1.67889503E12, 0.0], [1.6788958E12, 0.0], [1.67889546E12, 0.0], [1.67889512E12, 0.0], [1.67889607E12, 0.0], [1.67889494E12, 0.0], [1.67889571E12, 0.0], [1.67889537E12, 0.0], [1.67889519E12, 0.0], [1.67889485E12, 0.0], [1.67889596E12, 0.0], [1.67889562E12, 0.0], [1.67889528E12, 0.0], [1.67889591E12, 0.0], [1.67889557E12, 0.0], [1.67889523E12, 0.0], [1.67889489E12, 0.0], [1.678896E12, 0.0], [1.67889582E12, 0.0], [1.67889548E12, 0.0], [1.67889514E12, 0.0], [1.67889605E12, 0.0], [1.6788948E12, 0.0], [1.67889573E12, 0.0], [1.67889539E12, 0.0], [1.67889505E12, 0.0], [1.67889487E12, 0.0], [1.67889598E12, 0.0], [1.67889564E12, 0.0], [1.6788953E12, 0.0], [1.67889496E12, 0.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67889609E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.67889472E12, "maxY": 4.9E-324, "series": [{"data": [[1.67889542E12, 0.0], [1.67889508E12, 0.0], [1.67889474E12, 0.0], [1.67889585E12, 0.0], [1.67889567E12, 0.0], [1.67889533E12, 0.0], [1.67889603E12, 0.0], [1.67889499E12, 0.0], [1.67889576E12, 0.0], [1.67889558E12, 0.0], [1.67889524E12, 0.0], [1.6788949E12, 0.0], [1.67889583E12, 0.0], [1.67889549E12, 0.0], [1.67889515E12, 0.0], [1.67889481E12, 0.0], [1.67889592E12, 0.0], [1.6788951E12, 0.0], [1.67889476E12, 0.0], [1.67889587E12, 0.0], [1.67889553E12, 0.0], [1.67889535E12, 0.0], [1.67889601E12, 0.0], [1.67889501E12, 0.0], [1.67889578E12, 0.0], [1.67889544E12, 0.0], [1.67889526E12, 0.0], [1.67889492E12, 0.0], [1.67889569E12, 0.0], [1.67889551E12, 0.0], [1.67889517E12, 0.0], [1.67889483E12, 0.0], [1.67889594E12, 0.0], [1.6788956E12, 0.0], [1.67889495E12, 0.0], [1.67889572E12, 0.0], [1.67889538E12, 0.0], [1.67889504E12, 0.0], [1.67889486E12, 0.0], [1.67889597E12, 0.0], [1.67889563E12, 0.0], [1.67889529E12, 0.0], [1.67889511E12, 0.0], [1.67889608E12, 0.0], [1.67889477E12, 0.0], [1.67889588E12, 0.0], [1.67889554E12, 0.0], [1.6788952E12, 0.0], [1.67889502E12, 0.0], [1.67889579E12, 0.0], [1.67889545E12, 0.0], [1.67889574E12, 0.0], [1.6788954E12, 0.0], [1.67889506E12, 0.0], [1.67889472E12, 0.0], [1.67889599E12, 0.0], [1.67889565E12, 0.0], [1.67889531E12, 0.0], [1.67889497E12, 0.0], [1.67889479E12, 0.0], [1.6788959E12, 0.0], [1.67889556E12, 0.0], [1.67889522E12, 0.0], [1.67889488E12, 0.0], [1.67889581E12, 0.0], [1.67889547E12, 0.0], [1.67889513E12, 0.0], [1.67889606E12, 0.0], [1.67889559E12, 0.0], [1.67889525E12, 0.0], [1.67889491E12, 0.0], [1.67889568E12, 0.0], [1.6788955E12, 0.0], [1.67889516E12, 0.0], [1.67889482E12, 0.0], [1.67889593E12, 0.0], [1.67889575E12, 0.0], [1.67889541E12, 0.0], [1.67889507E12, 0.0], [1.67889473E12, 0.0], [1.67889584E12, 0.0], [1.67889566E12, 0.0], [1.67889532E12, 0.0], [1.67889604E12, 0.0], [1.67889498E12, 0.0], [1.67889527E12, 0.0], [1.67889493E12, 0.0], [1.6788957E12, 0.0], [1.67889536E12, 0.0], [1.67889518E12, 0.0], [1.67889484E12, 0.0], [1.67889595E12, 0.0], [1.67889561E12, 0.0], [1.67889543E12, 0.0], [1.67889509E12, 0.0], [1.67889475E12, 0.0], [1.67889586E12, 0.0], [1.67889552E12, 0.0], [1.67889534E12, 0.0], [1.67889602E12, 0.0], [1.678895E12, 0.0], [1.67889577E12, 0.0], [1.67889478E12, 0.0], [1.67889589E12, 0.0], [1.67889555E12, 0.0], [1.67889521E12, 0.0], [1.67889503E12, 0.0], [1.6788958E12, 0.0], [1.67889546E12, 0.0], [1.67889512E12, 0.0], [1.67889607E12, 0.0], [1.67889494E12, 0.0], [1.67889571E12, 0.0], [1.67889537E12, 0.0], [1.67889519E12, 0.0], [1.67889485E12, 0.0], [1.67889596E12, 0.0], [1.67889562E12, 0.0], [1.67889528E12, 0.0], [1.67889591E12, 0.0], [1.67889557E12, 0.0], [1.67889523E12, 0.0], [1.67889489E12, 0.0], [1.678896E12, 0.0], [1.67889582E12, 0.0], [1.67889548E12, 0.0], [1.67889514E12, 0.0], [1.67889605E12, 0.0], [1.6788948E12, 0.0], [1.67889573E12, 0.0], [1.67889539E12, 0.0], [1.67889505E12, 0.0], [1.67889487E12, 0.0], [1.67889598E12, 0.0], [1.67889564E12, 0.0], [1.6788953E12, 0.0], [1.67889496E12, 0.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[1.67889542E12, 0.0], [1.67889508E12, 0.0], [1.67889474E12, 0.0], [1.67889585E12, 0.0], [1.67889567E12, 0.0], [1.67889533E12, 0.0], [1.67889603E12, 0.0], [1.67889499E12, 0.0], [1.67889576E12, 0.0], [1.67889558E12, 0.0], [1.67889524E12, 0.0], [1.6788949E12, 0.0], [1.67889583E12, 0.0], [1.67889549E12, 0.0], [1.67889515E12, 0.0], [1.67889481E12, 0.0], [1.67889592E12, 0.0], [1.6788951E12, 0.0], [1.67889476E12, 0.0], [1.67889587E12, 0.0], [1.67889553E12, 0.0], [1.67889535E12, 0.0], [1.67889601E12, 0.0], [1.67889501E12, 0.0], [1.67889578E12, 0.0], [1.67889544E12, 0.0], [1.67889526E12, 0.0], [1.67889492E12, 0.0], [1.67889569E12, 0.0], [1.67889551E12, 0.0], [1.67889517E12, 0.0], [1.67889483E12, 0.0], [1.67889594E12, 0.0], [1.6788956E12, 0.0], [1.67889495E12, 0.0], [1.67889572E12, 0.0], [1.67889538E12, 0.0], [1.67889504E12, 0.0], [1.67889486E12, 0.0], [1.67889597E12, 0.0], [1.67889563E12, 0.0], [1.67889529E12, 0.0], [1.67889511E12, 0.0], [1.67889608E12, 0.0], [1.67889477E12, 0.0], [1.67889588E12, 0.0], [1.67889554E12, 0.0], [1.6788952E12, 0.0], [1.67889502E12, 0.0], [1.67889579E12, 0.0], [1.67889545E12, 0.0], [1.67889574E12, 0.0], [1.6788954E12, 0.0], [1.67889506E12, 0.0], [1.67889472E12, 0.0], [1.67889599E12, 0.0], [1.67889565E12, 0.0], [1.67889531E12, 0.0], [1.67889497E12, 0.0], [1.67889479E12, 0.0], [1.6788959E12, 0.0], [1.67889556E12, 0.0], [1.67889522E12, 0.0], [1.67889488E12, 0.0], [1.67889581E12, 0.0], [1.67889547E12, 0.0], [1.67889513E12, 0.0], [1.67889606E12, 0.0], [1.67889559E12, 0.0], [1.67889525E12, 0.0], [1.67889491E12, 0.0], [1.67889568E12, 0.0], [1.6788955E12, 0.0], [1.67889516E12, 0.0], [1.67889482E12, 0.0], [1.67889593E12, 0.0], [1.67889575E12, 0.0], [1.67889541E12, 0.0], [1.67889507E12, 0.0], [1.67889473E12, 0.0], [1.67889584E12, 0.0], [1.67889566E12, 0.0], [1.67889532E12, 0.0], [1.67889604E12, 0.0], [1.67889498E12, 0.0], [1.67889527E12, 0.0], [1.67889609E12, 0.0], [1.67889493E12, 0.0], [1.6788957E12, 0.0], [1.67889536E12, 0.0], [1.67889518E12, 0.0], [1.67889484E12, 0.0], [1.67889595E12, 0.0], [1.67889561E12, 0.0], [1.67889543E12, 0.0], [1.67889509E12, 0.0], [1.67889475E12, 0.0], [1.67889586E12, 0.0], [1.67889552E12, 0.0], [1.67889534E12, 0.0], [1.67889602E12, 0.0], [1.678895E12, 0.0], [1.67889577E12, 0.0], [1.67889478E12, 0.0], [1.67889589E12, 0.0], [1.67889555E12, 0.0], [1.67889521E12, 0.0], [1.67889503E12, 0.0], [1.6788958E12, 0.0], [1.67889546E12, 0.0], [1.67889512E12, 0.0], [1.67889607E12, 0.0], [1.67889494E12, 0.0], [1.67889571E12, 0.0], [1.67889537E12, 0.0], [1.67889519E12, 0.0], [1.67889485E12, 0.0], [1.67889596E12, 0.0], [1.67889562E12, 0.0], [1.67889528E12, 0.0], [1.67889591E12, 0.0], [1.67889557E12, 0.0], [1.67889523E12, 0.0], [1.67889489E12, 0.0], [1.678896E12, 0.0], [1.67889582E12, 0.0], [1.67889548E12, 0.0], [1.67889514E12, 0.0], [1.67889605E12, 0.0], [1.6788948E12, 0.0], [1.67889573E12, 0.0], [1.67889539E12, 0.0], [1.67889505E12, 0.0], [1.67889487E12, 0.0], [1.67889598E12, 0.0], [1.67889564E12, 0.0], [1.6788953E12, 0.0], [1.67889496E12, 0.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67889609E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2498.0, "minX": 1.67889472E12, "maxY": 8844.0, "series": [{"data": [[1.67889542E12, 7395.0], [1.67889508E12, 7316.0], [1.67889474E12, 3459.0], [1.67889585E12, 7191.0], [1.67889567E12, 7315.0], [1.67889533E12, 7555.0], [1.67889603E12, 4090.0], [1.67889499E12, 7475.0], [1.67889576E12, 7382.0], [1.67889558E12, 7799.0], [1.67889524E12, 7581.0], [1.6788949E12, 7007.0], [1.67889583E12, 7516.0], [1.67889549E12, 7383.0], [1.67889515E12, 7120.0], [1.67889481E12, 5919.0], [1.67889592E12, 7230.0], [1.6788951E12, 7143.0], [1.67889476E12, 4262.0], [1.67889587E12, 7352.0], [1.67889553E12, 7409.0], [1.67889535E12, 7691.0], [1.67889601E12, 4772.0], [1.67889501E12, 7503.0], [1.67889578E12, 7126.0], [1.67889544E12, 7905.0], [1.67889526E12, 6858.0], [1.67889492E12, 6990.0], [1.67889569E12, 7459.0], [1.67889551E12, 7708.0], [1.67889517E12, 6891.0], [1.67889483E12, 6726.0], [1.67889594E12, 6775.0], [1.6788956E12, 7446.0], [1.67889495E12, 7201.0], [1.67889572E12, 7153.0], [1.67889538E12, 7818.0], [1.67889504E12, 7108.0], [1.67889486E12, 7530.0], [1.67889597E12, 5942.0], [1.67889563E12, 7140.0], [1.67889529E12, 7519.0], [1.67889511E12, 7572.0], [1.67889608E12, 3100.0], [1.67889477E12, 4746.0], [1.67889588E12, 7571.0], [1.67889554E12, 7690.0], [1.6788952E12, 7076.0], [1.67889502E12, 7419.0], [1.67889579E12, 7240.0], [1.67889545E12, 7433.0], [1.67889574E12, 7272.0], [1.6788954E12, 7907.0], [1.67889506E12, 7335.0], [1.67889472E12, 4157.0], [1.67889599E12, 5294.0], [1.67889565E12, 7449.0], [1.67889531E12, 7638.0], [1.67889497E12, 7281.0], [1.67889479E12, 5140.0], [1.6788959E12, 7422.0], [1.67889556E12, 7777.0], [1.67889522E12, 7185.0], [1.67889488E12, 7071.0], [1.67889581E12, 6886.0], [1.67889547E12, 7570.0], [1.67889513E12, 6982.0], [1.67889606E12, 3188.0], [1.67889559E12, 7626.0], [1.67889525E12, 7466.0], [1.67889491E12, 6959.0], [1.67889568E12, 7427.0], [1.6788955E12, 7662.0], [1.67889516E12, 7230.0], [1.67889482E12, 6391.0], [1.67889593E12, 7182.0], [1.67889575E12, 7248.0], [1.67889541E12, 7716.0], [1.67889507E12, 7577.0], [1.67889473E12, 3196.0], [1.67889584E12, 7782.0], [1.67889566E12, 7247.0], [1.67889532E12, 7420.0], [1.67889604E12, 3756.0], [1.67889498E12, 7668.0], [1.67889527E12, 8194.0], [1.67889609E12, 2824.0], [1.67889493E12, 6970.0], [1.6788957E12, 7393.0], [1.67889536E12, 7423.0], [1.67889518E12, 6924.0], [1.67889484E12, 8375.0], [1.67889595E12, 6080.0], [1.67889561E12, 7095.0], [1.67889543E12, 7367.0], [1.67889509E12, 6971.0], [1.67889475E12, 4662.0], [1.67889586E12, 7179.0], [1.67889552E12, 7314.0], [1.67889534E12, 7563.0], [1.67889602E12, 4412.0], [1.678895E12, 7457.0], [1.67889577E12, 7284.0], [1.67889478E12, 4872.0], [1.67889589E12, 7437.0], [1.67889555E12, 8011.0], [1.67889521E12, 7193.0], [1.67889503E12, 7540.0], [1.6788958E12, 7408.0], [1.67889546E12, 7356.0], [1.67889512E12, 7531.0], [1.67889607E12, 3164.0], [1.67889494E12, 7118.0], [1.67889571E12, 7337.0], [1.67889537E12, 7568.0], [1.67889519E12, 6906.0], [1.67889485E12, 8844.0], [1.67889596E12, 5856.0], [1.67889562E12, 7129.0], [1.67889528E12, 8098.0], [1.67889591E12, 7380.0], [1.67889557E12, 7615.0], [1.67889523E12, 7075.0], [1.67889489E12, 7374.0], [1.678896E12, 5182.0], [1.67889582E12, 7413.0], [1.67889548E12, 7420.0], [1.67889514E12, 7058.0], [1.67889605E12, 3678.0], [1.6788948E12, 5524.0], [1.67889573E12, 7323.0], [1.67889539E12, 7852.0], [1.67889505E12, 7403.0], [1.67889487E12, 7162.0], [1.67889598E12, 5512.0], [1.67889564E12, 7266.0], [1.6788953E12, 7662.0], [1.67889496E12, 7252.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.67889542E12, 7335.8], [1.67889508E12, 7233.8], [1.67889474E12, 3374.0], [1.67889585E12, 7086.0], [1.67889567E12, 7177.1], [1.67889533E12, 7355.6], [1.67889603E12, 3896.5], [1.67889499E12, 6942.3], [1.67889576E12, 7285.0], [1.67889558E12, 7640.5], [1.67889524E12, 7543.0], [1.6788949E12, 6879.0], [1.67889583E12, 7372.3], [1.67889549E12, 7287.5], [1.67889515E12, 7050.5], [1.67889481E12, 5850.400000000001], [1.67889592E12, 7125.0], [1.6788951E12, 7057.8], [1.67889476E12, 4229.2], [1.67889587E12, 7163.1], [1.67889553E12, 7327.8], [1.67889535E12, 7438.400000000001], [1.67889601E12, 4381.200000000001], [1.67889501E12, 7259.0], [1.67889578E12, 7040.5], [1.67889544E12, 7841.8], [1.67889526E12, 6798.5], [1.67889492E12, 6851.0], [1.67889569E12, 7328.4], [1.67889551E12, 7570.400000000001], [1.67889517E12, 6837.8], [1.67889483E12, 6502.9], [1.67889594E12, 6364.8], [1.6788956E12, 7190.400000000001], [1.67889495E12, 6948.5], [1.67889572E12, 7076.2], [1.67889538E12, 7373.800000000001], [1.67889504E12, 6943.7], [1.67889486E12, 7360.0], [1.67889597E12, 5925.0], [1.67889563E12, 7069.7], [1.67889529E12, 7302.5], [1.67889511E12, 7125.8], [1.67889608E12, 3100.0], [1.67889477E12, 4599.2], [1.67889588E12, 7526.8], [1.67889554E12, 7536.3], [1.6788952E12, 6986.2], [1.67889502E12, 7335.4], [1.67889579E12, 7166.0], [1.67889545E12, 7142.6], [1.67889574E12, 7157.400000000001], [1.6788954E12, 7747.2], [1.67889506E12, 7188.0], [1.67889472E12, 4157.0], [1.67889599E12, 5199.8], [1.67889565E12, 7388.5], [1.67889531E12, 7507.6], [1.67889497E12, 7144.8], [1.67889479E12, 5042.0], [1.6788959E12, 7272.400000000001], [1.67889556E12, 7625.0], [1.67889522E12, 7030.000000000001], [1.67889488E12, 6913.3], [1.67889581E12, 6787.4], [1.67889547E12, 7356.6], [1.67889513E12, 6933.9], [1.67889606E12, 3182.8], [1.67889559E12, 7520.0], [1.67889525E12, 7240.0], [1.67889491E12, 6840.8], [1.67889568E12, 7070.2], [1.6788955E12, 7617.3], [1.67889516E12, 7142.6], [1.67889482E12, 6240.900000000001], [1.67889593E12, 7099.5], [1.67889575E12, 7148.6], [1.67889541E12, 7567.8], [1.67889507E12, 7390.5], [1.67889473E12, 3147.5], [1.67889584E12, 7515.6], [1.67889566E12, 7189.1], [1.67889532E12, 7355.0], [1.67889604E12, 3717.4], [1.67889498E12, 7442.8], [1.67889527E12, 8011.600000000001], [1.67889609E12, 2824.0], [1.67889493E12, 6878.8], [1.6788957E12, 7320.0], [1.67889536E12, 7282.6], [1.67889518E12, 6833.0], [1.67889484E12, 7391.600000000001], [1.67889595E12, 5928.8], [1.67889561E12, 7027.0], [1.67889543E12, 7303.7], [1.67889509E12, 6938.5], [1.67889475E12, 4493.5], [1.67889586E12, 7122.0], [1.67889552E12, 7063.6], [1.67889534E12, 7437.5], [1.67889602E12, 4225.2], [1.678895E12, 7140.2], [1.67889577E12, 7154.0], [1.67889478E12, 4815.400000000001], [1.67889589E12, 7190.0], [1.67889555E12, 7790.799999999999], [1.67889521E12, 6957.3], [1.67889503E12, 7419.400000000001], [1.6788958E12, 7161.6], [1.67889546E12, 7297.8], [1.67889512E12, 7294.400000000001], [1.67889607E12, 3149.9], [1.67889494E12, 6988.4], [1.67889571E12, 7287.9], [1.67889537E12, 7427.0], [1.67889519E12, 6784.3], [1.67889485E12, 8595.6], [1.67889596E12, 5752.5], [1.67889562E12, 7090.0], [1.67889528E12, 7592.5], [1.67889591E12, 7304.0], [1.67889557E12, 7554.3], [1.67889523E12, 6860.6], [1.67889489E12, 7326.3], [1.678896E12, 5124.4], [1.67889582E12, 7206.400000000001], [1.67889548E12, 7262.0], [1.67889514E12, 6924.7], [1.67889605E12, 3663.4], [1.6788948E12, 5430.0], [1.67889573E12, 7290.8], [1.67889539E12, 7634.0], [1.67889505E12, 7220.1], [1.67889487E12, 7047.4], [1.67889598E12, 5279.8], [1.67889564E12, 7140.2], [1.6788953E12, 7543.3], [1.67889496E12, 7019.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.67889542E12, 7395.0], [1.67889508E12, 7316.0], [1.67889474E12, 3459.0], [1.67889585E12, 7191.0], [1.67889567E12, 7315.0], [1.67889533E12, 7555.0], [1.67889603E12, 4090.0], [1.67889499E12, 7475.0], [1.67889576E12, 7382.0], [1.67889558E12, 7799.0], [1.67889524E12, 7581.0], [1.6788949E12, 7007.0], [1.67889583E12, 7516.0], [1.67889549E12, 7383.0], [1.67889515E12, 7120.0], [1.67889481E12, 5919.0], [1.67889592E12, 7230.0], [1.6788951E12, 7143.0], [1.67889476E12, 4262.0], [1.67889587E12, 7352.0], [1.67889553E12, 7409.0], [1.67889535E12, 7691.0], [1.67889601E12, 4772.0], [1.67889501E12, 7503.0], [1.67889578E12, 7126.0], [1.67889544E12, 7905.0], [1.67889526E12, 6858.0], [1.67889492E12, 6990.0], [1.67889569E12, 7459.0], [1.67889551E12, 7708.0], [1.67889517E12, 6891.0], [1.67889483E12, 6726.0], [1.67889594E12, 6775.0], [1.6788956E12, 7446.0], [1.67889495E12, 7201.0], [1.67889572E12, 7153.0], [1.67889538E12, 7818.0], [1.67889504E12, 7108.0], [1.67889486E12, 7530.0], [1.67889597E12, 5942.0], [1.67889563E12, 7140.0], [1.67889529E12, 7519.0], [1.67889511E12, 7572.0], [1.67889608E12, 3100.0], [1.67889477E12, 4746.0], [1.67889588E12, 7571.0], [1.67889554E12, 7690.0], [1.6788952E12, 7076.0], [1.67889502E12, 7419.0], [1.67889579E12, 7240.0], [1.67889545E12, 7433.0], [1.67889574E12, 7272.0], [1.6788954E12, 7907.0], [1.67889506E12, 7335.0], [1.67889472E12, 4157.0], [1.67889599E12, 5294.0], [1.67889565E12, 7449.0], [1.67889531E12, 7638.0], [1.67889497E12, 7281.0], [1.67889479E12, 5140.0], [1.6788959E12, 7422.0], [1.67889556E12, 7777.0], [1.67889522E12, 7185.0], [1.67889488E12, 7071.0], [1.67889581E12, 6886.0], [1.67889547E12, 7570.0], [1.67889513E12, 6982.0], [1.67889606E12, 3188.0], [1.67889559E12, 7626.0], [1.67889525E12, 7466.0], [1.67889491E12, 6959.0], [1.67889568E12, 7427.0], [1.6788955E12, 7662.0], [1.67889516E12, 7230.0], [1.67889482E12, 6391.0], [1.67889593E12, 7182.0], [1.67889575E12, 7248.0], [1.67889541E12, 7716.0], [1.67889507E12, 7577.0], [1.67889473E12, 3196.0], [1.67889584E12, 7782.0], [1.67889566E12, 7247.0], [1.67889532E12, 7420.0], [1.67889604E12, 3756.0], [1.67889498E12, 7668.0], [1.67889527E12, 8194.0], [1.67889609E12, 2824.0], [1.67889493E12, 6970.0], [1.6788957E12, 7393.0], [1.67889536E12, 7423.0], [1.67889518E12, 6924.0], [1.67889484E12, 8375.0], [1.67889595E12, 6080.0], [1.67889561E12, 7095.0], [1.67889543E12, 7367.0], [1.67889509E12, 6971.0], [1.67889475E12, 4662.0], [1.67889586E12, 7179.0], [1.67889552E12, 7314.0], [1.67889534E12, 7563.0], [1.67889602E12, 4412.0], [1.678895E12, 7457.0], [1.67889577E12, 7284.0], [1.67889478E12, 4872.0], [1.67889589E12, 7437.0], [1.67889555E12, 8011.0], [1.67889521E12, 7193.0], [1.67889503E12, 7540.0], [1.6788958E12, 7408.0], [1.67889546E12, 7356.0], [1.67889512E12, 7531.0], [1.67889607E12, 3164.0], [1.67889494E12, 7118.0], [1.67889571E12, 7337.0], [1.67889537E12, 7568.0], [1.67889519E12, 6906.0], [1.67889485E12, 8844.0], [1.67889596E12, 5856.0], [1.67889562E12, 7129.0], [1.67889528E12, 8098.0], [1.67889591E12, 7380.0], [1.67889557E12, 7615.0], [1.67889523E12, 7075.0], [1.67889489E12, 7374.0], [1.678896E12, 5182.0], [1.67889582E12, 7413.0], [1.67889548E12, 7420.0], [1.67889514E12, 7058.0], [1.67889605E12, 3678.0], [1.6788948E12, 5524.0], [1.67889573E12, 7323.0], [1.67889539E12, 7852.0], [1.67889505E12, 7403.0], [1.67889487E12, 7162.0], [1.67889598E12, 5512.0], [1.67889564E12, 7266.0], [1.6788953E12, 7662.0], [1.67889496E12, 7252.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.67889542E12, 7376.5], [1.67889508E12, 7291.2], [1.67889474E12, 3459.0], [1.67889585E12, 7115.75], [1.67889567E12, 7240.4], [1.67889533E12, 7440.2], [1.67889603E12, 4023.45], [1.67889499E12, 7220.999999999999], [1.67889576E12, 7341.35], [1.67889558E12, 7665.0], [1.67889524E12, 7550.0], [1.6788949E12, 6952.2], [1.67889583E12, 7417.45], [1.67889549E12, 7359.6], [1.67889515E12, 7107.05], [1.67889481E12, 5916.25], [1.67889592E12, 7201.2], [1.6788951E12, 7101.5], [1.67889476E12, 4251.0], [1.67889587E12, 7302.349999999999], [1.67889553E12, 7393.8], [1.67889535E12, 7665.2], [1.67889601E12, 4720.15], [1.67889501E12, 7415.4], [1.67889578E12, 7066.5], [1.67889544E12, 7891.2], [1.67889526E12, 6837.45], [1.67889492E12, 6931.0], [1.67889569E12, 7386.55], [1.67889551E12, 7645.599999999999], [1.67889517E12, 6869.2], [1.67889483E12, 6551.599999999999], [1.67889594E12, 6518.0], [1.6788956E12, 7362.199999999999], [1.67889495E12, 7051.25], [1.67889572E12, 7112.4], [1.67889538E12, 7727.849999999999], [1.67889504E12, 7006.8], [1.67889486E12, 7471.05], [1.67889597E12, 5932.0], [1.67889563E12, 7110.85], [1.67889529E12, 7445.75], [1.67889511E12, 7348.2], [1.67889608E12, 3100.0], [1.67889477E12, 4708.9], [1.67889588E12, 7545.45], [1.67889554E12, 7599.9], [1.6788952E12, 7043.0], [1.67889502E12, 7379.2], [1.67889579E12, 7193.7], [1.67889545E12, 7324.499999999999], [1.67889574E12, 7230.75], [1.6788954E12, 7862.9], [1.67889506E12, 7261.5], [1.67889472E12, 4157.0], [1.67889599E12, 5214.2], [1.67889565E12, 7426.55], [1.67889531E12, 7563.1], [1.67889497E12, 7215.5], [1.67889479E12, 5074.0], [1.6788959E12, 7370.6], [1.67889556E12, 7717.9], [1.67889522E12, 7086.0], [1.67889488E12, 6969.95], [1.67889581E12, 6830.1], [1.67889547E12, 7522.4], [1.67889513E12, 6956.849999999999], [1.67889606E12, 3187.75], [1.67889559E12, 7584.799999999999], [1.67889525E12, 7447.0], [1.67889491E12, 6872.8], [1.67889568E12, 7357.25], [1.6788955E12, 7635.65], [1.67889516E12, 7182.9], [1.67889482E12, 6339.0], [1.67889593E12, 7135.7], [1.67889575E12, 7208.4], [1.67889541E12, 7687.5], [1.67889507E12, 7468.25], [1.67889473E12, 3196.0], [1.67889584E12, 7617.8], [1.67889566E12, 7234.25], [1.67889532E12, 7396.099999999999], [1.67889604E12, 3746.9], [1.67889498E12, 7541.7], [1.67889527E12, 8110.0], [1.67889609E12, 2824.0], [1.67889493E12, 6934.3], [1.6788957E12, 7366.2], [1.67889536E12, 7398.5], [1.67889518E12, 6860.4], [1.67889484E12, 8027.2], [1.67889595E12, 6014.2], [1.67889561E12, 7051.5], [1.67889543E12, 7337.2], [1.67889509E12, 6965.15], [1.67889475E12, 4657.75], [1.67889586E12, 7177.0], [1.67889552E12, 7243.399999999999], [1.67889534E12, 7485.5], [1.67889602E12, 4388.2], [1.678895E12, 7351.2], [1.67889577E12, 7194.349999999999], [1.67889478E12, 4849.0], [1.67889589E12, 7341.5], [1.67889555E12, 7981.8], [1.67889521E12, 7096.9], [1.67889503E12, 7491.95], [1.6788958E12, 7291.549999999999], [1.67889546E12, 7306.45], [1.67889512E12, 7460.2], [1.67889607E12, 3164.0], [1.67889494E12, 7100.75], [1.67889571E12, 7331.5], [1.67889537E12, 7500.25], [1.67889519E12, 6872.1], [1.67889485E12, 8781.199999999999], [1.67889596E12, 5821.0], [1.67889562E12, 7111.25], [1.67889528E12, 7868.9], [1.67889591E12, 7339.0], [1.67889557E12, 7598.9], [1.67889523E12, 6955.0], [1.67889489E12, 7365.75], [1.678896E12, 5158.6], [1.67889582E12, 7348.799999999999], [1.67889548E12, 7360.9], [1.67889514E12, 7003.6], [1.67889605E12, 3677.1], [1.6788948E12, 5469.0], [1.67889573E12, 7313.8], [1.67889539E12, 7759.0], [1.67889505E12, 7331.85], [1.67889487E12, 7112.2], [1.67889598E12, 5430.499999999999], [1.67889564E12, 7187.8], [1.6788953E12, 7608.4], [1.67889496E12, 7108.8]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.67889542E12, 5712.0], [1.67889508E12, 5566.0], [1.67889474E12, 2661.0], [1.67889585E12, 5498.0], [1.67889567E12, 5552.0], [1.67889533E12, 5635.0], [1.67889603E12, 3059.0], [1.67889499E12, 5312.0], [1.67889576E12, 5578.0], [1.67889558E12, 5906.0], [1.67889524E12, 5641.0], [1.6788949E12, 5297.0], [1.67889583E12, 5738.0], [1.67889549E12, 5622.0], [1.67889515E12, 5372.0], [1.67889481E12, 4395.0], [1.67889592E12, 5506.0], [1.6788951E12, 5502.0], [1.67889476E12, 3210.0], [1.67889587E12, 5439.0], [1.67889553E12, 5561.0], [1.67889535E12, 5621.0], [1.67889601E12, 3288.0], [1.67889501E12, 5483.0], [1.67889578E12, 5462.0], [1.67889544E12, 5703.0], [1.67889526E12, 5250.0], [1.67889492E12, 5389.0], [1.67889569E12, 5658.0], [1.67889551E12, 5645.0], [1.67889517E12, 5312.0], [1.67889483E12, 5112.0], [1.67889594E12, 4820.0], [1.6788956E12, 5537.0], [1.67889495E12, 5378.0], [1.67889572E12, 5473.0], [1.67889538E12, 5484.0], [1.67889504E12, 5433.0], [1.67889486E12, 5344.0], [1.67889597E12, 4331.0], [1.67889563E12, 5399.0], [1.67889529E12, 5263.0], [1.67889511E12, 5559.0], [1.67889608E12, 2699.0], [1.67889477E12, 3237.0], [1.67889588E12, 5751.0], [1.67889554E12, 5703.0], [1.6788952E12, 5343.0], [1.67889502E12, 5450.0], [1.67889579E12, 5521.0], [1.67889545E12, 5456.0], [1.67889574E12, 5654.0], [1.6788954E12, 5680.0], [1.67889506E12, 5293.0], [1.67889472E12, 2738.0], [1.67889599E12, 3720.0], [1.67889565E12, 5726.0], [1.67889531E12, 5794.0], [1.67889497E12, 5485.0], [1.67889479E12, 3922.0], [1.6788959E12, 5552.0], [1.67889556E12, 5516.0], [1.67889522E12, 5360.0], [1.67889488E12, 5423.0], [1.67889581E12, 5333.0], [1.67889547E12, 5573.0], [1.67889513E12, 5368.0], [1.67889606E12, 2816.0], [1.67889559E12, 5776.0], [1.67889525E12, 5217.0], [1.67889491E12, 5171.0], [1.67889568E12, 5356.0], [1.6788955E12, 5819.0], [1.67889516E12, 5460.0], [1.67889482E12, 4788.0], [1.67889593E12, 5377.0], [1.67889575E12, 5512.0], [1.67889541E12, 5800.0], [1.67889507E12, 5476.0], [1.67889473E12, 2498.0], [1.67889584E12, 5550.0], [1.67889566E12, 5503.0], [1.67889532E12, 5610.0], [1.67889604E12, 2966.0], [1.67889498E12, 5587.0], [1.67889527E12, 5364.0], [1.67889609E12, 2824.0], [1.67889493E12, 5215.0], [1.6788957E12, 5711.0], [1.67889536E12, 5588.0], [1.67889518E12, 5328.0], [1.67889484E12, 5314.0], [1.67889595E12, 4570.0], [1.67889561E12, 5451.0], [1.67889543E12, 5612.0], [1.67889509E12, 5425.0], [1.67889475E12, 2778.0], [1.67889586E12, 5591.0], [1.67889552E12, 5464.0], [1.67889534E12, 5671.0], [1.67889602E12, 3191.0], [1.678895E12, 5440.0], [1.67889577E12, 5577.0], [1.67889478E12, 3539.0], [1.67889589E12, 5512.0], [1.67889555E12, 6025.0], [1.67889521E12, 5325.0], [1.67889503E12, 5591.0], [1.6788958E12, 5416.0], [1.67889546E12, 5580.0], [1.67889512E12, 5356.0], [1.67889607E12, 2778.0], [1.67889494E12, 5304.0], [1.67889571E12, 5658.0], [1.67889537E12, 5546.0], [1.67889519E12, 5395.0], [1.67889485E12, 5537.0], [1.67889596E12, 4331.0], [1.67889562E12, 5405.0], [1.67889528E12, 5205.0], [1.67889591E12, 5439.0], [1.67889557E12, 5632.0], [1.67889523E12, 5299.0], [1.67889489E12, 5395.0], [1.678896E12, 3910.0], [1.67889582E12, 5346.0], [1.67889548E12, 5618.0], [1.67889514E12, 5439.0], [1.67889605E12, 2888.0], [1.6788948E12, 4134.0], [1.67889573E12, 5555.0], [1.67889539E12, 5864.0], [1.67889505E12, 5442.0], [1.67889487E12, 5349.0], [1.67889598E12, 3921.0], [1.67889564E12, 5323.0], [1.6788953E12, 5885.0], [1.67889496E12, 5344.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.67889542E12, 6565.0], [1.67889508E12, 6403.0], [1.67889474E12, 3023.0], [1.67889585E12, 6289.0], [1.67889567E12, 6339.0], [1.67889533E12, 6481.0], [1.67889603E12, 3593.5], [1.67889499E12, 6112.5], [1.67889576E12, 6474.0], [1.67889558E12, 6792.5], [1.67889524E12, 6717.0], [1.6788949E12, 6096.0], [1.67889583E12, 6621.0], [1.67889549E12, 6478.5], [1.67889515E12, 6228.5], [1.67889481E12, 5112.0], [1.67889592E12, 6380.0], [1.6788951E12, 6300.5], [1.67889476E12, 3706.5], [1.67889587E12, 6440.5], [1.67889553E12, 6569.0], [1.67889535E12, 6848.0], [1.67889601E12, 3889.5], [1.67889501E12, 6347.0], [1.67889578E12, 6342.0], [1.67889544E12, 6935.0], [1.67889526E12, 6095.0], [1.67889492E12, 6168.0], [1.67889569E12, 6586.0], [1.67889551E12, 6652.0], [1.67889517E12, 6109.0], [1.67889483E12, 5847.0], [1.67889594E12, 5630.0], [1.6788956E12, 6397.0], [1.67889495E12, 6141.0], [1.67889572E12, 6363.5], [1.67889538E12, 6568.0], [1.67889504E12, 6218.5], [1.67889486E12, 6447.5], [1.67889597E12, 5177.5], [1.67889563E12, 6310.0], [1.67889529E12, 6095.0], [1.67889511E12, 6458.0], [1.67889608E12, 2881.5], [1.67889477E12, 3917.0], [1.67889588E12, 6539.0], [1.67889554E12, 6596.5], [1.6788952E12, 6295.0], [1.67889502E12, 6447.0], [1.67889579E12, 6466.0], [1.67889545E12, 6298.0], [1.67889574E12, 6476.5], [1.6788954E12, 6706.0], [1.67889506E12, 6235.0], [1.67889472E12, 2844.0], [1.67889599E12, 4648.0], [1.67889565E12, 6564.0], [1.67889531E12, 6711.0], [1.67889497E12, 6283.0], [1.67889479E12, 4492.0], [1.6788959E12, 6456.0], [1.67889556E12, 6327.0], [1.67889522E12, 6203.0], [1.67889488E12, 6242.5], [1.67889581E12, 6082.0], [1.67889547E12, 6542.0], [1.67889513E12, 6200.5], [1.67889606E12, 2882.0], [1.67889559E12, 6659.0], [1.67889525E12, 6423.0], [1.67889491E12, 6166.0], [1.67889568E12, 6335.0], [1.6788955E12, 6793.5], [1.67889516E12, 6347.0], [1.67889482E12, 5588.0], [1.67889593E12, 6369.5], [1.67889575E12, 6430.0], [1.67889541E12, 6677.0], [1.67889507E12, 6731.0], [1.67889473E12, 2769.5], [1.67889584E12, 6689.0], [1.67889566E12, 6260.0], [1.67889532E12, 6518.0], [1.67889604E12, 3375.5], [1.67889498E12, 6477.5], [1.67889527E12, 6840.0], [1.67889609E12, 2824.0], [1.67889493E12, 6142.0], [1.6788957E12, 6522.0], [1.67889536E12, 6444.5], [1.67889518E12, 6112.0], [1.67889484E12, 6318.0], [1.67889595E12, 5220.0], [1.67889561E12, 6264.0], [1.67889543E12, 6530.0], [1.67889509E12, 6226.5], [1.67889475E12, 3469.5], [1.67889586E12, 6407.0], [1.67889552E12, 6248.0], [1.67889534E12, 6676.5], [1.67889602E12, 4003.0], [1.678895E12, 6398.0], [1.67889577E12, 6365.0], [1.67889478E12, 4150.0], [1.67889589E12, 6355.0], [1.67889555E12, 6862.0], [1.67889521E12, 6213.0], [1.67889503E12, 6601.5], [1.6788958E12, 6374.5], [1.67889546E12, 6554.5], [1.67889512E12, 6446.0], [1.67889607E12, 2867.0], [1.67889494E12, 6123.0], [1.67889571E12, 6530.5], [1.67889537E12, 6574.5], [1.67889519E12, 6057.0], [1.67889485E12, 7408.0], [1.67889596E12, 5056.0], [1.67889562E12, 6262.0], [1.67889528E12, 6375.5], [1.67889591E12, 6290.0], [1.67889557E12, 6745.0], [1.67889523E12, 6048.0], [1.67889489E12, 6455.0], [1.678896E12, 4573.0], [1.67889582E12, 6451.0], [1.67889548E12, 6506.0], [1.67889514E12, 6150.5], [1.67889605E12, 3216.0], [1.6788948E12, 4810.0], [1.67889573E12, 6448.0], [1.67889539E12, 6822.0], [1.67889505E12, 6317.0], [1.67889487E12, 6123.0], [1.67889598E12, 4724.0], [1.67889564E12, 6257.0], [1.6788953E12, 6649.5], [1.67889496E12, 6198.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67889609E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 4412.0, "minX": 1.0, "maxY": 6367.0, "series": [{"data": [[1.0, 4412.0], [2.0, 6021.5], [4.0, 6345.5], [8.0, 6191.0], [9.0, 6117.5], [5.0, 6294.0], [10.0, 6367.0], [11.0, 6257.0], [3.0, 6268.0], [6.0, 6312.5], [13.0, 6333.0], [7.0, 6291.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[1.0, 0.0], [2.0, 0.0], [4.0, 0.0], [8.0, 0.0], [9.0, 0.0], [5.0, 0.0], [10.0, 0.0], [11.0, 0.0], [3.0, 0.0], [6.0, 0.0], [13.0, 0.0], [7.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 13.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.67889472E12, "maxY": 5.3, "series": [{"data": [[1.67889542E12, 4.5], [1.67889508E12, 4.7], [1.67889474E12, 2.2], [1.67889585E12, 4.4], [1.67889567E12, 4.6], [1.67889533E12, 4.7], [1.67889603E12, 2.8], [1.67889499E12, 5.0], [1.67889576E12, 4.2], [1.67889558E12, 4.4], [1.67889524E12, 4.5], [1.6788949E12, 4.6], [1.67889583E12, 4.2], [1.67889549E12, 4.6], [1.67889515E12, 5.0], [1.67889481E12, 4.9], [1.67889592E12, 4.0], [1.6788951E12, 5.0], [1.67889476E12, 3.3], [1.67889587E12, 4.6], [1.67889553E12, 4.7], [1.67889535E12, 4.7], [1.67889601E12, 3.5], [1.67889501E12, 4.7], [1.67889578E12, 4.8], [1.67889544E12, 4.3], [1.67889526E12, 5.0], [1.67889492E12, 4.9], [1.67889569E12, 4.6], [1.67889551E12, 4.7], [1.67889517E12, 5.1], [1.67889483E12, 5.0], [1.67889594E12, 5.0], [1.6788956E12, 4.7], [1.67889495E12, 4.4], [1.67889572E12, 5.0], [1.67889538E12, 4.6], [1.67889504E12, 4.8], [1.67889486E12, 5.0], [1.67889597E12, 4.0], [1.67889563E12, 5.2], [1.67889529E12, 4.4], [1.67889511E12, 4.6], [1.67889608E12, 0.6], [1.67889477E12, 3.5], [1.67889588E12, 4.6], [1.67889554E12, 4.2], [1.6788952E12, 4.7], [1.67889502E12, 4.7], [1.67889579E12, 4.5], [1.67889545E12, 4.5], [1.67889574E12, 4.2], [1.6788954E12, 4.5], [1.67889506E12, 4.9], [1.67889472E12, 0.6], [1.67889599E12, 3.6], [1.67889565E12, 4.0], [1.67889531E12, 4.5], [1.67889497E12, 4.2], [1.67889479E12, 4.1], [1.6788959E12, 4.6], [1.67889556E12, 4.5], [1.67889522E12, 5.1], [1.67889488E12, 4.6], [1.67889581E12, 4.8], [1.67889547E12, 4.3], [1.67889513E12, 5.0], [1.67889606E12, 1.9], [1.67889559E12, 4.5], [1.67889525E12, 4.9], [1.67889491E12, 5.1], [1.67889568E12, 4.6], [1.6788955E12, 4.6], [1.67889516E12, 4.5], [1.67889482E12, 4.9], [1.67889593E12, 4.7], [1.67889575E12, 5.3], [1.67889541E12, 4.5], [1.67889507E12, 4.4], [1.67889473E12, 1.6], [1.67889584E12, 5.1], [1.67889566E12, 5.2], [1.67889532E12, 4.5], [1.67889604E12, 2.5], [1.67889498E12, 4.8], [1.67889527E12, 4.1], [1.67889493E12, 4.8], [1.6788957E12, 4.7], [1.67889536E12, 4.6], [1.67889518E12, 5.1], [1.67889484E12, 4.1], [1.67889595E12, 4.3], [1.67889561E12, 4.9], [1.67889543E12, 4.8], [1.67889509E12, 4.6], [1.67889475E12, 2.6], [1.67889586E12, 4.9], [1.67889552E12, 4.5], [1.67889534E12, 4.4], [1.67889602E12, 3.1], [1.678895E12, 4.3], [1.67889577E12, 4.8], [1.67889478E12, 4.4], [1.67889589E12, 4.4], [1.67889555E12, 4.5], [1.67889521E12, 4.8], [1.67889503E12, 4.6], [1.6788958E12, 5.0], [1.67889546E12, 5.0], [1.67889512E12, 4.7], [1.67889607E12, 1.0], [1.67889494E12, 5.2], [1.67889571E12, 4.2], [1.67889537E12, 4.4], [1.67889519E12, 4.6], [1.67889485E12, 4.3], [1.67889596E12, 4.2], [1.67889562E12, 4.4], [1.67889528E12, 4.8], [1.67889591E12, 4.8], [1.67889557E12, 4.6], [1.67889523E12, 4.7], [1.67889489E12, 5.0], [1.678896E12, 3.4], [1.67889582E12, 4.7], [1.67889548E12, 4.6], [1.67889514E12, 4.6], [1.67889605E12, 1.9], [1.6788948E12, 4.5], [1.67889573E12, 4.7], [1.67889539E12, 4.3], [1.67889505E12, 4.8], [1.67889487E12, 4.7], [1.67889598E12, 4.4], [1.67889564E12, 5.0], [1.6788953E12, 4.6], [1.67889496E12, 5.3]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67889608E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.67889472E12, "maxY": 5.3, "series": [{"data": [[1.67889542E12, 4.5], [1.67889508E12, 4.7], [1.67889474E12, 1.9], [1.67889585E12, 4.4], [1.67889567E12, 4.6], [1.67889533E12, 4.7], [1.67889603E12, 3.0], [1.67889499E12, 5.0], [1.67889576E12, 4.2], [1.67889558E12, 4.4], [1.67889524E12, 4.5], [1.6788949E12, 4.6], [1.67889583E12, 4.2], [1.67889549E12, 4.6], [1.67889515E12, 5.0], [1.67889481E12, 4.6], [1.67889592E12, 4.1], [1.6788951E12, 5.0], [1.67889476E12, 3.0], [1.67889587E12, 4.6], [1.67889553E12, 4.7], [1.67889535E12, 4.7], [1.67889601E12, 3.6], [1.67889501E12, 4.7], [1.67889578E12, 4.8], [1.67889544E12, 4.3], [1.67889526E12, 5.0], [1.67889492E12, 4.9], [1.67889569E12, 4.6], [1.67889551E12, 4.7], [1.67889517E12, 5.1], [1.67889483E12, 4.8], [1.67889594E12, 5.1], [1.6788956E12, 4.7], [1.67889495E12, 4.4], [1.67889572E12, 5.0], [1.67889538E12, 4.6], [1.67889504E12, 4.8], [1.67889486E12, 5.0], [1.67889597E12, 4.2], [1.67889563E12, 5.2], [1.67889529E12, 4.4], [1.67889511E12, 4.6], [1.67889608E12, 0.8], [1.67889477E12, 3.3], [1.67889588E12, 4.6], [1.67889554E12, 4.2], [1.6788952E12, 4.7], [1.67889502E12, 4.7], [1.67889579E12, 4.5], [1.67889545E12, 4.5], [1.67889574E12, 4.2], [1.6788954E12, 4.5], [1.67889506E12, 4.9], [1.67889472E12, 0.3], [1.67889599E12, 3.8], [1.67889565E12, 4.0], [1.67889531E12, 4.5], [1.67889497E12, 4.2], [1.67889479E12, 3.9], [1.6788959E12, 4.6], [1.67889556E12, 4.5], [1.67889522E12, 5.1], [1.67889488E12, 4.6], [1.67889581E12, 4.8], [1.67889547E12, 4.3], [1.67889513E12, 5.0], [1.67889606E12, 2.0], [1.67889559E12, 4.5], [1.67889525E12, 4.9], [1.67889491E12, 5.1], [1.67889568E12, 4.6], [1.6788955E12, 4.6], [1.67889516E12, 4.5], [1.67889482E12, 4.6], [1.67889593E12, 4.8], [1.67889575E12, 5.3], [1.67889541E12, 4.5], [1.67889507E12, 4.4], [1.67889473E12, 1.4], [1.67889584E12, 5.1], [1.67889566E12, 5.2], [1.67889532E12, 4.5], [1.67889604E12, 2.6], [1.67889498E12, 4.8], [1.67889527E12, 4.1], [1.67889609E12, 0.1], [1.67889493E12, 4.8], [1.6788957E12, 4.7], [1.67889536E12, 4.6], [1.67889518E12, 5.1], [1.67889484E12, 4.1], [1.67889595E12, 4.5], [1.67889561E12, 4.9], [1.67889543E12, 4.8], [1.67889509E12, 4.6], [1.67889475E12, 2.4], [1.67889586E12, 4.9], [1.67889552E12, 4.5], [1.67889534E12, 4.4], [1.67889602E12, 3.3], [1.678895E12, 4.3], [1.67889577E12, 4.8], [1.67889478E12, 4.1], [1.67889589E12, 4.4], [1.67889555E12, 4.5], [1.67889521E12, 4.8], [1.67889503E12, 4.6], [1.6788958E12, 5.0], [1.67889546E12, 5.0], [1.67889512E12, 4.7], [1.67889607E12, 1.2], [1.67889494E12, 5.2], [1.67889571E12, 4.2], [1.67889537E12, 4.4], [1.67889519E12, 4.6], [1.67889485E12, 4.3], [1.67889596E12, 4.4], [1.67889562E12, 4.4], [1.67889528E12, 4.8], [1.67889591E12, 4.9], [1.67889557E12, 4.6], [1.67889523E12, 4.7], [1.67889489E12, 5.0], [1.678896E12, 3.7], [1.67889582E12, 4.7], [1.67889548E12, 4.6], [1.67889514E12, 4.6], [1.67889605E12, 2.1], [1.6788948E12, 4.3], [1.67889573E12, 4.7], [1.67889539E12, 4.3], [1.67889505E12, 4.8], [1.67889487E12, 4.7], [1.67889598E12, 4.5], [1.67889564E12, 5.0], [1.6788953E12, 4.6], [1.67889496E12, 5.3]], "isOverall": false, "label": "EMPTY_RES_CODE", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67889609E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.67889472E12, "maxY": 2.8, "series": [{"data": [[1.67889542E12, 2.3], [1.67889508E12, 2.3], [1.67889474E12, 1.0], [1.67889585E12, 2.0], [1.67889567E12, 2.1], [1.67889533E12, 2.2], [1.67889603E12, 1.4], [1.67889499E12, 2.5], [1.67889576E12, 2.1], [1.67889558E12, 2.1], [1.67889524E12, 2.2], [1.6788949E12, 2.0], [1.67889583E12, 2.3], [1.67889549E12, 2.1], [1.67889515E12, 2.4], [1.67889481E12, 2.3], [1.67889592E12, 2.2], [1.6788951E12, 2.4], [1.67889476E12, 1.5], [1.67889587E12, 2.4], [1.67889553E12, 2.2], [1.67889535E12, 2.7], [1.67889601E12, 1.7], [1.67889501E12, 2.3], [1.67889578E12, 2.4], [1.67889544E12, 2.0], [1.67889526E12, 2.6], [1.67889492E12, 2.4], [1.67889569E12, 2.5], [1.67889551E12, 2.5], [1.67889517E12, 2.8], [1.67889483E12, 2.6], [1.67889594E12, 2.6], [1.6788956E12, 2.5], [1.67889495E12, 2.1], [1.67889572E12, 2.7], [1.67889538E12, 2.4], [1.67889504E12, 2.4], [1.67889486E12, 2.6], [1.67889597E12, 2.1], [1.67889563E12, 2.7], [1.67889529E12, 2.2], [1.67889511E12, 2.5], [1.67889608E12, 0.4], [1.67889477E12, 1.6], [1.67889588E12, 2.4], [1.67889554E12, 2.1], [1.6788952E12, 2.3], [1.67889502E12, 2.4], [1.67889579E12, 2.4], [1.67889545E12, 2.0], [1.67889574E12, 2.2], [1.6788954E12, 2.2], [1.67889506E12, 2.4], [1.67889472E12, 0.2], [1.67889599E12, 1.8], [1.67889565E12, 2.2], [1.67889531E12, 2.4], [1.67889497E12, 2.0], [1.67889479E12, 2.1], [1.6788959E12, 2.3], [1.67889556E12, 2.3], [1.67889522E12, 2.5], [1.67889488E12, 2.5], [1.67889581E12, 2.3], [1.67889547E12, 2.2], [1.67889513E12, 2.6], [1.67889606E12, 0.9], [1.67889559E12, 2.3], [1.67889525E12, 2.6], [1.67889491E12, 2.7], [1.67889568E12, 2.5], [1.6788955E12, 2.5], [1.67889516E12, 2.3], [1.67889482E12, 2.3], [1.67889593E12, 2.4], [1.67889575E12, 2.7], [1.67889541E12, 1.9], [1.67889507E12, 2.5], [1.67889473E12, 0.8], [1.67889584E12, 2.6], [1.67889566E12, 2.4], [1.67889532E12, 2.0], [1.67889604E12, 1.1], [1.67889498E12, 2.5], [1.67889527E12, 2.1], [1.67889493E12, 2.6], [1.6788957E12, 2.1], [1.67889536E12, 2.3], [1.67889518E12, 2.6], [1.67889484E12, 2.0], [1.67889595E12, 2.0], [1.67889561E12, 2.4], [1.67889543E12, 2.7], [1.67889509E12, 2.0], [1.67889475E12, 1.3], [1.67889586E12, 2.5], [1.67889552E12, 2.2], [1.67889534E12, 2.2], [1.67889602E12, 1.8], [1.678895E12, 2.2], [1.67889577E12, 2.3], [1.67889478E12, 2.2], [1.67889589E12, 2.0], [1.67889555E12, 2.4], [1.67889521E12, 2.6], [1.67889503E12, 2.2], [1.6788958E12, 2.5], [1.67889546E12, 2.8], [1.67889512E12, 2.6], [1.67889607E12, 0.5], [1.67889494E12, 2.7], [1.67889571E12, 2.0], [1.67889537E12, 1.8], [1.67889519E12, 2.1], [1.67889485E12, 2.0], [1.67889596E12, 2.2], [1.67889562E12, 1.9], [1.67889528E12, 2.2], [1.67889591E12, 2.4], [1.67889557E12, 2.2], [1.67889523E12, 2.2], [1.67889489E12, 2.3], [1.678896E12, 1.8], [1.67889582E12, 2.2], [1.67889548E12, 2.2], [1.67889514E12, 1.9], [1.67889605E12, 1.2], [1.6788948E12, 2.2], [1.67889573E12, 2.2], [1.67889539E12, 2.5], [1.67889505E12, 2.4], [1.67889487E12, 2.4], [1.67889598E12, 2.2], [1.67889564E12, 2.6], [1.6788953E12, 2.4], [1.67889496E12, 2.6]], "isOverall": false, "label": "RAMP-success", "isController": false}, {"data": [[1.67889542E12, 2.2], [1.67889508E12, 2.4], [1.67889474E12, 0.9], [1.67889585E12, 2.4], [1.67889567E12, 2.5], [1.67889533E12, 2.5], [1.67889603E12, 1.6], [1.67889499E12, 2.5], [1.67889576E12, 2.1], [1.67889558E12, 2.3], [1.67889524E12, 2.3], [1.6788949E12, 2.6], [1.67889583E12, 1.9], [1.67889549E12, 2.5], [1.67889515E12, 2.6], [1.67889481E12, 2.3], [1.67889592E12, 1.9], [1.6788951E12, 2.6], [1.67889476E12, 1.5], [1.67889587E12, 2.2], [1.67889553E12, 2.5], [1.67889535E12, 2.0], [1.67889601E12, 1.9], [1.67889501E12, 2.4], [1.67889578E12, 2.4], [1.67889544E12, 2.3], [1.67889526E12, 2.4], [1.67889492E12, 2.5], [1.67889569E12, 2.1], [1.67889551E12, 2.2], [1.67889517E12, 2.3], [1.67889483E12, 2.2], [1.67889594E12, 2.5], [1.6788956E12, 2.2], [1.67889495E12, 2.3], [1.67889572E12, 2.3], [1.67889538E12, 2.2], [1.67889504E12, 2.4], [1.67889486E12, 2.4], [1.67889597E12, 2.1], [1.67889563E12, 2.5], [1.67889529E12, 2.2], [1.67889511E12, 2.1], [1.67889608E12, 0.4], [1.67889477E12, 1.7], [1.67889588E12, 2.2], [1.67889554E12, 2.1], [1.6788952E12, 2.4], [1.67889502E12, 2.3], [1.67889579E12, 2.1], [1.67889545E12, 2.5], [1.67889574E12, 2.0], [1.6788954E12, 2.3], [1.67889506E12, 2.5], [1.67889472E12, 0.1], [1.67889599E12, 2.0], [1.67889565E12, 1.8], [1.67889531E12, 2.1], [1.67889497E12, 2.2], [1.67889479E12, 1.8], [1.6788959E12, 2.3], [1.67889556E12, 2.2], [1.67889522E12, 2.6], [1.67889488E12, 2.1], [1.67889581E12, 2.5], [1.67889547E12, 2.1], [1.67889513E12, 2.4], [1.67889606E12, 1.1], [1.67889559E12, 2.2], [1.67889525E12, 2.3], [1.67889491E12, 2.4], [1.67889568E12, 2.1], [1.6788955E12, 2.1], [1.67889516E12, 2.2], [1.67889482E12, 2.3], [1.67889593E12, 2.4], [1.67889575E12, 2.6], [1.67889541E12, 2.6], [1.67889507E12, 1.9], [1.67889473E12, 0.6], [1.67889584E12, 2.5], [1.67889566E12, 2.8], [1.67889532E12, 2.5], [1.67889604E12, 1.5], [1.67889498E12, 2.3], [1.67889527E12, 2.0], [1.67889609E12, 0.1], [1.67889493E12, 2.2], [1.6788957E12, 2.6], [1.67889536E12, 2.3], [1.67889518E12, 2.5], [1.67889484E12, 2.1], [1.67889595E12, 2.5], [1.67889561E12, 2.5], [1.67889543E12, 2.1], [1.67889509E12, 2.6], [1.67889475E12, 1.1], [1.67889586E12, 2.4], [1.67889552E12, 2.3], [1.67889534E12, 2.2], [1.67889602E12, 1.5], [1.678895E12, 2.1], [1.67889577E12, 2.5], [1.67889478E12, 1.9], [1.67889589E12, 2.4], [1.67889555E12, 2.1], [1.67889521E12, 2.2], [1.67889503E12, 2.4], [1.6788958E12, 2.5], [1.67889546E12, 2.2], [1.67889512E12, 2.1], [1.67889607E12, 0.7], [1.67889494E12, 2.5], [1.67889571E12, 2.2], [1.67889537E12, 2.6], [1.67889519E12, 2.5], [1.67889485E12, 2.3], [1.67889596E12, 2.2], [1.67889562E12, 2.5], [1.67889528E12, 2.6], [1.67889591E12, 2.5], [1.67889557E12, 2.4], [1.67889523E12, 2.5], [1.67889489E12, 2.7], [1.678896E12, 1.9], [1.67889582E12, 2.5], [1.67889548E12, 2.4], [1.67889514E12, 2.7], [1.67889605E12, 0.9], [1.6788948E12, 2.1], [1.67889573E12, 2.5], [1.67889539E12, 1.8], [1.67889505E12, 2.4], [1.67889487E12, 2.3], [1.67889598E12, 2.3], [1.67889564E12, 2.4], [1.6788953E12, 2.2], [1.67889496E12, 2.7]], "isOverall": false, "label": "原生-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67889609E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.67889472E12, "maxY": 5.3, "series": [{"data": [[1.67889542E12, 4.5], [1.67889508E12, 4.7], [1.67889474E12, 1.9], [1.67889585E12, 4.4], [1.67889567E12, 4.6], [1.67889533E12, 4.7], [1.67889603E12, 3.0], [1.67889499E12, 5.0], [1.67889576E12, 4.2], [1.67889558E12, 4.4], [1.67889524E12, 4.5], [1.6788949E12, 4.6], [1.67889583E12, 4.2], [1.67889549E12, 4.6], [1.67889515E12, 5.0], [1.67889481E12, 4.6], [1.67889592E12, 4.1], [1.6788951E12, 5.0], [1.67889476E12, 3.0], [1.67889587E12, 4.6], [1.67889553E12, 4.7], [1.67889535E12, 4.7], [1.67889601E12, 3.6], [1.67889501E12, 4.7], [1.67889578E12, 4.8], [1.67889544E12, 4.3], [1.67889526E12, 5.0], [1.67889492E12, 4.9], [1.67889569E12, 4.6], [1.67889551E12, 4.7], [1.67889517E12, 5.1], [1.67889483E12, 4.8], [1.67889594E12, 5.1], [1.6788956E12, 4.7], [1.67889495E12, 4.4], [1.67889572E12, 5.0], [1.67889538E12, 4.6], [1.67889504E12, 4.8], [1.67889486E12, 5.0], [1.67889597E12, 4.2], [1.67889563E12, 5.2], [1.67889529E12, 4.4], [1.67889511E12, 4.6], [1.67889608E12, 0.8], [1.67889477E12, 3.3], [1.67889588E12, 4.6], [1.67889554E12, 4.2], [1.6788952E12, 4.7], [1.67889502E12, 4.7], [1.67889579E12, 4.5], [1.67889545E12, 4.5], [1.67889574E12, 4.2], [1.6788954E12, 4.5], [1.67889506E12, 4.9], [1.67889472E12, 0.3], [1.67889599E12, 3.8], [1.67889565E12, 4.0], [1.67889531E12, 4.5], [1.67889497E12, 4.2], [1.67889479E12, 3.9], [1.6788959E12, 4.6], [1.67889556E12, 4.5], [1.67889522E12, 5.1], [1.67889488E12, 4.6], [1.67889581E12, 4.8], [1.67889547E12, 4.3], [1.67889513E12, 5.0], [1.67889606E12, 2.0], [1.67889559E12, 4.5], [1.67889525E12, 4.9], [1.67889491E12, 5.1], [1.67889568E12, 4.6], [1.6788955E12, 4.6], [1.67889516E12, 4.5], [1.67889482E12, 4.6], [1.67889593E12, 4.8], [1.67889575E12, 5.3], [1.67889541E12, 4.5], [1.67889507E12, 4.4], [1.67889473E12, 1.4], [1.67889584E12, 5.1], [1.67889566E12, 5.2], [1.67889532E12, 4.5], [1.67889604E12, 2.6], [1.67889498E12, 4.8], [1.67889527E12, 4.1], [1.67889609E12, 0.1], [1.67889493E12, 4.8], [1.6788957E12, 4.7], [1.67889536E12, 4.6], [1.67889518E12, 5.1], [1.67889484E12, 4.1], [1.67889595E12, 4.5], [1.67889561E12, 4.9], [1.67889543E12, 4.8], [1.67889509E12, 4.6], [1.67889475E12, 2.4], [1.67889586E12, 4.9], [1.67889552E12, 4.5], [1.67889534E12, 4.4], [1.67889602E12, 3.3], [1.678895E12, 4.3], [1.67889577E12, 4.8], [1.67889478E12, 4.1], [1.67889589E12, 4.4], [1.67889555E12, 4.5], [1.67889521E12, 4.8], [1.67889503E12, 4.6], [1.6788958E12, 5.0], [1.67889546E12, 5.0], [1.67889512E12, 4.7], [1.67889607E12, 1.2], [1.67889494E12, 5.2], [1.67889571E12, 4.2], [1.67889537E12, 4.4], [1.67889519E12, 4.6], [1.67889485E12, 4.3], [1.67889596E12, 4.4], [1.67889562E12, 4.4], [1.67889528E12, 4.8], [1.67889591E12, 4.9], [1.67889557E12, 4.6], [1.67889523E12, 4.7], [1.67889489E12, 5.0], [1.678896E12, 3.7], [1.67889582E12, 4.7], [1.67889548E12, 4.6], [1.67889514E12, 4.6], [1.67889605E12, 2.1], [1.6788948E12, 4.3], [1.67889573E12, 4.7], [1.67889539E12, 4.3], [1.67889505E12, 4.8], [1.67889487E12, 4.7], [1.67889598E12, 4.5], [1.67889564E12, 5.0], [1.6788953E12, 4.6], [1.67889496E12, 5.3]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67889609E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

