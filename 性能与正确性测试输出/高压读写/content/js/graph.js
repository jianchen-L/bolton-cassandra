/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2569.0, "minX": 0.0, "maxY": 7713.0, "series": [{"data": [[0.0, 2885.0], [0.1, 3086.0], [0.2, 3153.0], [0.3, 3163.0], [0.4, 3177.0], [0.5, 3181.0], [0.6, 3189.0], [0.7, 3218.0], [0.8, 3267.0], [0.9, 3279.0], [1.0, 3341.0], [1.1, 3434.0], [1.2, 3442.0], [1.3, 3475.0], [1.4, 3480.0], [1.5, 3497.0], [1.6, 3571.0], [1.7, 3622.0], [1.8, 3631.0], [1.9, 3639.0], [2.0, 3651.0], [2.1, 3675.0], [2.2, 3692.0], [2.3, 3735.0], [2.4, 3801.0], [2.5, 3863.0], [2.6, 3903.0], [2.7, 3981.0], [2.8, 4034.0], [2.9, 4064.0], [3.0, 4081.0], [3.1, 4119.0], [3.2, 4140.0], [3.3, 4157.0], [3.4, 4174.0], [3.5, 4186.0], [3.6, 4201.0], [3.7, 4209.0], [3.8, 4233.0], [3.9, 4281.0], [4.0, 4302.0], [4.1, 4319.0], [4.2, 4327.0], [4.3, 4367.0], [4.4, 4429.0], [4.5, 4447.0], [4.6, 4522.0], [4.7, 4535.0], [4.8, 4570.0], [4.9, 4584.0], [5.0, 4614.0], [5.1, 4678.0], [5.2, 4698.0], [5.3, 4711.0], [5.4, 4724.0], [5.5, 4754.0], [5.6, 4790.0], [5.7, 4818.0], [5.8, 4861.0], [5.9, 4875.0], [6.0, 4893.0], [6.1, 4910.0], [6.2, 4923.0], [6.3, 4925.0], [6.4, 4939.0], [6.5, 4960.0], [6.6, 4997.0], [6.7, 5051.0], [6.8, 5080.0], [6.9, 5099.0], [7.0, 5120.0], [7.1, 5197.0], [7.2, 5211.0], [7.3, 5220.0], [7.4, 5226.0], [7.5, 5265.0], [7.6, 5278.0], [7.7, 5285.0], [7.8, 5306.0], [7.9, 5318.0], [8.0, 5327.0], [8.1, 5358.0], [8.2, 5373.0], [8.3, 5384.0], [8.4, 5394.0], [8.5, 5406.0], [8.6, 5423.0], [8.7, 5443.0], [8.8, 5480.0], [8.9, 5510.0], [9.0, 5533.0], [9.1, 5552.0], [9.2, 5580.0], [9.3, 5586.0], [9.4, 5603.0], [9.5, 5623.0], [9.6, 5644.0], [9.7, 5659.0], [9.8, 5724.0], [9.9, 5742.0], [10.0, 5760.0], [10.1, 5781.0], [10.2, 5801.0], [10.3, 5806.0], [10.4, 5843.0], [10.5, 5845.0], [10.6, 5861.0], [10.7, 5870.0], [10.8, 5890.0], [10.9, 5898.0], [11.0, 5907.0], [11.1, 5912.0], [11.2, 5918.0], [11.3, 5922.0], [11.4, 5924.0], [11.5, 5927.0], [11.6, 5930.0], [11.7, 5935.0], [11.8, 5943.0], [11.9, 5947.0], [12.0, 5952.0], [12.1, 5955.0], [12.2, 5958.0], [12.3, 5964.0], [12.4, 5966.0], [12.5, 5972.0], [12.6, 5977.0], [12.7, 5982.0], [12.8, 5984.0], [12.9, 5986.0], [13.0, 5989.0], [13.1, 5994.0], [13.2, 5995.0], [13.3, 5998.0], [13.4, 5998.0], [13.5, 6001.0], [13.6, 6006.0], [13.7, 6008.0], [13.8, 6008.0], [13.9, 6009.0], [14.0, 6012.0], [14.1, 6015.0], [14.2, 6017.0], [14.3, 6021.0], [14.4, 6025.0], [14.5, 6029.0], [14.6, 6032.0], [14.7, 6033.0], [14.8, 6035.0], [14.9, 6038.0], [15.0, 6040.0], [15.1, 6041.0], [15.2, 6041.0], [15.3, 6042.0], [15.4, 6043.0], [15.5, 6045.0], [15.6, 6046.0], [15.7, 6049.0], [15.8, 6050.0], [15.9, 6052.0], [16.0, 6052.0], [16.1, 6053.0], [16.2, 6057.0], [16.3, 6059.0], [16.4, 6063.0], [16.5, 6064.0], [16.6, 6066.0], [16.7, 6070.0], [16.8, 6072.0], [16.9, 6072.0], [17.0, 6075.0], [17.1, 6076.0], [17.2, 6077.0], [17.3, 6078.0], [17.4, 6079.0], [17.5, 6081.0], [17.6, 6083.0], [17.7, 6084.0], [17.8, 6086.0], [17.9, 6087.0], [18.0, 6088.0], [18.1, 6089.0], [18.2, 6090.0], [18.3, 6091.0], [18.4, 6093.0], [18.5, 6096.0], [18.6, 6097.0], [18.7, 6099.0], [18.8, 6099.0], [18.9, 6101.0], [19.0, 6104.0], [19.1, 6105.0], [19.2, 6105.0], [19.3, 6107.0], [19.4, 6108.0], [19.5, 6110.0], [19.6, 6110.0], [19.7, 6112.0], [19.8, 6113.0], [19.9, 6114.0], [20.0, 6116.0], [20.1, 6118.0], [20.2, 6119.0], [20.3, 6119.0], [20.4, 6121.0], [20.5, 6122.0], [20.6, 6123.0], [20.7, 6124.0], [20.8, 6126.0], [20.9, 6127.0], [21.0, 6128.0], [21.1, 6129.0], [21.2, 6130.0], [21.3, 6130.0], [21.4, 6130.0], [21.5, 6131.0], [21.6, 6132.0], [21.7, 6133.0], [21.8, 6135.0], [21.9, 6137.0], [22.0, 6137.0], [22.1, 6138.0], [22.2, 6139.0], [22.3, 6140.0], [22.4, 6141.0], [22.5, 6142.0], [22.6, 6143.0], [22.7, 6144.0], [22.8, 6145.0], [22.9, 6145.0], [23.0, 6146.0], [23.1, 6148.0], [23.2, 6149.0], [23.3, 6151.0], [23.4, 6151.0], [23.5, 6153.0], [23.6, 6154.0], [23.7, 6154.0], [23.8, 6156.0], [23.9, 6156.0], [24.0, 6156.0], [24.1, 6157.0], [24.2, 6160.0], [24.3, 6161.0], [24.4, 6162.0], [24.5, 6163.0], [24.6, 6164.0], [24.7, 6165.0], [24.8, 6166.0], [24.9, 6167.0], [25.0, 6167.0], [25.1, 6168.0], [25.2, 6169.0], [25.3, 6171.0], [25.4, 6171.0], [25.5, 6173.0], [25.6, 6174.0], [25.7, 6175.0], [25.8, 6177.0], [25.9, 6178.0], [26.0, 6179.0], [26.1, 6181.0], [26.2, 6182.0], [26.3, 6183.0], [26.4, 6183.0], [26.5, 6184.0], [26.6, 6185.0], [26.7, 6186.0], [26.8, 6187.0], [26.9, 6187.0], [27.0, 6188.0], [27.1, 6189.0], [27.2, 6190.0], [27.3, 6190.0], [27.4, 6191.0], [27.5, 6191.0], [27.6, 6192.0], [27.7, 6194.0], [27.8, 6194.0], [27.9, 6195.0], [28.0, 6196.0], [28.1, 6199.0], [28.2, 6200.0], [28.3, 6200.0], [28.4, 6201.0], [28.5, 6202.0], [28.6, 6203.0], [28.7, 6205.0], [28.8, 6206.0], [28.9, 6208.0], [29.0, 6209.0], [29.1, 6209.0], [29.2, 6211.0], [29.3, 6211.0], [29.4, 6211.0], [29.5, 6212.0], [29.6, 6212.0], [29.7, 6213.0], [29.8, 6214.0], [29.9, 6214.0], [30.0, 6216.0], [30.1, 6218.0], [30.2, 6218.0], [30.3, 6221.0], [30.4, 6222.0], [30.5, 6223.0], [30.6, 6224.0], [30.7, 6227.0], [30.8, 6227.0], [30.9, 6228.0], [31.0, 6228.0], [31.1, 6229.0], [31.2, 6230.0], [31.3, 6230.0], [31.4, 6231.0], [31.5, 6232.0], [31.6, 6233.0], [31.7, 6234.0], [31.8, 6236.0], [31.9, 6237.0], [32.0, 6238.0], [32.1, 6240.0], [32.2, 6241.0], [32.3, 6241.0], [32.4, 6242.0], [32.5, 6243.0], [32.6, 6244.0], [32.7, 6244.0], [32.8, 6246.0], [32.9, 6246.0], [33.0, 6247.0], [33.1, 6248.0], [33.2, 6249.0], [33.3, 6251.0], [33.4, 6251.0], [33.5, 6252.0], [33.6, 6253.0], [33.7, 6253.0], [33.8, 6254.0], [33.9, 6255.0], [34.0, 6257.0], [34.1, 6258.0], [34.2, 6258.0], [34.3, 6259.0], [34.4, 6259.0], [34.5, 6259.0], [34.6, 6260.0], [34.7, 6262.0], [34.8, 6263.0], [34.9, 6266.0], [35.0, 6267.0], [35.1, 6268.0], [35.2, 6268.0], [35.3, 6269.0], [35.4, 6271.0], [35.5, 6272.0], [35.6, 6273.0], [35.7, 6274.0], [35.8, 6276.0], [35.9, 6277.0], [36.0, 6278.0], [36.1, 6279.0], [36.2, 6281.0], [36.3, 6283.0], [36.4, 6283.0], [36.5, 6283.0], [36.6, 6285.0], [36.7, 6287.0], [36.8, 6288.0], [36.9, 6289.0], [37.0, 6290.0], [37.1, 6292.0], [37.2, 6292.0], [37.3, 6293.0], [37.4, 6293.0], [37.5, 6295.0], [37.6, 6295.0], [37.7, 6295.0], [37.8, 6297.0], [37.9, 6297.0], [38.0, 6298.0], [38.1, 6299.0], [38.2, 6300.0], [38.3, 6301.0], [38.4, 6302.0], [38.5, 6302.0], [38.6, 6303.0], [38.7, 6304.0], [38.8, 6304.0], [38.9, 6304.0], [39.0, 6305.0], [39.1, 6307.0], [39.2, 6307.0], [39.3, 6307.0], [39.4, 6308.0], [39.5, 6308.0], [39.6, 6310.0], [39.7, 6311.0], [39.8, 6311.0], [39.9, 6312.0], [40.0, 6313.0], [40.1, 6314.0], [40.2, 6315.0], [40.3, 6316.0], [40.4, 6319.0], [40.5, 6320.0], [40.6, 6320.0], [40.7, 6322.0], [40.8, 6324.0], [40.9, 6325.0], [41.0, 6326.0], [41.1, 6327.0], [41.2, 6328.0], [41.3, 6329.0], [41.4, 6329.0], [41.5, 6329.0], [41.6, 6330.0], [41.7, 6331.0], [41.8, 6332.0], [41.9, 6333.0], [42.0, 6334.0], [42.1, 6335.0], [42.2, 6338.0], [42.3, 6338.0], [42.4, 6339.0], [42.5, 6342.0], [42.6, 6343.0], [42.7, 6343.0], [42.8, 6344.0], [42.9, 6345.0], [43.0, 6345.0], [43.1, 6347.0], [43.2, 6347.0], [43.3, 6348.0], [43.4, 6350.0], [43.5, 6351.0], [43.6, 6351.0], [43.7, 6352.0], [43.8, 6353.0], [43.9, 6355.0], [44.0, 6356.0], [44.1, 6357.0], [44.2, 6359.0], [44.3, 6361.0], [44.4, 6363.0], [44.5, 6364.0], [44.6, 6365.0], [44.7, 6366.0], [44.8, 6367.0], [44.9, 6368.0], [45.0, 6369.0], [45.1, 6370.0], [45.2, 6371.0], [45.3, 6374.0], [45.4, 6375.0], [45.5, 6378.0], [45.6, 6378.0], [45.7, 6379.0], [45.8, 6381.0], [45.9, 6381.0], [46.0, 6382.0], [46.1, 6384.0], [46.2, 6385.0], [46.3, 6387.0], [46.4, 6389.0], [46.5, 6391.0], [46.6, 6392.0], [46.7, 6392.0], [46.8, 6393.0], [46.9, 6398.0], [47.0, 6399.0], [47.1, 6400.0], [47.2, 6401.0], [47.3, 6402.0], [47.4, 6402.0], [47.5, 6405.0], [47.6, 6406.0], [47.7, 6409.0], [47.8, 6410.0], [47.9, 6413.0], [48.0, 6415.0], [48.1, 6417.0], [48.2, 6418.0], [48.3, 6419.0], [48.4, 6420.0], [48.5, 6423.0], [48.6, 6425.0], [48.7, 6425.0], [48.8, 6427.0], [48.9, 6428.0], [49.0, 6430.0], [49.1, 6432.0], [49.2, 6434.0], [49.3, 6437.0], [49.4, 6438.0], [49.5, 6440.0], [49.6, 6441.0], [49.7, 6442.0], [49.8, 6442.0], [49.9, 6444.0], [50.0, 6445.0], [50.1, 6447.0], [50.2, 6448.0], [50.3, 6450.0], [50.4, 6451.0], [50.5, 6454.0], [50.6, 6455.0], [50.7, 6457.0], [50.8, 6460.0], [50.9, 6462.0], [51.0, 6466.0], [51.1, 6467.0], [51.2, 6468.0], [51.3, 6471.0], [51.4, 6472.0], [51.5, 6476.0], [51.6, 6480.0], [51.7, 6483.0], [51.8, 6483.0], [51.9, 6486.0], [52.0, 6489.0], [52.1, 6491.0], [52.2, 6495.0], [52.3, 6496.0], [52.4, 6499.0], [52.5, 6500.0], [52.6, 6502.0], [52.7, 6504.0], [52.8, 6508.0], [52.9, 6511.0], [53.0, 6513.0], [53.1, 6514.0], [53.2, 6516.0], [53.3, 6517.0], [53.4, 6523.0], [53.5, 6525.0], [53.6, 6526.0], [53.7, 6527.0], [53.8, 6531.0], [53.9, 6539.0], [54.0, 6541.0], [54.1, 6545.0], [54.2, 6549.0], [54.3, 6552.0], [54.4, 6553.0], [54.5, 6559.0], [54.6, 6562.0], [54.7, 6565.0], [54.8, 6566.0], [54.9, 6569.0], [55.0, 6574.0], [55.1, 6579.0], [55.2, 6584.0], [55.3, 6587.0], [55.4, 6593.0], [55.5, 6597.0], [55.6, 6602.0], [55.7, 6604.0], [55.8, 6610.0], [55.9, 6611.0], [56.0, 6614.0], [56.1, 6618.0], [56.2, 6619.0], [56.3, 6622.0], [56.4, 6624.0], [56.5, 6628.0], [56.6, 6630.0], [56.7, 6632.0], [56.8, 6635.0], [56.9, 6638.0], [57.0, 6642.0], [57.1, 6649.0], [57.2, 6656.0], [57.3, 6658.0], [57.4, 6663.0], [57.5, 6665.0], [57.6, 6669.0], [57.7, 6675.0], [57.8, 6681.0], [57.9, 6684.0], [58.0, 6691.0], [58.1, 6696.0], [58.2, 6702.0], [58.3, 6707.0], [58.4, 6712.0], [58.5, 6717.0], [58.6, 6718.0], [58.7, 6719.0], [58.8, 6727.0], [58.9, 6731.0], [59.0, 6734.0], [59.1, 6737.0], [59.2, 6739.0], [59.3, 6743.0], [59.4, 6745.0], [59.5, 6751.0], [59.6, 6753.0], [59.7, 6756.0], [59.8, 6758.0], [59.9, 6759.0], [60.0, 6761.0], [60.1, 6764.0], [60.2, 6765.0], [60.3, 6769.0], [60.4, 6770.0], [60.5, 6775.0], [60.6, 6777.0], [60.7, 6779.0], [60.8, 6781.0], [60.9, 6782.0], [61.0, 6784.0], [61.1, 6785.0], [61.2, 6786.0], [61.3, 6787.0], [61.4, 6788.0], [61.5, 6789.0], [61.6, 6791.0], [61.7, 6792.0], [61.8, 6794.0], [61.9, 6797.0], [62.0, 6799.0], [62.1, 6800.0], [62.2, 6800.0], [62.3, 6802.0], [62.4, 6804.0], [62.5, 6806.0], [62.6, 6807.0], [62.7, 6808.0], [62.8, 6810.0], [62.9, 6811.0], [63.0, 6812.0], [63.1, 6812.0], [63.2, 6814.0], [63.3, 6815.0], [63.4, 6816.0], [63.5, 6817.0], [63.6, 6818.0], [63.7, 6819.0], [63.8, 6821.0], [63.9, 6822.0], [64.0, 6825.0], [64.1, 6826.0], [64.2, 6828.0], [64.3, 6830.0], [64.4, 6830.0], [64.5, 6832.0], [64.6, 6832.0], [64.7, 6834.0], [64.8, 6834.0], [64.9, 6835.0], [65.0, 6836.0], [65.1, 6838.0], [65.2, 6838.0], [65.3, 6841.0], [65.4, 6842.0], [65.5, 6843.0], [65.6, 6845.0], [65.7, 6846.0], [65.8, 6846.0], [65.9, 6848.0], [66.0, 6848.0], [66.1, 6848.0], [66.2, 6849.0], [66.3, 6849.0], [66.4, 6851.0], [66.5, 6852.0], [66.6, 6853.0], [66.7, 6854.0], [66.8, 6854.0], [66.9, 6855.0], [67.0, 6856.0], [67.1, 6856.0], [67.2, 6857.0], [67.3, 6859.0], [67.4, 6862.0], [67.5, 6862.0], [67.6, 6864.0], [67.7, 6864.0], [67.8, 6866.0], [67.9, 6867.0], [68.0, 6868.0], [68.1, 6869.0], [68.2, 6870.0], [68.3, 6872.0], [68.4, 6874.0], [68.5, 6875.0], [68.6, 6877.0], [68.7, 6878.0], [68.8, 6879.0], [68.9, 6880.0], [69.0, 6881.0], [69.1, 6882.0], [69.2, 6882.0], [69.3, 6883.0], [69.4, 6883.0], [69.5, 6885.0], [69.6, 6885.0], [69.7, 6887.0], [69.8, 6889.0], [69.9, 6890.0], [70.0, 6890.0], [70.1, 6891.0], [70.2, 6893.0], [70.3, 6894.0], [70.4, 6895.0], [70.5, 6896.0], [70.6, 6897.0], [70.7, 6898.0], [70.8, 6900.0], [70.9, 6900.0], [71.0, 6901.0], [71.1, 6901.0], [71.2, 6902.0], [71.3, 6903.0], [71.4, 6904.0], [71.5, 6906.0], [71.6, 6906.0], [71.7, 6908.0], [71.8, 6909.0], [71.9, 6910.0], [72.0, 6911.0], [72.1, 6911.0], [72.2, 6912.0], [72.3, 6912.0], [72.4, 6912.0], [72.5, 6913.0], [72.6, 6914.0], [72.7, 6915.0], [72.8, 6916.0], [72.9, 6916.0], [73.0, 6917.0], [73.1, 6918.0], [73.2, 6919.0], [73.3, 6920.0], [73.4, 6921.0], [73.5, 6921.0], [73.6, 6922.0], [73.7, 6923.0], [73.8, 6924.0], [73.9, 6925.0], [74.0, 6926.0], [74.1, 6927.0], [74.2, 6929.0], [74.3, 6929.0], [74.4, 6930.0], [74.5, 6931.0], [74.6, 6932.0], [74.7, 6933.0], [74.8, 6934.0], [74.9, 6936.0], [75.0, 6938.0], [75.1, 6938.0], [75.2, 6939.0], [75.3, 6939.0], [75.4, 6939.0], [75.5, 6941.0], [75.6, 6942.0], [75.7, 6943.0], [75.8, 6945.0], [75.9, 6946.0], [76.0, 6947.0], [76.1, 6948.0], [76.2, 6949.0], [76.3, 6950.0], [76.4, 6951.0], [76.5, 6951.0], [76.6, 6952.0], [76.7, 6953.0], [76.8, 6954.0], [76.9, 6955.0], [77.0, 6956.0], [77.1, 6957.0], [77.2, 6958.0], [77.3, 6959.0], [77.4, 6960.0], [77.5, 6961.0], [77.6, 6962.0], [77.7, 6963.0], [77.8, 6964.0], [77.9, 6964.0], [78.0, 6964.0], [78.1, 6965.0], [78.2, 6966.0], [78.3, 6968.0], [78.4, 6968.0], [78.5, 6969.0], [78.6, 6969.0], [78.7, 6970.0], [78.8, 6970.0], [78.9, 6972.0], [79.0, 6972.0], [79.1, 6973.0], [79.2, 6975.0], [79.3, 6976.0], [79.4, 6978.0], [79.5, 6980.0], [79.6, 6981.0], [79.7, 6983.0], [79.8, 6983.0], [79.9, 6984.0], [80.0, 6985.0], [80.1, 6986.0], [80.2, 6987.0], [80.3, 6987.0], [80.4, 6988.0], [80.5, 6990.0], [80.6, 6991.0], [80.7, 6991.0], [80.8, 6992.0], [80.9, 6992.0], [81.0, 6992.0], [81.1, 6993.0], [81.2, 6994.0], [81.3, 6995.0], [81.4, 6996.0], [81.5, 6996.0], [81.6, 6997.0], [81.7, 6998.0], [81.8, 6999.0], [81.9, 7000.0], [82.0, 7001.0], [82.1, 7002.0], [82.2, 7003.0], [82.3, 7003.0], [82.4, 7004.0], [82.5, 7006.0], [82.6, 7008.0], [82.7, 7009.0], [82.8, 7010.0], [82.9, 7011.0], [83.0, 7013.0], [83.1, 7014.0], [83.2, 7015.0], [83.3, 7016.0], [83.4, 7018.0], [83.5, 7020.0], [83.6, 7021.0], [83.7, 7023.0], [83.8, 7024.0], [83.9, 7024.0], [84.0, 7025.0], [84.1, 7026.0], [84.2, 7026.0], [84.3, 7027.0], [84.4, 7027.0], [84.5, 7028.0], [84.6, 7030.0], [84.7, 7032.0], [84.8, 7033.0], [84.9, 7034.0], [85.0, 7035.0], [85.1, 7036.0], [85.2, 7037.0], [85.3, 7038.0], [85.4, 7039.0], [85.5, 7040.0], [85.6, 7041.0], [85.7, 7042.0], [85.8, 7043.0], [85.9, 7043.0], [86.0, 7045.0], [86.1, 7046.0], [86.2, 7047.0], [86.3, 7049.0], [86.4, 7051.0], [86.5, 7051.0], [86.6, 7053.0], [86.7, 7054.0], [86.8, 7056.0], [86.9, 7057.0], [87.0, 7058.0], [87.1, 7060.0], [87.2, 7064.0], [87.3, 7065.0], [87.4, 7067.0], [87.5, 7068.0], [87.6, 7069.0], [87.7, 7070.0], [87.8, 7070.0], [87.9, 7071.0], [88.0, 7073.0], [88.1, 7076.0], [88.2, 7076.0], [88.3, 7077.0], [88.4, 7079.0], [88.5, 7081.0], [88.6, 7084.0], [88.7, 7085.0], [88.8, 7086.0], [88.9, 7089.0], [89.0, 7090.0], [89.1, 7091.0], [89.2, 7092.0], [89.3, 7094.0], [89.4, 7095.0], [89.5, 7099.0], [89.6, 7101.0], [89.7, 7102.0], [89.8, 7104.0], [89.9, 7106.0], [90.0, 7109.0], [90.1, 7111.0], [90.2, 7113.0], [90.3, 7114.0], [90.4, 7115.0], [90.5, 7118.0], [90.6, 7119.0], [90.7, 7120.0], [90.8, 7121.0], [90.9, 7122.0], [91.0, 7124.0], [91.1, 7124.0], [91.2, 7125.0], [91.3, 7127.0], [91.4, 7128.0], [91.5, 7132.0], [91.6, 7133.0], [91.7, 7136.0], [91.8, 7138.0], [91.9, 7139.0], [92.0, 7141.0], [92.1, 7143.0], [92.2, 7144.0], [92.3, 7145.0], [92.4, 7146.0], [92.5, 7150.0], [92.6, 7151.0], [92.7, 7153.0], [92.8, 7157.0], [92.9, 7159.0], [93.0, 7163.0], [93.1, 7164.0], [93.2, 7166.0], [93.3, 7168.0], [93.4, 7169.0], [93.5, 7170.0], [93.6, 7172.0], [93.7, 7175.0], [93.8, 7175.0], [93.9, 7177.0], [94.0, 7182.0], [94.1, 7184.0], [94.2, 7187.0], [94.3, 7190.0], [94.4, 7193.0], [94.5, 7195.0], [94.6, 7199.0], [94.7, 7201.0], [94.8, 7203.0], [94.9, 7206.0], [95.0, 7208.0], [95.1, 7210.0], [95.2, 7216.0], [95.3, 7219.0], [95.4, 7221.0], [95.5, 7224.0], [95.6, 7224.0], [95.7, 7230.0], [95.8, 7234.0], [95.9, 7237.0], [96.0, 7241.0], [96.1, 7246.0], [96.2, 7248.0], [96.3, 7251.0], [96.4, 7252.0], [96.5, 7254.0], [96.6, 7259.0], [96.7, 7262.0], [96.8, 7265.0], [96.9, 7266.0], [97.0, 7269.0], [97.1, 7272.0], [97.2, 7273.0], [97.3, 7274.0], [97.4, 7281.0], [97.5, 7288.0], [97.6, 7292.0], [97.7, 7297.0], [97.8, 7303.0], [97.9, 7308.0], [98.0, 7313.0], [98.1, 7317.0], [98.2, 7324.0], [98.3, 7327.0], [98.4, 7334.0], [98.5, 7350.0], [98.6, 7356.0], [98.7, 7358.0], [98.8, 7369.0], [98.9, 7372.0], [99.0, 7382.0], [99.1, 7387.0], [99.2, 7395.0], [99.3, 7412.0], [99.4, 7429.0], [99.5, 7437.0], [99.6, 7459.0], [99.7, 7469.0], [99.8, 7503.0], [99.9, 7587.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[0.0, 2569.0], [0.1, 2683.0], [0.2, 2876.0], [0.3, 2888.0], [0.4, 2902.0], [0.5, 2906.0], [0.6, 2917.0], [0.7, 2920.0], [0.8, 2937.0], [0.9, 2987.0], [1.0, 3039.0], [1.1, 3128.0], [1.2, 3133.0], [1.3, 3161.0], [1.4, 3191.0], [1.5, 3216.0], [1.6, 3234.0], [1.7, 3255.0], [1.8, 3287.0], [1.9, 3328.0], [2.0, 3392.0], [2.1, 3420.0], [2.2, 3488.0], [2.3, 3518.0], [2.4, 3588.0], [2.5, 3663.0], [2.6, 3680.0], [2.7, 3708.0], [2.8, 3759.0], [2.9, 3772.0], [3.0, 3800.0], [3.1, 3805.0], [3.2, 3810.0], [3.3, 3820.0], [3.4, 3824.0], [3.5, 3836.0], [3.6, 3846.0], [3.7, 3860.0], [3.8, 3895.0], [3.9, 3922.0], [4.0, 3927.0], [4.1, 3955.0], [4.2, 3987.0], [4.3, 4126.0], [4.4, 4180.0], [4.5, 4205.0], [4.6, 4237.0], [4.7, 4252.0], [4.8, 4259.0], [4.9, 4302.0], [5.0, 4328.0], [5.1, 4358.0], [5.2, 4389.0], [5.3, 4414.0], [5.4, 4430.0], [5.5, 4436.0], [5.6, 4447.0], [5.7, 4461.0], [5.8, 4468.0], [5.9, 4475.0], [6.0, 4480.0], [6.1, 4505.0], [6.2, 4525.0], [6.3, 4538.0], [6.4, 4604.0], [6.5, 4616.0], [6.6, 4668.0], [6.7, 4722.0], [6.8, 4760.0], [6.9, 4791.0], [7.0, 4798.0], [7.1, 4825.0], [7.2, 4832.0], [7.3, 4838.0], [7.4, 4860.0], [7.5, 4869.0], [7.6, 4871.0], [7.7, 4889.0], [7.8, 4900.0], [7.9, 4907.0], [8.0, 4918.0], [8.1, 4925.0], [8.2, 4950.0], [8.3, 4962.0], [8.4, 4978.0], [8.5, 5013.0], [8.6, 5052.0], [8.7, 5092.0], [8.8, 5124.0], [8.9, 5141.0], [9.0, 5170.0], [9.1, 5180.0], [9.2, 5188.0], [9.3, 5208.0], [9.4, 5214.0], [9.5, 5225.0], [9.6, 5247.0], [9.7, 5273.0], [9.8, 5281.0], [9.9, 5292.0], [10.0, 5302.0], [10.1, 5314.0], [10.2, 5333.0], [10.3, 5345.0], [10.4, 5356.0], [10.5, 5364.0], [10.6, 5366.0], [10.7, 5371.0], [10.8, 5377.0], [10.9, 5386.0], [11.0, 5390.0], [11.1, 5392.0], [11.2, 5400.0], [11.3, 5408.0], [11.4, 5413.0], [11.5, 5418.0], [11.6, 5421.0], [11.7, 5422.0], [11.8, 5426.0], [11.9, 5430.0], [12.0, 5434.0], [12.1, 5442.0], [12.2, 5444.0], [12.3, 5447.0], [12.4, 5450.0], [12.5, 5453.0], [12.6, 5457.0], [12.7, 5459.0], [12.8, 5464.0], [12.9, 5466.0], [13.0, 5469.0], [13.1, 5469.0], [13.2, 5472.0], [13.3, 5473.0], [13.4, 5477.0], [13.5, 5479.0], [13.6, 5488.0], [13.7, 5491.0], [13.8, 5493.0], [13.9, 5496.0], [14.0, 5497.0], [14.1, 5504.0], [14.2, 5505.0], [14.3, 5506.0], [14.4, 5509.0], [14.5, 5510.0], [14.6, 5511.0], [14.7, 5513.0], [14.8, 5515.0], [14.9, 5516.0], [15.0, 5517.0], [15.1, 5521.0], [15.2, 5524.0], [15.3, 5527.0], [15.4, 5530.0], [15.5, 5532.0], [15.6, 5534.0], [15.7, 5536.0], [15.8, 5539.0], [15.9, 5539.0], [16.0, 5540.0], [16.1, 5544.0], [16.2, 5544.0], [16.3, 5548.0], [16.4, 5553.0], [16.5, 5553.0], [16.6, 5556.0], [16.7, 5557.0], [16.8, 5562.0], [16.9, 5565.0], [17.0, 5566.0], [17.1, 5567.0], [17.2, 5568.0], [17.3, 5569.0], [17.4, 5571.0], [17.5, 5572.0], [17.6, 5576.0], [17.7, 5578.0], [17.8, 5578.0], [17.9, 5579.0], [18.0, 5581.0], [18.1, 5583.0], [18.2, 5583.0], [18.3, 5584.0], [18.4, 5585.0], [18.5, 5587.0], [18.6, 5588.0], [18.7, 5589.0], [18.8, 5590.0], [18.9, 5592.0], [19.0, 5593.0], [19.1, 5594.0], [19.2, 5595.0], [19.3, 5596.0], [19.4, 5598.0], [19.5, 5599.0], [19.6, 5600.0], [19.7, 5603.0], [19.8, 5604.0], [19.9, 5606.0], [20.0, 5607.0], [20.1, 5608.0], [20.2, 5609.0], [20.3, 5609.0], [20.4, 5610.0], [20.5, 5611.0], [20.6, 5612.0], [20.7, 5613.0], [20.8, 5614.0], [20.9, 5615.0], [21.0, 5619.0], [21.1, 5620.0], [21.2, 5621.0], [21.3, 5621.0], [21.4, 5623.0], [21.5, 5626.0], [21.6, 5627.0], [21.7, 5628.0], [21.8, 5629.0], [21.9, 5630.0], [22.0, 5630.0], [22.1, 5631.0], [22.2, 5633.0], [22.3, 5634.0], [22.4, 5636.0], [22.5, 5638.0], [22.6, 5641.0], [22.7, 5641.0], [22.8, 5642.0], [22.9, 5645.0], [23.0, 5646.0], [23.1, 5647.0], [23.2, 5647.0], [23.3, 5649.0], [23.4, 5650.0], [23.5, 5651.0], [23.6, 5652.0], [23.7, 5652.0], [23.8, 5654.0], [23.9, 5656.0], [24.0, 5657.0], [24.1, 5659.0], [24.2, 5660.0], [24.3, 5661.0], [24.4, 5662.0], [24.5, 5663.0], [24.6, 5665.0], [24.7, 5666.0], [24.8, 5667.0], [24.9, 5670.0], [25.0, 5672.0], [25.1, 5672.0], [25.2, 5673.0], [25.3, 5674.0], [25.4, 5674.0], [25.5, 5676.0], [25.6, 5676.0], [25.7, 5678.0], [25.8, 5678.0], [25.9, 5679.0], [26.0, 5681.0], [26.1, 5684.0], [26.2, 5685.0], [26.3, 5686.0], [26.4, 5688.0], [26.5, 5689.0], [26.6, 5690.0], [26.7, 5691.0], [26.8, 5691.0], [26.9, 5692.0], [27.0, 5694.0], [27.1, 5695.0], [27.2, 5696.0], [27.3, 5697.0], [27.4, 5700.0], [27.5, 5702.0], [27.6, 5703.0], [27.7, 5704.0], [27.8, 5705.0], [27.9, 5705.0], [28.0, 5707.0], [28.1, 5707.0], [28.2, 5708.0], [28.3, 5709.0], [28.4, 5709.0], [28.5, 5711.0], [28.6, 5711.0], [28.7, 5712.0], [28.8, 5713.0], [28.9, 5714.0], [29.0, 5715.0], [29.1, 5716.0], [29.2, 5719.0], [29.3, 5719.0], [29.4, 5720.0], [29.5, 5721.0], [29.6, 5722.0], [29.7, 5723.0], [29.8, 5724.0], [29.9, 5725.0], [30.0, 5725.0], [30.1, 5727.0], [30.2, 5728.0], [30.3, 5729.0], [30.4, 5732.0], [30.5, 5733.0], [30.6, 5734.0], [30.7, 5735.0], [30.8, 5737.0], [30.9, 5738.0], [31.0, 5740.0], [31.1, 5742.0], [31.2, 5743.0], [31.3, 5745.0], [31.4, 5745.0], [31.5, 5747.0], [31.6, 5748.0], [31.7, 5752.0], [31.8, 5752.0], [31.9, 5754.0], [32.0, 5755.0], [32.1, 5757.0], [32.2, 5758.0], [32.3, 5760.0], [32.4, 5761.0], [32.5, 5762.0], [32.6, 5763.0], [32.7, 5764.0], [32.8, 5764.0], [32.9, 5769.0], [33.0, 5771.0], [33.1, 5773.0], [33.2, 5774.0], [33.3, 5775.0], [33.4, 5776.0], [33.5, 5777.0], [33.6, 5777.0], [33.7, 5780.0], [33.8, 5781.0], [33.9, 5782.0], [34.0, 5784.0], [34.1, 5786.0], [34.2, 5787.0], [34.3, 5788.0], [34.4, 5789.0], [34.5, 5790.0], [34.6, 5793.0], [34.7, 5796.0], [34.8, 5797.0], [34.9, 5799.0], [35.0, 5800.0], [35.1, 5803.0], [35.2, 5804.0], [35.3, 5806.0], [35.4, 5810.0], [35.5, 5811.0], [35.6, 5812.0], [35.7, 5815.0], [35.8, 5817.0], [35.9, 5819.0], [36.0, 5821.0], [36.1, 5824.0], [36.2, 5826.0], [36.3, 5832.0], [36.4, 5833.0], [36.5, 5836.0], [36.6, 5838.0], [36.7, 5839.0], [36.8, 5844.0], [36.9, 5844.0], [37.0, 5846.0], [37.1, 5850.0], [37.2, 5851.0], [37.3, 5852.0], [37.4, 5854.0], [37.5, 5857.0], [37.6, 5857.0], [37.7, 5865.0], [37.8, 5866.0], [37.9, 5868.0], [38.0, 5870.0], [38.1, 5873.0], [38.2, 5874.0], [38.3, 5876.0], [38.4, 5878.0], [38.5, 5885.0], [38.6, 5887.0], [38.7, 5889.0], [38.8, 5893.0], [38.9, 5894.0], [39.0, 5897.0], [39.1, 5900.0], [39.2, 5901.0], [39.3, 5903.0], [39.4, 5904.0], [39.5, 5909.0], [39.6, 5911.0], [39.7, 5915.0], [39.8, 5918.0], [39.9, 5922.0], [40.0, 5925.0], [40.1, 5928.0], [40.2, 5933.0], [40.3, 5935.0], [40.4, 5939.0], [40.5, 5947.0], [40.6, 5955.0], [40.7, 5961.0], [40.8, 5964.0], [40.9, 5966.0], [41.0, 5970.0], [41.1, 5972.0], [41.2, 5977.0], [41.3, 5980.0], [41.4, 5987.0], [41.5, 5990.0], [41.6, 5994.0], [41.7, 5995.0], [41.8, 5997.0], [41.9, 6003.0], [42.0, 6007.0], [42.1, 6017.0], [42.2, 6020.0], [42.3, 6021.0], [42.4, 6021.0], [42.5, 6023.0], [42.6, 6024.0], [42.7, 6026.0], [42.8, 6030.0], [42.9, 6035.0], [43.0, 6038.0], [43.1, 6045.0], [43.2, 6049.0], [43.3, 6053.0], [43.4, 6056.0], [43.5, 6057.0], [43.6, 6060.0], [43.7, 6061.0], [43.8, 6062.0], [43.9, 6065.0], [44.0, 6067.0], [44.1, 6068.0], [44.2, 6070.0], [44.3, 6078.0], [44.4, 6080.0], [44.5, 6082.0], [44.6, 6088.0], [44.7, 6091.0], [44.8, 6093.0], [44.9, 6096.0], [45.0, 6100.0], [45.1, 6104.0], [45.2, 6108.0], [45.3, 6111.0], [45.4, 6117.0], [45.5, 6119.0], [45.6, 6122.0], [45.7, 6123.0], [45.8, 6125.0], [45.9, 6127.0], [46.0, 6128.0], [46.1, 6133.0], [46.2, 6134.0], [46.3, 6135.0], [46.4, 6139.0], [46.5, 6139.0], [46.6, 6140.0], [46.7, 6140.0], [46.8, 6141.0], [46.9, 6143.0], [47.0, 6147.0], [47.1, 6150.0], [47.2, 6151.0], [47.3, 6151.0], [47.4, 6154.0], [47.5, 6155.0], [47.6, 6157.0], [47.7, 6160.0], [47.8, 6162.0], [47.9, 6164.0], [48.0, 6165.0], [48.1, 6166.0], [48.2, 6166.0], [48.3, 6169.0], [48.4, 6169.0], [48.5, 6172.0], [48.6, 6174.0], [48.7, 6179.0], [48.8, 6180.0], [48.9, 6182.0], [49.0, 6183.0], [49.1, 6183.0], [49.2, 6184.0], [49.3, 6186.0], [49.4, 6188.0], [49.5, 6190.0], [49.6, 6192.0], [49.7, 6194.0], [49.8, 6195.0], [49.9, 6196.0], [50.0, 6198.0], [50.1, 6199.0], [50.2, 6199.0], [50.3, 6199.0], [50.4, 6201.0], [50.5, 6201.0], [50.6, 6203.0], [50.7, 6203.0], [50.8, 6204.0], [50.9, 6204.0], [51.0, 6206.0], [51.1, 6207.0], [51.2, 6209.0], [51.3, 6210.0], [51.4, 6211.0], [51.5, 6211.0], [51.6, 6212.0], [51.7, 6213.0], [51.8, 6214.0], [51.9, 6215.0], [52.0, 6216.0], [52.1, 6217.0], [52.2, 6217.0], [52.3, 6218.0], [52.4, 6219.0], [52.5, 6219.0], [52.6, 6220.0], [52.7, 6221.0], [52.8, 6221.0], [52.9, 6221.0], [53.0, 6222.0], [53.1, 6226.0], [53.2, 6228.0], [53.3, 6229.0], [53.4, 6229.0], [53.5, 6231.0], [53.6, 6231.0], [53.7, 6232.0], [53.8, 6233.0], [53.9, 6234.0], [54.0, 6235.0], [54.1, 6235.0], [54.2, 6236.0], [54.3, 6237.0], [54.4, 6237.0], [54.5, 6237.0], [54.6, 6238.0], [54.7, 6238.0], [54.8, 6238.0], [54.9, 6238.0], [55.0, 6239.0], [55.1, 6240.0], [55.2, 6240.0], [55.3, 6241.0], [55.4, 6242.0], [55.5, 6243.0], [55.6, 6243.0], [55.7, 6244.0], [55.8, 6245.0], [55.9, 6246.0], [56.0, 6247.0], [56.1, 6248.0], [56.2, 6249.0], [56.3, 6250.0], [56.4, 6251.0], [56.5, 6252.0], [56.6, 6253.0], [56.7, 6254.0], [56.8, 6254.0], [56.9, 6255.0], [57.0, 6255.0], [57.1, 6255.0], [57.2, 6256.0], [57.3, 6256.0], [57.4, 6256.0], [57.5, 6258.0], [57.6, 6259.0], [57.7, 6260.0], [57.8, 6261.0], [57.9, 6261.0], [58.0, 6261.0], [58.1, 6261.0], [58.2, 6262.0], [58.3, 6262.0], [58.4, 6263.0], [58.5, 6264.0], [58.6, 6265.0], [58.7, 6265.0], [58.8, 6266.0], [58.9, 6267.0], [59.0, 6268.0], [59.1, 6268.0], [59.2, 6269.0], [59.3, 6270.0], [59.4, 6271.0], [59.5, 6271.0], [59.6, 6272.0], [59.7, 6273.0], [59.8, 6273.0], [59.9, 6274.0], [60.0, 6275.0], [60.1, 6276.0], [60.2, 6276.0], [60.3, 6276.0], [60.4, 6277.0], [60.5, 6277.0], [60.6, 6277.0], [60.7, 6278.0], [60.8, 6278.0], [60.9, 6279.0], [61.0, 6279.0], [61.1, 6279.0], [61.2, 6280.0], [61.3, 6280.0], [61.4, 6281.0], [61.5, 6282.0], [61.6, 6282.0], [61.7, 6283.0], [61.8, 6283.0], [61.9, 6284.0], [62.0, 6285.0], [62.1, 6286.0], [62.2, 6287.0], [62.3, 6288.0], [62.4, 6288.0], [62.5, 6290.0], [62.6, 6290.0], [62.7, 6291.0], [62.8, 6292.0], [62.9, 6293.0], [63.0, 6293.0], [63.1, 6294.0], [63.2, 6295.0], [63.3, 6295.0], [63.4, 6296.0], [63.5, 6296.0], [63.6, 6296.0], [63.7, 6296.0], [63.8, 6297.0], [63.9, 6297.0], [64.0, 6298.0], [64.1, 6299.0], [64.2, 6300.0], [64.3, 6301.0], [64.4, 6302.0], [64.5, 6302.0], [64.6, 6303.0], [64.7, 6304.0], [64.8, 6304.0], [64.9, 6305.0], [65.0, 6306.0], [65.1, 6306.0], [65.2, 6307.0], [65.3, 6307.0], [65.4, 6308.0], [65.5, 6308.0], [65.6, 6309.0], [65.7, 6309.0], [65.8, 6309.0], [65.9, 6310.0], [66.0, 6311.0], [66.1, 6311.0], [66.2, 6311.0], [66.3, 6313.0], [66.4, 6313.0], [66.5, 6314.0], [66.6, 6314.0], [66.7, 6314.0], [66.8, 6315.0], [66.9, 6316.0], [67.0, 6316.0], [67.1, 6317.0], [67.2, 6318.0], [67.3, 6318.0], [67.4, 6319.0], [67.5, 6319.0], [67.6, 6319.0], [67.7, 6320.0], [67.8, 6320.0], [67.9, 6320.0], [68.0, 6321.0], [68.1, 6321.0], [68.2, 6322.0], [68.3, 6323.0], [68.4, 6323.0], [68.5, 6324.0], [68.6, 6325.0], [68.7, 6325.0], [68.8, 6325.0], [68.9, 6326.0], [69.0, 6327.0], [69.1, 6327.0], [69.2, 6328.0], [69.3, 6329.0], [69.4, 6330.0], [69.5, 6331.0], [69.6, 6331.0], [69.7, 6332.0], [69.8, 6333.0], [69.9, 6334.0], [70.0, 6335.0], [70.1, 6335.0], [70.2, 6336.0], [70.3, 6337.0], [70.4, 6338.0], [70.5, 6339.0], [70.6, 6339.0], [70.7, 6340.0], [70.8, 6340.0], [70.9, 6340.0], [71.0, 6340.0], [71.1, 6341.0], [71.2, 6342.0], [71.3, 6343.0], [71.4, 6344.0], [71.5, 6345.0], [71.6, 6345.0], [71.7, 6346.0], [71.8, 6346.0], [71.9, 6346.0], [72.0, 6347.0], [72.1, 6348.0], [72.2, 6348.0], [72.3, 6348.0], [72.4, 6349.0], [72.5, 6349.0], [72.6, 6350.0], [72.7, 6351.0], [72.8, 6351.0], [72.9, 6352.0], [73.0, 6353.0], [73.1, 6354.0], [73.2, 6354.0], [73.3, 6355.0], [73.4, 6355.0], [73.5, 6357.0], [73.6, 6357.0], [73.7, 6358.0], [73.8, 6359.0], [73.9, 6360.0], [74.0, 6361.0], [74.1, 6362.0], [74.2, 6364.0], [74.3, 6365.0], [74.4, 6365.0], [74.5, 6366.0], [74.6, 6366.0], [74.7, 6367.0], [74.8, 6368.0], [74.9, 6369.0], [75.0, 6369.0], [75.1, 6369.0], [75.2, 6370.0], [75.3, 6371.0], [75.4, 6371.0], [75.5, 6372.0], [75.6, 6373.0], [75.7, 6373.0], [75.8, 6375.0], [75.9, 6376.0], [76.0, 6376.0], [76.1, 6377.0], [76.2, 6378.0], [76.3, 6379.0], [76.4, 6381.0], [76.5, 6381.0], [76.6, 6382.0], [76.7, 6383.0], [76.8, 6384.0], [76.9, 6385.0], [77.0, 6386.0], [77.1, 6387.0], [77.2, 6387.0], [77.3, 6388.0], [77.4, 6388.0], [77.5, 6389.0], [77.6, 6390.0], [77.7, 6390.0], [77.8, 6391.0], [77.9, 6392.0], [78.0, 6393.0], [78.1, 6393.0], [78.2, 6394.0], [78.3, 6395.0], [78.4, 6396.0], [78.5, 6397.0], [78.6, 6399.0], [78.7, 6399.0], [78.8, 6400.0], [78.9, 6401.0], [79.0, 6402.0], [79.1, 6402.0], [79.2, 6403.0], [79.3, 6403.0], [79.4, 6404.0], [79.5, 6404.0], [79.6, 6405.0], [79.7, 6406.0], [79.8, 6407.0], [79.9, 6408.0], [80.0, 6409.0], [80.1, 6409.0], [80.2, 6410.0], [80.3, 6411.0], [80.4, 6412.0], [80.5, 6413.0], [80.6, 6413.0], [80.7, 6414.0], [80.8, 6416.0], [80.9, 6417.0], [81.0, 6420.0], [81.1, 6420.0], [81.2, 6421.0], [81.3, 6422.0], [81.4, 6422.0], [81.5, 6423.0], [81.6, 6424.0], [81.7, 6426.0], [81.8, 6427.0], [81.9, 6427.0], [82.0, 6428.0], [82.1, 6429.0], [82.2, 6430.0], [82.3, 6431.0], [82.4, 6431.0], [82.5, 6432.0], [82.6, 6433.0], [82.7, 6434.0], [82.8, 6435.0], [82.9, 6436.0], [83.0, 6437.0], [83.1, 6437.0], [83.2, 6438.0], [83.3, 6438.0], [83.4, 6439.0], [83.5, 6441.0], [83.6, 6441.0], [83.7, 6442.0], [83.8, 6443.0], [83.9, 6443.0], [84.0, 6444.0], [84.1, 6445.0], [84.2, 6446.0], [84.3, 6448.0], [84.4, 6449.0], [84.5, 6449.0], [84.6, 6450.0], [84.7, 6450.0], [84.8, 6452.0], [84.9, 6455.0], [85.0, 6456.0], [85.1, 6456.0], [85.2, 6458.0], [85.3, 6458.0], [85.4, 6459.0], [85.5, 6460.0], [85.6, 6461.0], [85.7, 6463.0], [85.8, 6463.0], [85.9, 6464.0], [86.0, 6465.0], [86.1, 6466.0], [86.2, 6467.0], [86.3, 6467.0], [86.4, 6469.0], [86.5, 6470.0], [86.6, 6471.0], [86.7, 6472.0], [86.8, 6473.0], [86.9, 6475.0], [87.0, 6476.0], [87.1, 6476.0], [87.2, 6477.0], [87.3, 6478.0], [87.4, 6480.0], [87.5, 6480.0], [87.6, 6481.0], [87.7, 6481.0], [87.8, 6482.0], [87.9, 6483.0], [88.0, 6484.0], [88.1, 6485.0], [88.2, 6488.0], [88.3, 6488.0], [88.4, 6490.0], [88.5, 6491.0], [88.6, 6492.0], [88.7, 6494.0], [88.8, 6495.0], [88.9, 6495.0], [89.0, 6496.0], [89.1, 6497.0], [89.2, 6499.0], [89.3, 6499.0], [89.4, 6500.0], [89.5, 6501.0], [89.6, 6503.0], [89.7, 6505.0], [89.8, 6507.0], [89.9, 6509.0], [90.0, 6511.0], [90.1, 6511.0], [90.2, 6512.0], [90.3, 6514.0], [90.4, 6515.0], [90.5, 6517.0], [90.6, 6517.0], [90.7, 6519.0], [90.8, 6520.0], [90.9, 6522.0], [91.0, 6524.0], [91.1, 6526.0], [91.2, 6528.0], [91.3, 6529.0], [91.4, 6530.0], [91.5, 6532.0], [91.6, 6534.0], [91.7, 6535.0], [91.8, 6536.0], [91.9, 6539.0], [92.0, 6540.0], [92.1, 6541.0], [92.2, 6543.0], [92.3, 6547.0], [92.4, 6549.0], [92.5, 6551.0], [92.6, 6553.0], [92.7, 6554.0], [92.8, 6555.0], [92.9, 6556.0], [93.0, 6558.0], [93.1, 6559.0], [93.2, 6560.0], [93.3, 6562.0], [93.4, 6562.0], [93.5, 6565.0], [93.6, 6566.0], [93.7, 6568.0], [93.8, 6569.0], [93.9, 6574.0], [94.0, 6576.0], [94.1, 6578.0], [94.2, 6581.0], [94.3, 6582.0], [94.4, 6584.0], [94.5, 6585.0], [94.6, 6587.0], [94.7, 6589.0], [94.8, 6590.0], [94.9, 6592.0], [95.0, 6592.0], [95.1, 6593.0], [95.2, 6595.0], [95.3, 6599.0], [95.4, 6599.0], [95.5, 6602.0], [95.6, 6603.0], [95.7, 6604.0], [95.8, 6609.0], [95.9, 6611.0], [96.0, 6614.0], [96.1, 6621.0], [96.2, 6624.0], [96.3, 6626.0], [96.4, 6628.0], [96.5, 6631.0], [96.6, 6634.0], [96.7, 6640.0], [96.8, 6640.0], [96.9, 6644.0], [97.0, 6649.0], [97.1, 6654.0], [97.2, 6658.0], [97.3, 6663.0], [97.4, 6668.0], [97.5, 6678.0], [97.6, 6683.0], [97.7, 6686.0], [97.8, 6691.0], [97.9, 6700.0], [98.0, 6707.0], [98.1, 6711.0], [98.2, 6715.0], [98.3, 6717.0], [98.4, 6726.0], [98.5, 6733.0], [98.6, 6735.0], [98.7, 6745.0], [98.8, 6749.0], [98.9, 6754.0], [99.0, 6755.0], [99.1, 6772.0], [99.2, 6775.0], [99.3, 6782.0], [99.4, 6798.0], [99.5, 6808.0], [99.6, 6828.0], [99.7, 6843.0], [99.8, 6866.0], [99.9, 6904.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 2500.0, "maxY": 437.0, "series": [{"data": [[2800.0, 1.0], [3000.0, 3.0], [3100.0, 16.0], [3200.0, 9.0], [3300.0, 3.0], [3400.0, 13.0], [3500.0, 5.0], [3600.0, 16.0], [3700.0, 5.0], [3800.0, 6.0], [3900.0, 6.0], [4000.0, 10.0], [4100.0, 15.0], [4200.0, 11.0], [4300.0, 12.0], [4400.0, 6.0], [4600.0, 9.0], [4500.0, 11.0], [4700.0, 12.0], [4800.0, 12.0], [4900.0, 18.0], [5000.0, 9.0], [5100.0, 6.0], [5200.0, 19.0], [5300.0, 21.0], [5400.0, 13.0], [5500.0, 15.0], [5600.0, 12.0], [5700.0, 12.0], [5800.0, 22.0], [5900.0, 76.0], [6000.0, 161.0], [6100.0, 280.0], [6200.0, 298.0], [6300.0, 268.0], [6400.0, 161.0], [6500.0, 93.0], [6600.0, 78.0], [6700.0, 119.0], [6800.0, 261.0], [6900.0, 331.0], [7100.0, 151.0], [7000.0, 234.0], [7200.0, 95.0], [7300.0, 44.0], [7400.0, 16.0], [7500.0, 4.0], [7600.0, 1.0], [7700.0, 1.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[2500.0, 2.0], [2600.0, 2.0], [2700.0, 1.0], [2800.0, 6.0], [2900.0, 17.0], [3000.0, 5.0], [3100.0, 10.0], [3200.0, 12.0], [3300.0, 7.0], [3400.0, 5.0], [3500.0, 6.0], [3600.0, 5.0], [3700.0, 12.0], [3800.0, 25.0], [3900.0, 12.0], [4000.0, 2.0], [4200.0, 12.0], [4300.0, 11.0], [4100.0, 6.0], [4500.0, 10.0], [4400.0, 24.0], [4600.0, 7.0], [4700.0, 12.0], [4800.0, 23.0], [4900.0, 19.0], [5100.0, 17.0], [5000.0, 9.0], [5200.0, 21.0], [5300.0, 36.0], [5400.0, 85.0], [5500.0, 165.0], [5600.0, 235.0], [5700.0, 227.0], [5800.0, 123.0], [5900.0, 83.0], [6000.0, 95.0], [6100.0, 160.0], [6200.0, 416.0], [6300.0, 437.0], [6400.0, 319.0], [6500.0, 183.0], [6600.0, 73.0], [6700.0, 47.0], [6800.0, 13.0], [6900.0, 3.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 6000.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6000.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 6000.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.25, "minX": 1.6787876E12, "maxY": 30.0, "series": [{"data": [[1.67878784E12, 30.0], [1.67878818E12, 30.0], [1.67878852E12, 30.0], [1.67878775E12, 30.0], [1.67878886E12, 22.22222222222222], [1.67878809E12, 30.0], [1.67878843E12, 30.0], [1.67878877E12, 29.06666666666667], [1.67878766E12, 16.710526315789476], [1.678788E12, 30.0], [1.67878834E12, 30.0], [1.67878868E12, 30.0], [1.67878791E12, 30.0], [1.67878825E12, 30.0], [1.67878859E12, 30.0], [1.67878893E12, 4.875], [1.67878782E12, 30.0], [1.67878816E12, 30.0], [1.6787885E12, 30.0], [1.67878773E12, 30.0], [1.67878884E12, 25.0], [1.67878807E12, 30.0], [1.67878841E12, 30.0], [1.67878875E12, 30.0], [1.67878764E12, 11.766666666666667], [1.67878798E12, 30.0], [1.67878832E12, 30.0], [1.67878866E12, 30.0], [1.67878789E12, 30.0], [1.67878823E12, 30.0], [1.67878857E12, 30.0], [1.67878891E12, 10.593749999999998], [1.6787878E12, 30.0], [1.67878814E12, 30.0], [1.67878848E12, 30.0], [1.67878771E12, 29.047619047619047], [1.67878882E12, 28.0], [1.67878805E12, 30.0], [1.67878839E12, 30.0], [1.67878873E12, 30.0], [1.67878762E12, 6.789473684210526], [1.67878796E12, 30.0], [1.6787883E12, 30.0], [1.67878864E12, 30.0], [1.67878787E12, 30.0], [1.67878821E12, 30.0], [1.67878855E12, 30.0], [1.67878889E12, 15.05128205128205], [1.67878778E12, 30.0], [1.67878812E12, 30.0], [1.67878846E12, 30.0], [1.67878769E12, 24.22222222222222], [1.6787888E12, 29.0], [1.67878803E12, 30.0], [1.67878837E12, 30.0], [1.67878871E12, 30.0], [1.6787876E12, 2.3333333333333335], [1.67878794E12, 30.0], [1.67878828E12, 30.0], [1.67878862E12, 30.0], [1.67878785E12, 30.0], [1.67878896E12, 1.25], [1.67878819E12, 30.0], [1.67878853E12, 30.0], [1.67878887E12, 19.951219512195127], [1.67878776E12, 30.0], [1.6787881E12, 30.0], [1.67878844E12, 30.0], [1.67878767E12, 19.10526315789474], [1.67878878E12, 29.0], [1.67878801E12, 30.0], [1.67878835E12, 30.0], [1.67878869E12, 30.0], [1.67878792E12, 30.0], [1.67878826E12, 30.0], [1.6787886E12, 30.0], [1.67878783E12, 30.0], [1.67878894E12, 3.0909090909090913], [1.67878817E12, 30.0], [1.67878851E12, 30.0], [1.67878885E12, 24.558139534883725], [1.67878774E12, 30.0], [1.67878808E12, 30.0], [1.67878842E12, 30.0], [1.67878765E12, 14.172413793103448], [1.67878876E12, 30.0], [1.67878799E12, 30.0], [1.67878833E12, 30.0], [1.67878867E12, 30.0], [1.6787879E12, 30.0], [1.67878824E12, 30.0], [1.67878858E12, 30.0], [1.67878781E12, 30.0], [1.67878892E12, 7.227272727272727], [1.67878815E12, 30.0], [1.67878849E12, 30.0], [1.67878883E12, 25.91304347826087], [1.67878772E12, 30.0], [1.67878806E12, 30.0], [1.6787884E12, 30.0], [1.67878763E12, 9.279999999999998], [1.67878874E12, 30.0], [1.67878797E12, 30.0], [1.67878831E12, 30.0], [1.67878865E12, 30.0], [1.67878788E12, 30.0], [1.67878822E12, 30.0], [1.67878856E12, 30.0], [1.67878779E12, 30.0], [1.6787889E12, 12.0], [1.67878813E12, 30.0], [1.67878847E12, 30.0], [1.67878881E12, 28.042553191489365], [1.6787877E12, 26.75555555555556], [1.67878804E12, 30.0], [1.67878838E12, 30.0], [1.67878761E12, 4.230769230769231], [1.67878872E12, 30.0], [1.67878795E12, 30.0], [1.67878829E12, 30.0], [1.67878863E12, 30.0], [1.67878786E12, 30.0], [1.6787882E12, 30.0], [1.67878854E12, 30.0], [1.67878777E12, 30.0], [1.67878888E12, 17.473684210526315], [1.67878811E12, 30.0], [1.67878845E12, 30.0], [1.67878879E12, 29.0], [1.67878768E12, 21.634146341463417], [1.67878802E12, 30.0], [1.67878836E12, 30.0], [1.6787887E12, 30.0], [1.67878793E12, 30.0], [1.67878827E12, 30.0], [1.67878861E12, 30.0], [1.67878895E12, 2.1428571428571432]], "isOverall": false, "label": "线程组", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67878896E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2843.625, "minX": 1.0, "maxY": 6626.249091643116, "series": [{"data": [[2.0, 3466.1666666666665], [3.0, 3180.0], [4.0, 3169.1428571428573], [5.0, 3281.4], [6.0, 3298.0], [7.0, 3413.285714285714], [8.0, 3592.666666666667], [9.0, 3639.666666666666], [10.0, 3886.5555555555557], [11.0, 3821.625], [12.0, 4045.0], [13.0, 4144.5], [14.0, 4286.599999999999], [15.0, 4480.571428571428], [16.0, 4602.333333333333], [1.0, 3067.0], [17.0, 4687.695652173913], [18.0, 4875.176470588235], [19.0, 4836.583333333333], [20.0, 5064.217391304348], [21.0, 5170.222222222222], [22.0, 5472.777777777777], [23.0, 5683.678571428572], [24.0, 5385.166666666667], [25.0, 5870.096774193548], [26.0, 5956.999999999999], [27.0, 6122.727272727273], [28.0, 6241.583333333333], [29.0, 6566.227722772279], [30.0, 6626.249091643116]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[28.40633333333334, 6397.939666666656]], "isOverall": false, "label": "RAMP-Aggregated", "isController": false}, {"data": [[2.0, 2886.3333333333335], [3.0, 2871.375], [4.0, 2843.625], [5.0, 2938.5], [6.0, 3070.2], [7.0, 3175.8333333333335], [8.0, 3204.875], [9.0, 3351.4444444444443], [10.0, 3424.25], [11.0, 3576.3000000000006], [12.0, 3811.7037037037035], [13.0, 3808.2000000000003], [14.0, 4064.3333333333335], [15.0, 4122.0], [16.0, 4293.75], [1.0, 2915.0], [17.0, 4370.720000000001], [18.0, 4500.153846153846], [19.0, 4416.727272727273], [20.0, 4761.961538461538], [21.0, 4903.588235294118], [22.0, 4898.499999999999], [23.0, 5386.9], [24.0, 5090.1], [25.0, 5470.854838709676], [26.0, 5588.857142857143], [27.0, 5550.071428571428], [28.0, 5809.924528301887], [29.0, 6069.394230769229], [30.0, 6136.973737373716]], "isOverall": false, "label": "原生", "isController": false}, {"data": [[28.40133333333335, 5925.286666666676]], "isOverall": false, "label": "原生-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 30.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.6787876E12, "maxY": 4.9E-324, "series": [{"data": [[1.67878784E12, 0.0], [1.67878818E12, 0.0], [1.67878852E12, 0.0], [1.67878775E12, 0.0], [1.67878886E12, 0.0], [1.67878809E12, 0.0], [1.67878843E12, 0.0], [1.67878877E12, 0.0], [1.67878766E12, 0.0], [1.678788E12, 0.0], [1.67878834E12, 0.0], [1.67878868E12, 0.0], [1.67878791E12, 0.0], [1.67878825E12, 0.0], [1.67878859E12, 0.0], [1.67878893E12, 0.0], [1.67878782E12, 0.0], [1.67878816E12, 0.0], [1.6787885E12, 0.0], [1.67878773E12, 0.0], [1.67878884E12, 0.0], [1.67878807E12, 0.0], [1.67878841E12, 0.0], [1.67878875E12, 0.0], [1.67878764E12, 0.0], [1.67878798E12, 0.0], [1.67878832E12, 0.0], [1.67878866E12, 0.0], [1.67878789E12, 0.0], [1.67878823E12, 0.0], [1.67878857E12, 0.0], [1.67878891E12, 0.0], [1.6787878E12, 0.0], [1.67878814E12, 0.0], [1.67878848E12, 0.0], [1.67878771E12, 0.0], [1.67878882E12, 0.0], [1.67878805E12, 0.0], [1.67878839E12, 0.0], [1.67878873E12, 0.0], [1.67878762E12, 0.0], [1.67878796E12, 0.0], [1.6787883E12, 0.0], [1.67878864E12, 0.0], [1.67878787E12, 0.0], [1.67878821E12, 0.0], [1.67878855E12, 0.0], [1.67878889E12, 0.0], [1.67878778E12, 0.0], [1.67878812E12, 0.0], [1.67878846E12, 0.0], [1.67878769E12, 0.0], [1.6787888E12, 0.0], [1.67878803E12, 0.0], [1.67878837E12, 0.0], [1.67878871E12, 0.0], [1.6787876E12, 0.0], [1.67878794E12, 0.0], [1.67878828E12, 0.0], [1.67878862E12, 0.0], [1.67878785E12, 0.0], [1.67878896E12, 0.0], [1.67878819E12, 0.0], [1.67878853E12, 0.0], [1.67878887E12, 0.0], [1.67878776E12, 0.0], [1.6787881E12, 0.0], [1.67878844E12, 0.0], [1.67878767E12, 0.0], [1.67878878E12, 0.0], [1.67878801E12, 0.0], [1.67878835E12, 0.0], [1.67878869E12, 0.0], [1.67878792E12, 0.0], [1.67878826E12, 0.0], [1.6787886E12, 0.0], [1.67878783E12, 0.0], [1.67878894E12, 0.0], [1.67878817E12, 0.0], [1.67878851E12, 0.0], [1.67878885E12, 0.0], [1.67878774E12, 0.0], [1.67878808E12, 0.0], [1.67878842E12, 0.0], [1.67878765E12, 0.0], [1.67878876E12, 0.0], [1.67878799E12, 0.0], [1.67878833E12, 0.0], [1.67878867E12, 0.0], [1.6787879E12, 0.0], [1.67878824E12, 0.0], [1.67878858E12, 0.0], [1.67878781E12, 0.0], [1.67878892E12, 0.0], [1.67878815E12, 0.0], [1.67878849E12, 0.0], [1.67878883E12, 0.0], [1.67878772E12, 0.0], [1.67878806E12, 0.0], [1.6787884E12, 0.0], [1.67878763E12, 0.0], [1.67878874E12, 0.0], [1.67878797E12, 0.0], [1.67878831E12, 0.0], [1.67878865E12, 0.0], [1.67878788E12, 0.0], [1.67878822E12, 0.0], [1.67878856E12, 0.0], [1.67878779E12, 0.0], [1.6787889E12, 0.0], [1.67878813E12, 0.0], [1.67878847E12, 0.0], [1.67878881E12, 0.0], [1.6787877E12, 0.0], [1.67878804E12, 0.0], [1.67878838E12, 0.0], [1.67878761E12, 0.0], [1.67878872E12, 0.0], [1.67878795E12, 0.0], [1.67878829E12, 0.0], [1.67878863E12, 0.0], [1.67878786E12, 0.0], [1.6787882E12, 0.0], [1.67878854E12, 0.0], [1.67878777E12, 0.0], [1.67878888E12, 0.0], [1.67878811E12, 0.0], [1.67878845E12, 0.0], [1.67878879E12, 0.0], [1.67878768E12, 0.0], [1.67878802E12, 0.0], [1.67878836E12, 0.0], [1.6787887E12, 0.0], [1.67878793E12, 0.0], [1.67878827E12, 0.0], [1.67878861E12, 0.0], [1.67878895E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.67878784E12, 0.0], [1.67878818E12, 0.0], [1.67878852E12, 0.0], [1.67878775E12, 0.0], [1.67878886E12, 0.0], [1.67878809E12, 0.0], [1.67878843E12, 0.0], [1.67878877E12, 0.0], [1.67878766E12, 0.0], [1.678788E12, 0.0], [1.67878834E12, 0.0], [1.67878868E12, 0.0], [1.67878791E12, 0.0], [1.67878825E12, 0.0], [1.67878859E12, 0.0], [1.67878893E12, 0.0], [1.67878782E12, 0.0], [1.67878816E12, 0.0], [1.6787885E12, 0.0], [1.67878773E12, 0.0], [1.67878884E12, 0.0], [1.67878807E12, 0.0], [1.67878841E12, 0.0], [1.67878875E12, 0.0], [1.67878764E12, 0.0], [1.67878798E12, 0.0], [1.67878832E12, 0.0], [1.67878866E12, 0.0], [1.67878789E12, 0.0], [1.67878823E12, 0.0], [1.67878857E12, 0.0], [1.67878891E12, 0.0], [1.6787878E12, 0.0], [1.67878814E12, 0.0], [1.67878848E12, 0.0], [1.67878771E12, 0.0], [1.67878882E12, 0.0], [1.67878805E12, 0.0], [1.67878839E12, 0.0], [1.67878873E12, 0.0], [1.67878762E12, 0.0], [1.67878796E12, 0.0], [1.6787883E12, 0.0], [1.67878864E12, 0.0], [1.67878787E12, 0.0], [1.67878821E12, 0.0], [1.67878855E12, 0.0], [1.67878889E12, 0.0], [1.67878778E12, 0.0], [1.67878812E12, 0.0], [1.67878846E12, 0.0], [1.67878769E12, 0.0], [1.6787888E12, 0.0], [1.67878803E12, 0.0], [1.67878837E12, 0.0], [1.67878871E12, 0.0], [1.6787876E12, 0.0], [1.67878794E12, 0.0], [1.67878828E12, 0.0], [1.67878862E12, 0.0], [1.67878785E12, 0.0], [1.67878896E12, 0.0], [1.67878819E12, 0.0], [1.67878853E12, 0.0], [1.67878887E12, 0.0], [1.67878776E12, 0.0], [1.6787881E12, 0.0], [1.67878844E12, 0.0], [1.67878767E12, 0.0], [1.67878878E12, 0.0], [1.67878801E12, 0.0], [1.67878835E12, 0.0], [1.67878869E12, 0.0], [1.67878792E12, 0.0], [1.67878826E12, 0.0], [1.6787886E12, 0.0], [1.67878783E12, 0.0], [1.67878894E12, 0.0], [1.67878817E12, 0.0], [1.67878851E12, 0.0], [1.67878885E12, 0.0], [1.67878774E12, 0.0], [1.67878808E12, 0.0], [1.67878842E12, 0.0], [1.67878765E12, 0.0], [1.67878876E12, 0.0], [1.67878799E12, 0.0], [1.67878833E12, 0.0], [1.67878867E12, 0.0], [1.6787879E12, 0.0], [1.67878824E12, 0.0], [1.67878858E12, 0.0], [1.67878781E12, 0.0], [1.67878892E12, 0.0], [1.67878815E12, 0.0], [1.67878849E12, 0.0], [1.67878883E12, 0.0], [1.67878772E12, 0.0], [1.67878806E12, 0.0], [1.6787884E12, 0.0], [1.67878763E12, 0.0], [1.67878874E12, 0.0], [1.67878797E12, 0.0], [1.67878831E12, 0.0], [1.67878865E12, 0.0], [1.67878788E12, 0.0], [1.67878822E12, 0.0], [1.67878856E12, 0.0], [1.67878779E12, 0.0], [1.6787889E12, 0.0], [1.67878813E12, 0.0], [1.67878847E12, 0.0], [1.67878881E12, 0.0], [1.6787877E12, 0.0], [1.67878804E12, 0.0], [1.67878838E12, 0.0], [1.67878761E12, 0.0], [1.67878872E12, 0.0], [1.67878795E12, 0.0], [1.67878829E12, 0.0], [1.67878863E12, 0.0], [1.67878786E12, 0.0], [1.6787882E12, 0.0], [1.67878854E12, 0.0], [1.67878777E12, 0.0], [1.67878888E12, 0.0], [1.67878811E12, 0.0], [1.67878845E12, 0.0], [1.67878879E12, 0.0], [1.67878768E12, 0.0], [1.67878802E12, 0.0], [1.67878836E12, 0.0], [1.6787887E12, 0.0], [1.67878793E12, 0.0], [1.67878827E12, 0.0], [1.67878861E12, 0.0], [1.67878895E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67878896E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2726.2, "minX": 1.6787876E12, "maxY": 6945.695652173914, "series": [{"data": [[1.67878784E12, 6617.666666666666], [1.67878818E12, 6620.541666666666], [1.67878852E12, 6563.818181818182], [1.67878775E12, 6537.428571428571], [1.67878886E12, 5657.043478260868], [1.67878809E12, 6650.333333333334], [1.67878843E12, 6751.434782608695], [1.67878877E12, 6736.818181818183], [1.67878766E12, 4621.894736842104], [1.678788E12, 6801.999999999998], [1.67878834E12, 6650.041666666666], [1.67878868E12, 6804.999999999999], [1.67878791E12, 6506.434782608696], [1.67878825E12, 6743.608695652174], [1.67878859E12, 6607.772727272727], [1.67878893E12, 3243.4285714285716], [1.67878782E12, 6591.916666666668], [1.67878816E12, 6701.291666666666], [1.6787885E12, 6747.136363636363], [1.67878773E12, 6484.090909090909], [1.67878884E12, 5949.454545454544], [1.67878807E12, 6584.458333333333], [1.67878841E12, 6548.499999999999], [1.67878875E12, 6569.52], [1.67878764E12, 3917.0], [1.67878798E12, 6523.42857142857], [1.67878832E12, 6564.24], [1.67878866E12, 6813.086956521739], [1.67878789E12, 6537.307692307691], [1.67878823E12, 6592.208333333334], [1.67878857E12, 6563.8076923076915], [1.67878891E12, 3874.0714285714284], [1.6787878E12, 6454.799999999999], [1.67878814E12, 6491.416666666667], [1.67878848E12, 6525.160000000001], [1.67878771E12, 6349.454545454546], [1.67878882E12, 6227.434782608696], [1.67878805E12, 6512.347826086956], [1.67878839E12, 6484.565217391303], [1.67878873E12, 6634.708333333334], [1.67878762E12, 3366.222222222222], [1.67878796E12, 6509.681818181818], [1.6787883E12, 6489.91304347826], [1.67878864E12, 6748.041666666666], [1.67878787E12, 6862.5599999999995], [1.67878821E12, 6551.130434782609], [1.67878855E12, 6672.090909090908], [1.67878889E12, 4512.249999999999], [1.67878778E12, 6599.130434782608], [1.67878812E12, 6610.375000000001], [1.67878846E12, 6587.230769230769], [1.67878769E12, 5584.739130434783], [1.6787888E12, 6614.000000000001], [1.67878803E12, 6502.391304347826], [1.67878837E12, 6513.3], [1.67878871E12, 6557.16], [1.6787876E12, 4063.5], [1.67878794E12, 6738.652173913043], [1.67878828E12, 6581.043478260869], [1.67878862E12, 6723.52], [1.67878785E12, 6627.884615384615], [1.67878896E12, 3067.0], [1.67878819E12, 6945.695652173914], [1.67878853E12, 6794.6], [1.67878887E12, 5054.250000000001], [1.67878776E12, 6719.708333333332], [1.6787881E12, 6628.916666666667], [1.67878844E12, 6630.080000000001], [1.67878767E12, 4864.150000000001], [1.67878878E12, 6589.000000000001], [1.67878801E12, 6599.954545454546], [1.67878835E12, 6653.714285714286], [1.67878869E12, 6817.608695652176], [1.67878792E12, 6445.624999999999], [1.67878826E12, 6707.333333333333], [1.6787886E12, 6760.380952380951], [1.67878783E12, 6653.090909090908], [1.67878894E12, 3172.4], [1.67878817E12, 6624.809523809524], [1.67878851E12, 6709.291666666668], [1.67878885E12, 5738.761904761905], [1.67878774E12, 6678.333333333335], [1.67878808E12, 6508.0], [1.67878842E12, 6678.304347826087], [1.67878765E12, 4312.214285714285], [1.67878876E12, 6853.666666666665], [1.67878799E12, 6523.291666666667], [1.67878833E12, 6631.565217391305], [1.67878867E12, 6566.043478260869], [1.6787879E12, 6491.800000000001], [1.67878824E12, 6531.391304347825], [1.67878858E12, 6818.958333333333], [1.67878781E12, 6531.64], [1.67878892E12, 3447.2727272727275], [1.67878815E12, 6609.2], [1.67878849E12, 6577.521739130434], [1.67878883E12, 6159.549999999999], [1.67878772E12, 6476.153846153847], [1.67878806E12, 6546.166666666665], [1.6787884E12, 6579.958333333334], [1.67878763E12, 3666.7692307692305], [1.67878874E12, 6641.454545454546], [1.67878797E12, 6459.52], [1.67878831E12, 6599.045454545452], [1.67878865E12, 6683.8], [1.67878788E12, 6511.55], [1.67878822E12, 6552.961538461538], [1.67878856E12, 6582.95652173913], [1.67878779E12, 6458.652173913044], [1.6787889E12, 4065.8], [1.67878813E12, 6506.958333333334], [1.67878847E12, 6573.173913043478], [1.67878881E12, 6301.956521739131], [1.6787877E12, 5972.000000000001], [1.67878804E12, 6706.624999999999], [1.67878838E12, 6677.653846153846], [1.67878761E12, 3208.25], [1.67878872E12, 6558.954545454546], [1.67878795E12, 6646.185185185186], [1.67878829E12, 6640.799999999998], [1.67878863E12, 6826.349999999999], [1.67878786E12, 6890.863636363637], [1.6787882E12, 6757.454545454545], [1.67878854E12, 6789.0], [1.67878777E12, 6501.416666666666], [1.67878888E12, 4871.5], [1.67878811E12, 6685.2380952380945], [1.67878845E12, 6555.571428571428], [1.67878879E12, 6384.3], [1.67878768E12, 5232.590909090909], [1.67878802E12, 6681.708333333334], [1.67878836E12, 6838.653846153846], [1.6787887E12, 6541.538461538462], [1.67878793E12, 6540.391304347826], [1.67878827E12, 6623.346153846153], [1.67878861E12, 6869.958333333334], [1.67878895E12, 3167.5]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[1.67878784E12, 6120.320000000001], [1.67878818E12, 6141.320000000001], [1.67878852E12, 6096.2], [1.67878775E12, 6069.363636363637], [1.67878886E12, 5217.59090909091], [1.67878809E12, 6123.583333333333], [1.67878843E12, 6254.318181818182], [1.67878877E12, 6223.391304347826], [1.67878766E12, 4198.578947368422], [1.678788E12, 6372.999999999999], [1.67878834E12, 6211.076923076924], [1.67878868E12, 6252.5199999999995], [1.67878791E12, 5999.818181818183], [1.67878825E12, 6246.96], [1.67878859E12, 6125.923076923077], [1.67878893E12, 3037.3333333333335], [1.67878782E12, 6031.5], [1.67878816E12, 6176.416666666666], [1.6787885E12, 6237.000000000001], [1.67878773E12, 6049.190476190476], [1.67878884E12, 5527.166666666666], [1.67878807E12, 6053.04], [1.67878841E12, 6084.041666666667], [1.67878875E12, 6154.318181818182], [1.67878764E12, 3570.357142857143], [1.67878798E12, 6009.541666666666], [1.67878832E12, 6074.160000000001], [1.67878866E12, 6250.454545454546], [1.67878789E12, 6049.416666666667], [1.67878823E12, 6105.095238095238], [1.67878857E12, 6045.52], [1.67878891E12, 3690.7777777777774], [1.6787878E12, 5994.1538461538485], [1.67878814E12, 6067.695652173913], [1.67878848E12, 6047.666666666667], [1.67878771E12, 5907.299999999999], [1.67878882E12, 5823.400000000001], [1.67878805E12, 6039.440000000001], [1.67878839E12, 6045.458333333333], [1.67878873E12, 6068.863636363638], [1.67878762E12, 3032.8], [1.67878796E12, 5976.5], [1.6787883E12, 6006.608695652173], [1.67878864E12, 6208.173913043479], [1.67878787E12, 6359.875], [1.67878821E12, 6085.40909090909], [1.67878855E12, 6135.26923076923], [1.67878889E12, 4313.631578947368], [1.67878778E12, 6109.130434782608], [1.67878812E12, 6155.545454545454], [1.67878846E12, 6132.423076923076], [1.67878769E12, 5172.227272727272], [1.6787888E12, 6071.173913043479], [1.67878803E12, 6034.24], [1.67878837E12, 6068.619047619047], [1.67878871E12, 6024.666666666668], [1.6787876E12, 2921.0], [1.67878794E12, 6235.666666666666], [1.67878828E12, 6139.699999999999], [1.67878862E12, 6224.090909090909], [1.67878785E12, 6060.181818181818], [1.67878896E12, 2902.0], [1.67878819E12, 6414.800000000001], [1.67878853E12, 6258.96], [1.67878887E12, 4800.047619047619], [1.67878776E12, 6244.36], [1.6787881E12, 6190.583333333333], [1.67878844E12, 6184.826086956522], [1.67878767E12, 4519.888888888889], [1.67878878E12, 6049.919999999999], [1.67878801E12, 6134.363636363637], [1.67878835E12, 6190.476190476191], [1.67878869E12, 6185.333333333333], [1.67878792E12, 6028.653846153844], [1.67878826E12, 6169.681818181818], [1.6787886E12, 6316.75], [1.67878783E12, 6174.0], [1.67878894E12, 2911.0], [1.67878817E12, 6174.409090909091], [1.67878851E12, 6191.600000000001], [1.67878885E12, 5425.0], [1.67878774E12, 6228.3200000000015], [1.67878808E12, 6059.363636363637], [1.67878842E12, 6215.240000000001], [1.67878765E12, 3964.133333333333], [1.67878876E12, 6305.818181818182], [1.67878799E12, 6103.217391304348], [1.67878833E12, 6153.42105263158], [1.67878867E12, 6088.0], [1.6787879E12, 6048.708333333333], [1.67878824E12, 6085.625], [1.67878858E12, 6237.684210526315], [1.67878781E12, 6065.78947368421], [1.67878892E12, 3253.090909090909], [1.67878815E12, 6162.041666666666], [1.67878849E12, 6073.782608695652], [1.67878883E12, 5684.730769230769], [1.67878772E12, 6056.807692307692], [1.67878806E12, 6039.0], [1.6787884E12, 6095.772727272728], [1.67878763E12, 3235.333333333333], [1.67878874E12, 6033.000000000001], [1.67878797E12, 6012.038461538461], [1.67878831E12, 6157.875], [1.67878865E12, 6210.681818181818], [1.67878788E12, 6031.541666666666], [1.67878822E12, 6049.518518518518], [1.67878856E12, 6073.666666666666], [1.67878779E12, 6002.217391304348], [1.6787889E12, 3831.5], [1.67878813E12, 6033.4], [1.67878847E12, 6133.727272727274], [1.67878881E12, 5778.666666666667], [1.6787877E12, 5508.636363636363], [1.67878804E12, 6157.333333333334], [1.67878838E12, 6133.719999999999], [1.67878761E12, 2726.2], [1.67878872E12, 6066.423076923077], [1.67878795E12, 6163.3076923076915], [1.67878829E12, 6220.851851851851], [1.67878863E12, 6378.160000000002], [1.67878786E12, 6313.0952380952385], [1.6787882E12, 6296.999999999999], [1.67878854E12, 6259.666666666667], [1.67878777E12, 5956.64], [1.67878888E12, 4494.7], [1.67878811E12, 6093.375], [1.67878845E12, 6077.375], [1.67878879E12, 6055.17391304348], [1.67878768E12, 4810.684210526316], [1.67878802E12, 6284.160000000001], [1.67878836E12, 6261.814814814814], [1.6787887E12, 6056.956521739131], [1.67878793E12, 6084.291666666666], [1.67878827E12, 6204.208333333333], [1.67878861E12, 6370.857142857143], [1.67878895E12, 2900.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67878896E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6787876E12, "maxY": 4.9E-324, "series": [{"data": [[1.67878784E12, 0.0], [1.67878818E12, 0.0], [1.67878852E12, 0.0], [1.67878775E12, 0.0], [1.67878886E12, 0.0], [1.67878809E12, 0.0], [1.67878843E12, 0.0], [1.67878877E12, 0.0], [1.67878766E12, 0.0], [1.678788E12, 0.0], [1.67878834E12, 0.0], [1.67878868E12, 0.0], [1.67878791E12, 0.0], [1.67878825E12, 0.0], [1.67878859E12, 0.0], [1.67878893E12, 0.0], [1.67878782E12, 0.0], [1.67878816E12, 0.0], [1.6787885E12, 0.0], [1.67878773E12, 0.0], [1.67878884E12, 0.0], [1.67878807E12, 0.0], [1.67878841E12, 0.0], [1.67878875E12, 0.0], [1.67878764E12, 0.0], [1.67878798E12, 0.0], [1.67878832E12, 0.0], [1.67878866E12, 0.0], [1.67878789E12, 0.0], [1.67878823E12, 0.0], [1.67878857E12, 0.0], [1.67878891E12, 0.0], [1.6787878E12, 0.0], [1.67878814E12, 0.0], [1.67878848E12, 0.0], [1.67878771E12, 0.0], [1.67878882E12, 0.0], [1.67878805E12, 0.0], [1.67878839E12, 0.0], [1.67878873E12, 0.0], [1.67878762E12, 0.0], [1.67878796E12, 0.0], [1.6787883E12, 0.0], [1.67878864E12, 0.0], [1.67878787E12, 0.0], [1.67878821E12, 0.0], [1.67878855E12, 0.0], [1.67878889E12, 0.0], [1.67878778E12, 0.0], [1.67878812E12, 0.0], [1.67878846E12, 0.0], [1.67878769E12, 0.0], [1.6787888E12, 0.0], [1.67878803E12, 0.0], [1.67878837E12, 0.0], [1.67878871E12, 0.0], [1.6787876E12, 0.0], [1.67878794E12, 0.0], [1.67878828E12, 0.0], [1.67878862E12, 0.0], [1.67878785E12, 0.0], [1.67878896E12, 0.0], [1.67878819E12, 0.0], [1.67878853E12, 0.0], [1.67878887E12, 0.0], [1.67878776E12, 0.0], [1.6787881E12, 0.0], [1.67878844E12, 0.0], [1.67878767E12, 0.0], [1.67878878E12, 0.0], [1.67878801E12, 0.0], [1.67878835E12, 0.0], [1.67878869E12, 0.0], [1.67878792E12, 0.0], [1.67878826E12, 0.0], [1.6787886E12, 0.0], [1.67878783E12, 0.0], [1.67878894E12, 0.0], [1.67878817E12, 0.0], [1.67878851E12, 0.0], [1.67878885E12, 0.0], [1.67878774E12, 0.0], [1.67878808E12, 0.0], [1.67878842E12, 0.0], [1.67878765E12, 0.0], [1.67878876E12, 0.0], [1.67878799E12, 0.0], [1.67878833E12, 0.0], [1.67878867E12, 0.0], [1.6787879E12, 0.0], [1.67878824E12, 0.0], [1.67878858E12, 0.0], [1.67878781E12, 0.0], [1.67878892E12, 0.0], [1.67878815E12, 0.0], [1.67878849E12, 0.0], [1.67878883E12, 0.0], [1.67878772E12, 0.0], [1.67878806E12, 0.0], [1.6787884E12, 0.0], [1.67878763E12, 0.0], [1.67878874E12, 0.0], [1.67878797E12, 0.0], [1.67878831E12, 0.0], [1.67878865E12, 0.0], [1.67878788E12, 0.0], [1.67878822E12, 0.0], [1.67878856E12, 0.0], [1.67878779E12, 0.0], [1.6787889E12, 0.0], [1.67878813E12, 0.0], [1.67878847E12, 0.0], [1.67878881E12, 0.0], [1.6787877E12, 0.0], [1.67878804E12, 0.0], [1.67878838E12, 0.0], [1.67878761E12, 0.0], [1.67878872E12, 0.0], [1.67878795E12, 0.0], [1.67878829E12, 0.0], [1.67878863E12, 0.0], [1.67878786E12, 0.0], [1.6787882E12, 0.0], [1.67878854E12, 0.0], [1.67878777E12, 0.0], [1.67878888E12, 0.0], [1.67878811E12, 0.0], [1.67878845E12, 0.0], [1.67878879E12, 0.0], [1.67878768E12, 0.0], [1.67878802E12, 0.0], [1.67878836E12, 0.0], [1.6787887E12, 0.0], [1.67878793E12, 0.0], [1.67878827E12, 0.0], [1.67878861E12, 0.0], [1.67878895E12, 0.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[1.67878784E12, 0.0], [1.67878818E12, 0.0], [1.67878852E12, 0.0], [1.67878775E12, 0.0], [1.67878886E12, 0.0], [1.67878809E12, 0.0], [1.67878843E12, 0.0], [1.67878877E12, 0.0], [1.67878766E12, 0.0], [1.678788E12, 0.0], [1.67878834E12, 0.0], [1.67878868E12, 0.0], [1.67878791E12, 0.0], [1.67878825E12, 0.0], [1.67878859E12, 0.0], [1.67878893E12, 0.0], [1.67878782E12, 0.0], [1.67878816E12, 0.0], [1.6787885E12, 0.0], [1.67878773E12, 0.0], [1.67878884E12, 0.0], [1.67878807E12, 0.0], [1.67878841E12, 0.0], [1.67878875E12, 0.0], [1.67878764E12, 0.0], [1.67878798E12, 0.0], [1.67878832E12, 0.0], [1.67878866E12, 0.0], [1.67878789E12, 0.0], [1.67878823E12, 0.0], [1.67878857E12, 0.0], [1.67878891E12, 0.0], [1.6787878E12, 0.0], [1.67878814E12, 0.0], [1.67878848E12, 0.0], [1.67878771E12, 0.0], [1.67878882E12, 0.0], [1.67878805E12, 0.0], [1.67878839E12, 0.0], [1.67878873E12, 0.0], [1.67878762E12, 0.0], [1.67878796E12, 0.0], [1.6787883E12, 0.0], [1.67878864E12, 0.0], [1.67878787E12, 0.0], [1.67878821E12, 0.0], [1.67878855E12, 0.0], [1.67878889E12, 0.0], [1.67878778E12, 0.0], [1.67878812E12, 0.0], [1.67878846E12, 0.0], [1.67878769E12, 0.0], [1.6787888E12, 0.0], [1.67878803E12, 0.0], [1.67878837E12, 0.0], [1.67878871E12, 0.0], [1.6787876E12, 0.0], [1.67878794E12, 0.0], [1.67878828E12, 0.0], [1.67878862E12, 0.0], [1.67878785E12, 0.0], [1.67878896E12, 0.0], [1.67878819E12, 0.0], [1.67878853E12, 0.0], [1.67878887E12, 0.0], [1.67878776E12, 0.0], [1.6787881E12, 0.0], [1.67878844E12, 0.0], [1.67878767E12, 0.0], [1.67878878E12, 0.0], [1.67878801E12, 0.0], [1.67878835E12, 0.0], [1.67878869E12, 0.0], [1.67878792E12, 0.0], [1.67878826E12, 0.0], [1.6787886E12, 0.0], [1.67878783E12, 0.0], [1.67878894E12, 0.0], [1.67878817E12, 0.0], [1.67878851E12, 0.0], [1.67878885E12, 0.0], [1.67878774E12, 0.0], [1.67878808E12, 0.0], [1.67878842E12, 0.0], [1.67878765E12, 0.0], [1.67878876E12, 0.0], [1.67878799E12, 0.0], [1.67878833E12, 0.0], [1.67878867E12, 0.0], [1.6787879E12, 0.0], [1.67878824E12, 0.0], [1.67878858E12, 0.0], [1.67878781E12, 0.0], [1.67878892E12, 0.0], [1.67878815E12, 0.0], [1.67878849E12, 0.0], [1.67878883E12, 0.0], [1.67878772E12, 0.0], [1.67878806E12, 0.0], [1.6787884E12, 0.0], [1.67878763E12, 0.0], [1.67878874E12, 0.0], [1.67878797E12, 0.0], [1.67878831E12, 0.0], [1.67878865E12, 0.0], [1.67878788E12, 0.0], [1.67878822E12, 0.0], [1.67878856E12, 0.0], [1.67878779E12, 0.0], [1.6787889E12, 0.0], [1.67878813E12, 0.0], [1.67878847E12, 0.0], [1.67878881E12, 0.0], [1.6787877E12, 0.0], [1.67878804E12, 0.0], [1.67878838E12, 0.0], [1.67878761E12, 0.0], [1.67878872E12, 0.0], [1.67878795E12, 0.0], [1.67878829E12, 0.0], [1.67878863E12, 0.0], [1.67878786E12, 0.0], [1.6787882E12, 0.0], [1.67878854E12, 0.0], [1.67878777E12, 0.0], [1.67878888E12, 0.0], [1.67878811E12, 0.0], [1.67878845E12, 0.0], [1.67878879E12, 0.0], [1.67878768E12, 0.0], [1.67878802E12, 0.0], [1.67878836E12, 0.0], [1.6787887E12, 0.0], [1.67878793E12, 0.0], [1.67878827E12, 0.0], [1.67878861E12, 0.0], [1.67878895E12, 0.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67878896E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6787876E12, "maxY": 4.9E-324, "series": [{"data": [[1.67878784E12, 0.0], [1.67878818E12, 0.0], [1.67878852E12, 0.0], [1.67878775E12, 0.0], [1.67878886E12, 0.0], [1.67878809E12, 0.0], [1.67878843E12, 0.0], [1.67878877E12, 0.0], [1.67878766E12, 0.0], [1.678788E12, 0.0], [1.67878834E12, 0.0], [1.67878868E12, 0.0], [1.67878791E12, 0.0], [1.67878825E12, 0.0], [1.67878859E12, 0.0], [1.67878893E12, 0.0], [1.67878782E12, 0.0], [1.67878816E12, 0.0], [1.6787885E12, 0.0], [1.67878773E12, 0.0], [1.67878884E12, 0.0], [1.67878807E12, 0.0], [1.67878841E12, 0.0], [1.67878875E12, 0.0], [1.67878764E12, 0.0], [1.67878798E12, 0.0], [1.67878832E12, 0.0], [1.67878866E12, 0.0], [1.67878789E12, 0.0], [1.67878823E12, 0.0], [1.67878857E12, 0.0], [1.67878891E12, 0.0], [1.6787878E12, 0.0], [1.67878814E12, 0.0], [1.67878848E12, 0.0], [1.67878771E12, 0.0], [1.67878882E12, 0.0], [1.67878805E12, 0.0], [1.67878839E12, 0.0], [1.67878873E12, 0.0], [1.67878762E12, 0.0], [1.67878796E12, 0.0], [1.6787883E12, 0.0], [1.67878864E12, 0.0], [1.67878787E12, 0.0], [1.67878821E12, 0.0], [1.67878855E12, 0.0], [1.67878889E12, 0.0], [1.67878778E12, 0.0], [1.67878812E12, 0.0], [1.67878846E12, 0.0], [1.67878769E12, 0.0], [1.6787888E12, 0.0], [1.67878803E12, 0.0], [1.67878837E12, 0.0], [1.67878871E12, 0.0], [1.6787876E12, 0.0], [1.67878794E12, 0.0], [1.67878828E12, 0.0], [1.67878862E12, 0.0], [1.67878785E12, 0.0], [1.67878896E12, 0.0], [1.67878819E12, 0.0], [1.67878853E12, 0.0], [1.67878887E12, 0.0], [1.67878776E12, 0.0], [1.6787881E12, 0.0], [1.67878844E12, 0.0], [1.67878767E12, 0.0], [1.67878878E12, 0.0], [1.67878801E12, 0.0], [1.67878835E12, 0.0], [1.67878869E12, 0.0], [1.67878792E12, 0.0], [1.67878826E12, 0.0], [1.6787886E12, 0.0], [1.67878783E12, 0.0], [1.67878894E12, 0.0], [1.67878817E12, 0.0], [1.67878851E12, 0.0], [1.67878885E12, 0.0], [1.67878774E12, 0.0], [1.67878808E12, 0.0], [1.67878842E12, 0.0], [1.67878765E12, 0.0], [1.67878876E12, 0.0], [1.67878799E12, 0.0], [1.67878833E12, 0.0], [1.67878867E12, 0.0], [1.6787879E12, 0.0], [1.67878824E12, 0.0], [1.67878858E12, 0.0], [1.67878781E12, 0.0], [1.67878892E12, 0.0], [1.67878815E12, 0.0], [1.67878849E12, 0.0], [1.67878883E12, 0.0], [1.67878772E12, 0.0], [1.67878806E12, 0.0], [1.6787884E12, 0.0], [1.67878763E12, 0.0], [1.67878874E12, 0.0], [1.67878797E12, 0.0], [1.67878831E12, 0.0], [1.67878865E12, 0.0], [1.67878788E12, 0.0], [1.67878822E12, 0.0], [1.67878856E12, 0.0], [1.67878779E12, 0.0], [1.6787889E12, 0.0], [1.67878813E12, 0.0], [1.67878847E12, 0.0], [1.67878881E12, 0.0], [1.6787877E12, 0.0], [1.67878804E12, 0.0], [1.67878838E12, 0.0], [1.67878761E12, 0.0], [1.67878872E12, 0.0], [1.67878795E12, 0.0], [1.67878829E12, 0.0], [1.67878863E12, 0.0], [1.67878786E12, 0.0], [1.6787882E12, 0.0], [1.67878854E12, 0.0], [1.67878777E12, 0.0], [1.67878888E12, 0.0], [1.67878811E12, 0.0], [1.67878845E12, 0.0], [1.67878879E12, 0.0], [1.67878768E12, 0.0], [1.67878802E12, 0.0], [1.67878836E12, 0.0], [1.6787887E12, 0.0], [1.67878793E12, 0.0], [1.67878827E12, 0.0], [1.67878861E12, 0.0], [1.67878895E12, 0.0]], "isOverall": false, "label": "RAMP", "isController": false}, {"data": [[1.67878784E12, 0.0], [1.67878818E12, 0.0], [1.67878852E12, 0.0], [1.67878775E12, 0.0], [1.67878886E12, 0.0], [1.67878809E12, 0.0], [1.67878843E12, 0.0], [1.67878877E12, 0.0], [1.67878766E12, 0.0], [1.678788E12, 0.0], [1.67878834E12, 0.0], [1.67878868E12, 0.0], [1.67878791E12, 0.0], [1.67878825E12, 0.0], [1.67878859E12, 0.0], [1.67878893E12, 0.0], [1.67878782E12, 0.0], [1.67878816E12, 0.0], [1.6787885E12, 0.0], [1.67878773E12, 0.0], [1.67878884E12, 0.0], [1.67878807E12, 0.0], [1.67878841E12, 0.0], [1.67878875E12, 0.0], [1.67878764E12, 0.0], [1.67878798E12, 0.0], [1.67878832E12, 0.0], [1.67878866E12, 0.0], [1.67878789E12, 0.0], [1.67878823E12, 0.0], [1.67878857E12, 0.0], [1.67878891E12, 0.0], [1.6787878E12, 0.0], [1.67878814E12, 0.0], [1.67878848E12, 0.0], [1.67878771E12, 0.0], [1.67878882E12, 0.0], [1.67878805E12, 0.0], [1.67878839E12, 0.0], [1.67878873E12, 0.0], [1.67878762E12, 0.0], [1.67878796E12, 0.0], [1.6787883E12, 0.0], [1.67878864E12, 0.0], [1.67878787E12, 0.0], [1.67878821E12, 0.0], [1.67878855E12, 0.0], [1.67878889E12, 0.0], [1.67878778E12, 0.0], [1.67878812E12, 0.0], [1.67878846E12, 0.0], [1.67878769E12, 0.0], [1.6787888E12, 0.0], [1.67878803E12, 0.0], [1.67878837E12, 0.0], [1.67878871E12, 0.0], [1.6787876E12, 0.0], [1.67878794E12, 0.0], [1.67878828E12, 0.0], [1.67878862E12, 0.0], [1.67878785E12, 0.0], [1.67878896E12, 0.0], [1.67878819E12, 0.0], [1.67878853E12, 0.0], [1.67878887E12, 0.0], [1.67878776E12, 0.0], [1.6787881E12, 0.0], [1.67878844E12, 0.0], [1.67878767E12, 0.0], [1.67878878E12, 0.0], [1.67878801E12, 0.0], [1.67878835E12, 0.0], [1.67878869E12, 0.0], [1.67878792E12, 0.0], [1.67878826E12, 0.0], [1.6787886E12, 0.0], [1.67878783E12, 0.0], [1.67878894E12, 0.0], [1.67878817E12, 0.0], [1.67878851E12, 0.0], [1.67878885E12, 0.0], [1.67878774E12, 0.0], [1.67878808E12, 0.0], [1.67878842E12, 0.0], [1.67878765E12, 0.0], [1.67878876E12, 0.0], [1.67878799E12, 0.0], [1.67878833E12, 0.0], [1.67878867E12, 0.0], [1.6787879E12, 0.0], [1.67878824E12, 0.0], [1.67878858E12, 0.0], [1.67878781E12, 0.0], [1.67878892E12, 0.0], [1.67878815E12, 0.0], [1.67878849E12, 0.0], [1.67878883E12, 0.0], [1.67878772E12, 0.0], [1.67878806E12, 0.0], [1.6787884E12, 0.0], [1.67878763E12, 0.0], [1.67878874E12, 0.0], [1.67878797E12, 0.0], [1.67878831E12, 0.0], [1.67878865E12, 0.0], [1.67878788E12, 0.0], [1.67878822E12, 0.0], [1.67878856E12, 0.0], [1.67878779E12, 0.0], [1.6787889E12, 0.0], [1.67878813E12, 0.0], [1.67878847E12, 0.0], [1.67878881E12, 0.0], [1.6787877E12, 0.0], [1.67878804E12, 0.0], [1.67878838E12, 0.0], [1.67878761E12, 0.0], [1.67878872E12, 0.0], [1.67878795E12, 0.0], [1.67878829E12, 0.0], [1.67878863E12, 0.0], [1.67878786E12, 0.0], [1.6787882E12, 0.0], [1.67878854E12, 0.0], [1.67878777E12, 0.0], [1.67878888E12, 0.0], [1.67878811E12, 0.0], [1.67878845E12, 0.0], [1.67878879E12, 0.0], [1.67878768E12, 0.0], [1.67878802E12, 0.0], [1.67878836E12, 0.0], [1.6787887E12, 0.0], [1.67878793E12, 0.0], [1.67878827E12, 0.0], [1.67878861E12, 0.0], [1.67878895E12, 0.0]], "isOverall": false, "label": "原生", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67878896E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2569.0, "minX": 1.6787876E12, "maxY": 7713.0, "series": [{"data": [[1.67878784E12, 7114.0], [1.67878818E12, 7095.0], [1.67878852E12, 7118.0], [1.67878775E12, 7081.0], [1.67878886E12, 6381.0], [1.67878809E12, 7210.0], [1.67878843E12, 7357.0], [1.67878877E12, 7455.0], [1.67878766E12, 4963.0], [1.678788E12, 7509.0], [1.67878834E12, 7308.0], [1.67878868E12, 7308.0], [1.67878791E12, 6996.0], [1.67878825E12, 7358.0], [1.67878859E12, 7135.0], [1.67878893E12, 3475.0], [1.67878782E12, 7205.0], [1.67878816E12, 7230.0], [1.6787885E12, 7304.0], [1.67878773E12, 6981.0], [1.67878884E12, 6523.0], [1.67878807E12, 7171.0], [1.67878841E12, 7032.0], [1.67878875E12, 7183.0], [1.67878764E12, 4208.0], [1.67878798E12, 6985.0], [1.67878832E12, 6996.0], [1.67878866E12, 7387.0], [1.67878789E12, 7056.0], [1.67878823E12, 7058.0], [1.67878857E12, 7073.0], [1.67878891E12, 4221.0], [1.6787878E12, 6965.0], [1.67878814E12, 7025.0], [1.67878848E12, 7041.0], [1.67878771E12, 6932.0], [1.67878882E12, 6737.0], [1.67878805E12, 7002.0], [1.67878839E12, 6984.0], [1.67878873E12, 7058.0], [1.67878762E12, 3595.0], [1.67878796E12, 6936.0], [1.6787883E12, 7025.0], [1.67878864E12, 7358.0], [1.67878787E12, 7383.0], [1.67878821E12, 7191.0], [1.67878855E12, 7133.0], [1.67878889E12, 4960.0], [1.67878778E12, 7104.0], [1.67878812E12, 7303.0], [1.67878846E12, 7094.0], [1.67878769E12, 6051.0], [1.6787888E12, 7253.0], [1.67878803E12, 7067.0], [1.67878837E12, 6983.0], [1.67878871E12, 7209.0], [1.6787876E12, 4712.0], [1.67878794E12, 7382.0], [1.67878828E12, 7218.0], [1.67878862E12, 7291.0], [1.67878785E12, 7138.0], [1.67878896E12, 3067.0], [1.67878819E12, 7713.0], [1.67878853E12, 7299.0], [1.67878887E12, 5548.0], [1.67878776E12, 7262.0], [1.6787881E12, 7324.0], [1.67878844E12, 7257.0], [1.67878767E12, 5240.0], [1.67878878E12, 7248.0], [1.67878801E12, 7133.0], [1.67878835E12, 7208.0], [1.67878869E12, 7382.0], [1.67878792E12, 6943.0], [1.67878826E12, 7429.0], [1.6787886E12, 7327.0], [1.67878783E12, 7179.0], [1.67878894E12, 3186.0], [1.67878817E12, 7220.0], [1.67878851E12, 7148.0], [1.67878885E12, 6273.0], [1.67878774E12, 7284.0], [1.67878808E12, 7002.0], [1.67878842E12, 7175.0], [1.67878765E12, 4711.0], [1.67878876E12, 7371.0], [1.67878799E12, 7115.0], [1.67878833E12, 7274.0], [1.67878867E12, 7083.0], [1.6787879E12, 6997.0], [1.67878824E12, 7051.0], [1.67878858E12, 7459.0], [1.67878781E12, 7012.0], [1.67878892E12, 3639.0], [1.67878815E12, 7197.0], [1.67878849E12, 7091.0], [1.67878883E12, 6713.0], [1.67878772E12, 6964.0], [1.67878806E12, 6997.0], [1.6787884E12, 7042.0], [1.67878763E12, 3903.0], [1.67878874E12, 7048.0], [1.67878797E12, 6922.0], [1.67878831E12, 7151.0], [1.67878865E12, 7261.0], [1.67878788E12, 7120.0], [1.67878822E12, 7024.0], [1.67878856E12, 7159.0], [1.67878779E12, 6952.0], [1.6787889E12, 4378.0], [1.67878813E12, 7009.0], [1.67878847E12, 7125.0], [1.67878881E12, 6770.0], [1.6787877E12, 6513.0], [1.67878804E12, 7289.0], [1.67878838E12, 7398.0], [1.67878761E12, 3285.0], [1.67878872E12, 7031.0], [1.67878795E12, 7199.0], [1.67878829E12, 7252.0], [1.67878863E12, 7390.0], [1.67878786E12, 7478.0], [1.6787882E12, 7362.0], [1.67878854E12, 7434.0], [1.67878777E12, 6963.0], [1.67878888E12, 5322.0], [1.67878811E12, 7462.0], [1.67878845E12, 7003.0], [1.67878879E12, 6991.0], [1.67878768E12, 5659.0], [1.67878802E12, 7418.0], [1.67878836E12, 7512.0], [1.6787887E12, 7071.0], [1.67878793E12, 7085.0], [1.67878827E12, 7377.0], [1.67878861E12, 7503.0], [1.67878895E12, 3181.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.67878784E12, 7039.8], [1.67878818E12, 6998.0], [1.67878852E12, 7010.3], [1.67878775E12, 6987.6], [1.67878886E12, 6195.8], [1.67878809E12, 7122.2], [1.67878843E12, 7165.8], [1.67878877E12, 7108.8], [1.67878766E12, 4891.2], [1.678788E12, 7313.4], [1.67878834E12, 7033.7], [1.67878868E12, 7212.8], [1.67878791E12, 6885.4], [1.67878825E12, 7270.2], [1.67878859E12, 6957.0], [1.67878893E12, 3401.5], [1.67878782E12, 6910.4], [1.67878816E12, 7094.3], [1.6787885E12, 7141.0], [1.67878773E12, 6900.8], [1.67878884E12, 6350.0], [1.67878807E12, 7004.0], [1.67878841E12, 6970.7], [1.67878875E12, 7041.400000000001], [1.67878764E12, 4115.7], [1.67878798E12, 6909.0], [1.67878832E12, 6954.3], [1.67878866E12, 7270.4], [1.67878789E12, 6991.8], [1.67878823E12, 7004.0], [1.67878857E12, 6967.2], [1.67878891E12, 4117.2], [1.6787878E12, 6878.0], [1.67878814E12, 6874.6], [1.67878848E12, 6947.0], [1.67878771E12, 6775.8], [1.67878882E12, 6663.2], [1.67878805E12, 6918.2], [1.67878839E12, 6863.2], [1.67878873E12, 7014.4], [1.67878762E12, 3497.0], [1.67878796E12, 6864.5], [1.6787883E12, 6927.7], [1.67878864E12, 7142.0], [1.67878787E12, 7273.0], [1.67878821E12, 6995.0], [1.67878855E12, 7028.4], [1.67878889E12, 4914.0], [1.67878778E12, 6976.0], [1.67878812E12, 7033.9], [1.67878846E12, 7017.8], [1.67878769E12, 5938.4], [1.6787888E12, 7110.3], [1.67878803E12, 6812.1], [1.67878837E12, 6871.6], [1.67878871E12, 6968.3], [1.6787876E12, 4712.0], [1.67878794E12, 7217.0], [1.67878828E12, 6972.0], [1.67878862E12, 7115.2], [1.67878785E12, 7065.5], [1.67878896E12, 3067.0], [1.67878819E12, 7412.2], [1.67878853E12, 7120.8], [1.67878887E12, 5383.4], [1.67878776E12, 7081.0], [1.6787881E12, 7003.0], [1.67878844E12, 7054.8], [1.67878767E12, 5211.9], [1.67878878E12, 6996.9], [1.67878801E12, 6970.0], [1.67878835E12, 7074.3], [1.67878869E12, 7275.0], [1.67878792E12, 6858.3], [1.67878826E12, 7168.2], [1.6787886E12, 7179.4], [1.67878783E12, 7096.0], [1.67878894E12, 3185.0], [1.67878817E12, 7058.8], [1.67878851E12, 7069.0], [1.67878885E12, 6171.0], [1.67878774E12, 7091.8], [1.67878808E12, 6867.7], [1.67878842E12, 7060.2], [1.67878765E12, 4473.0], [1.67878876E12, 7271.8], [1.67878799E12, 6894.8], [1.67878833E12, 7026.1], [1.67878867E12, 7021.8], [1.6787879E12, 6883.0], [1.67878824E12, 6940.2], [1.67878858E12, 7218.0], [1.67878781E12, 6891.0], [1.67878892E12, 3627.6], [1.67878815E12, 6988.0], [1.67878849E12, 6963.4], [1.67878883E12, 6505.000000000001], [1.67878772E12, 6904.1], [1.67878806E12, 6895.0], [1.6787884E12, 6962.8], [1.67878763E12, 3861.2000000000003], [1.67878874E12, 6987.6], [1.67878797E12, 6839.4], [1.67878831E12, 7004.8], [1.67878865E12, 7155.4], [1.67878788E12, 6995.0], [1.67878822E12, 6971.6], [1.67878856E12, 7001.6], [1.67878779E12, 6850.7], [1.6787889E12, 4209.0], [1.67878813E12, 6900.0], [1.67878847E12, 6987.8], [1.67878881E12, 6689.2], [1.6787877E12, 6324.2], [1.67878804E12, 7145.2], [1.67878838E12, 7081.800000000001], [1.67878761E12, 3282.6], [1.67878872E12, 6972.6], [1.67878795E12, 7037.0], [1.67878829E12, 7042.6], [1.67878863E12, 7297.0], [1.67878786E12, 7240.2], [1.6787882E12, 7085.8], [1.67878854E12, 7219.0], [1.67878777E12, 6829.0], [1.67878888E12, 5206.2], [1.67878811E12, 6898.2], [1.67878845E12, 6910.8], [1.67878879E12, 6819.2], [1.67878768E12, 5573.8], [1.67878802E12, 7183.0], [1.67878836E12, 7396.2], [1.6787887E12, 6964.0], [1.67878793E12, 6985.6], [1.67878827E12, 7014.2], [1.67878861E12, 7293.4], [1.67878895E12, 3181.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.67878784E12, 7114.0], [1.67878818E12, 7095.0], [1.67878852E12, 7118.0], [1.67878775E12, 7081.0], [1.67878886E12, 6381.0], [1.67878809E12, 7210.0], [1.67878843E12, 7357.0], [1.67878877E12, 7455.0], [1.67878766E12, 4963.0], [1.678788E12, 7509.0], [1.67878834E12, 7308.0], [1.67878868E12, 7308.0], [1.67878791E12, 6996.0], [1.67878825E12, 7358.0], [1.67878859E12, 7135.0], [1.67878893E12, 3475.0], [1.67878782E12, 7205.0], [1.67878816E12, 7230.0], [1.6787885E12, 7304.0], [1.67878773E12, 6981.0], [1.67878884E12, 6523.0], [1.67878807E12, 7171.0], [1.67878841E12, 7032.0], [1.67878875E12, 7183.0], [1.67878764E12, 4208.0], [1.67878798E12, 6985.0], [1.67878832E12, 6996.0], [1.67878866E12, 7387.0], [1.67878789E12, 7056.0], [1.67878823E12, 7058.0], [1.67878857E12, 7073.0], [1.67878891E12, 4221.0], [1.6787878E12, 6965.0], [1.67878814E12, 7025.0], [1.67878848E12, 7041.0], [1.67878771E12, 6932.0], [1.67878882E12, 6737.0], [1.67878805E12, 7002.0], [1.67878839E12, 6984.0], [1.67878873E12, 7058.0], [1.67878762E12, 3595.0], [1.67878796E12, 6936.0], [1.6787883E12, 7025.0], [1.67878864E12, 7358.0], [1.67878787E12, 7383.0], [1.67878821E12, 7191.0], [1.67878855E12, 7133.0], [1.67878889E12, 4960.0], [1.67878778E12, 7104.0], [1.67878812E12, 7303.0], [1.67878846E12, 7094.0], [1.67878769E12, 6051.0], [1.6787888E12, 7253.0], [1.67878803E12, 7067.0], [1.67878837E12, 6983.0], [1.67878871E12, 7209.0], [1.6787876E12, 4712.0], [1.67878794E12, 7382.0], [1.67878828E12, 7218.0], [1.67878862E12, 7291.0], [1.67878785E12, 7138.0], [1.67878896E12, 3067.0], [1.67878819E12, 7713.0], [1.67878853E12, 7299.0], [1.67878887E12, 5548.0], [1.67878776E12, 7262.0], [1.6787881E12, 7324.0], [1.67878844E12, 7257.0], [1.67878767E12, 5240.0], [1.67878878E12, 7248.0], [1.67878801E12, 7133.0], [1.67878835E12, 7208.0], [1.67878869E12, 7382.0], [1.67878792E12, 6943.0], [1.67878826E12, 7429.0], [1.6787886E12, 7327.0], [1.67878783E12, 7179.0], [1.67878894E12, 3186.0], [1.67878817E12, 7220.0], [1.67878851E12, 7148.0], [1.67878885E12, 6273.0], [1.67878774E12, 7284.0], [1.67878808E12, 7002.0], [1.67878842E12, 7175.0], [1.67878765E12, 4711.0], [1.67878876E12, 7371.0], [1.67878799E12, 7115.0], [1.67878833E12, 7274.0], [1.67878867E12, 7083.0], [1.6787879E12, 6997.0], [1.67878824E12, 7051.0], [1.67878858E12, 7459.0], [1.67878781E12, 7012.0], [1.67878892E12, 3639.0], [1.67878815E12, 7197.0], [1.67878849E12, 7091.0], [1.67878883E12, 6713.0], [1.67878772E12, 6964.0], [1.67878806E12, 6997.0], [1.6787884E12, 7042.0], [1.67878763E12, 3903.0], [1.67878874E12, 7048.0], [1.67878797E12, 6922.0], [1.67878831E12, 7151.0], [1.67878865E12, 7261.0], [1.67878788E12, 7120.0], [1.67878822E12, 7024.0], [1.67878856E12, 7159.0], [1.67878779E12, 6952.0], [1.6787889E12, 4378.0], [1.67878813E12, 7009.0], [1.67878847E12, 7125.0], [1.67878881E12, 6770.0], [1.6787877E12, 6513.0], [1.67878804E12, 7289.0], [1.67878838E12, 7398.0], [1.67878761E12, 3285.0], [1.67878872E12, 7031.0], [1.67878795E12, 7199.0], [1.67878829E12, 7252.0], [1.67878863E12, 7390.0], [1.67878786E12, 7478.0], [1.6787882E12, 7362.0], [1.67878854E12, 7434.0], [1.67878777E12, 6963.0], [1.67878888E12, 5322.0], [1.67878811E12, 7462.0], [1.67878845E12, 7003.0], [1.67878879E12, 6991.0], [1.67878768E12, 5659.0], [1.67878802E12, 7418.0], [1.67878836E12, 7512.0], [1.6787887E12, 7071.0], [1.67878793E12, 7085.0], [1.67878827E12, 7377.0], [1.67878861E12, 7503.0], [1.67878895E12, 3181.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.67878784E12, 7090.15], [1.67878818E12, 7067.5], [1.67878852E12, 7082.35], [1.67878775E12, 7056.6], [1.67878886E12, 6337.299999999999], [1.67878809E12, 7169.6], [1.67878843E12, 7262.9], [1.67878877E12, 7135.4], [1.67878766E12, 4941.15], [1.678788E12, 7373.599999999999], [1.67878834E12, 7191.549999999999], [1.67878868E12, 7251.25], [1.67878791E12, 6964.9], [1.67878825E12, 7321.1], [1.67878859E12, 7061.45], [1.67878893E12, 3475.0], [1.67878782E12, 7052.0], [1.67878816E12, 7177.45], [1.6787885E12, 7210.7], [1.67878773E12, 6926.8], [1.67878884E12, 6492.7], [1.67878807E12, 7071.0], [1.67878841E12, 7017.65], [1.67878875E12, 7152.4], [1.67878764E12, 4204.15], [1.67878798E12, 6949.1], [1.67878832E12, 6970.8], [1.67878866E12, 7344.099999999999], [1.67878789E12, 7030.75], [1.67878823E12, 7047.6], [1.67878857E12, 7057.0], [1.67878891E12, 4187.849999999999], [1.6787878E12, 6933.6], [1.67878814E12, 6926.6], [1.67878848E12, 7016.5], [1.67878771E12, 6841.7], [1.67878882E12, 6678.8], [1.67878805E12, 6967.95], [1.67878839E12, 6943.799999999999], [1.67878873E12, 7048.5], [1.67878762E12, 3595.0], [1.67878796E12, 6904.0], [1.6787883E12, 7004.7], [1.67878864E12, 7228.999999999999], [1.67878787E12, 7300.0], [1.67878821E12, 7170.2], [1.67878855E12, 7095.3], [1.67878889E12, 4923.0], [1.67878778E12, 7027.65], [1.67878812E12, 7198.65], [1.67878846E12, 7068.4], [1.67878769E12, 6041.8], [1.6787888E12, 7224.099999999999], [1.67878803E12, 6986.05], [1.67878837E12, 6891.6], [1.67878871E12, 7035.65], [1.6787876E12, 4712.0], [1.67878794E12, 7312.0], [1.67878828E12, 7133.4], [1.67878862E12, 7253.2], [1.67878785E12, 7087.05], [1.67878896E12, 3067.0], [1.67878819E12, 7667.799999999999], [1.67878853E12, 7241.5], [1.67878887E12, 5404.7], [1.67878776E12, 7161.0], [1.6787881E12, 7208.549999999999], [1.67878844E12, 7169.75], [1.67878767E12, 5233.35], [1.67878878E12, 7105.05], [1.67878801E12, 7079.75], [1.67878835E12, 7169.05], [1.67878869E12, 7364.4], [1.67878792E12, 6890.55], [1.67878826E12, 7273.2], [1.6787886E12, 7306.1], [1.67878783E12, 7147.6], [1.67878894E12, 3186.0], [1.67878817E12, 7195.8], [1.67878851E12, 7110.5], [1.67878885E12, 6223.8], [1.67878774E12, 7246.25], [1.67878808E12, 6913.8], [1.67878842E12, 7127.599999999999], [1.67878765E12, 4704.5], [1.67878876E12, 7351.75], [1.67878799E12, 7035.2], [1.67878833E12, 7130.0], [1.67878867E12, 7067.0], [1.6787879E12, 6951.5], [1.67878824E12, 7007.4], [1.67878858E12, 7394.999999999999], [1.67878781E12, 6954.75], [1.67878892E12, 3637.65], [1.67878815E12, 7080.5], [1.67878849E12, 6998.25], [1.67878883E12, 6626.15], [1.67878772E12, 6934.3], [1.67878806E12, 6939.8], [1.6787884E12, 7026.7], [1.67878763E12, 3900.9], [1.67878874E12, 7044.55], [1.67878797E12, 6902.2], [1.67878831E12, 7055.35], [1.67878865E12, 7181.599999999999], [1.67878788E12, 7048.5], [1.67878822E12, 7003.3], [1.67878856E12, 7068.4], [1.67878779E12, 6882.5], [1.6787889E12, 4341.0], [1.67878813E12, 6954.5], [1.67878847E12, 7014.9], [1.67878881E12, 6743.2], [1.6787877E12, 6445.799999999999], [1.67878804E12, 7171.3], [1.67878838E12, 7264.599999999999], [1.67878761E12, 3285.0], [1.67878872E12, 6995.65], [1.67878795E12, 7150.0], [1.67878829E12, 7251.0], [1.67878863E12, 7379.8], [1.67878786E12, 7342.599999999999], [1.6787882E12, 7193.199999999999], [1.67878854E12, 7266.0], [1.67878777E12, 6894.0], [1.67878888E12, 5316.3], [1.67878811E12, 7302.9], [1.67878845E12, 6931.8], [1.67878879E12, 6944.2], [1.67878768E12, 5623.8], [1.67878802E12, 7332.0], [1.67878836E12, 7473.9], [1.6787887E12, 6987.5], [1.67878793E12, 6999.4], [1.67878827E12, 7165.55], [1.67878861E12, 7451.9], [1.67878895E12, 3181.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.67878784E12, 5637.0], [1.67878818E12, 5554.0], [1.67878852E12, 5403.0], [1.67878775E12, 5411.0], [1.67878886E12, 4360.0], [1.67878809E12, 5450.0], [1.67878843E12, 5596.0], [1.67878877E12, 5630.0], [1.67878766E12, 3700.0], [1.678788E12, 5708.0], [1.67878834E12, 5447.0], [1.67878868E12, 5568.0], [1.67878791E12, 5444.0], [1.67878825E12, 5559.0], [1.67878859E12, 5609.0], [1.67878893E12, 2906.0], [1.67878782E12, 5430.0], [1.67878816E12, 5562.0], [1.6787885E12, 5469.0], [1.67878773E12, 5473.0], [1.67878884E12, 4863.0], [1.67878807E12, 5296.0], [1.67878841E12, 5459.0], [1.67878875E12, 5590.0], [1.67878764E12, 3234.0], [1.67878798E12, 5390.0], [1.67878832E12, 5496.0], [1.67878866E12, 5597.0], [1.67878789E12, 5583.0], [1.67878823E12, 5297.0], [1.67878857E12, 5462.0], [1.67878891E12, 3456.0], [1.6787878E12, 5409.0], [1.67878814E12, 5458.0], [1.67878848E12, 5332.0], [1.67878771E12, 5304.0], [1.67878882E12, 5163.0], [1.67878805E12, 5390.0], [1.67878839E12, 5455.0], [1.67878873E12, 5425.0], [1.67878762E12, 2683.0], [1.67878796E12, 5418.0], [1.6787883E12, 5464.0], [1.67878864E12, 5650.0], [1.67878787E12, 5713.0], [1.67878821E12, 5302.0], [1.67878855E12, 5510.0], [1.67878889E12, 3759.0], [1.67878778E12, 5391.0], [1.67878812E12, 5466.0], [1.67878846E12, 5472.0], [1.67878769E12, 4668.0], [1.6787888E12, 5534.0], [1.67878803E12, 5440.0], [1.67878837E12, 5430.0], [1.67878871E12, 5366.0], [1.6787876E12, 2921.0], [1.67878794E12, 5626.0], [1.67878828E12, 5539.0], [1.67878862E12, 5716.0], [1.67878785E12, 5504.0], [1.67878896E12, 2876.0], [1.67878819E12, 5513.0], [1.67878853E12, 5604.0], [1.67878887E12, 4190.0], [1.67878776E12, 5317.0], [1.6787881E12, 5421.0], [1.67878844E12, 5646.0], [1.67878767E12, 4091.0], [1.67878878E12, 5419.0], [1.67878801E12, 5437.0], [1.67878835E12, 5517.0], [1.67878869E12, 5366.0], [1.67878792E12, 5341.0], [1.67878826E12, 5507.0], [1.6787886E12, 5652.0], [1.67878783E12, 5657.0], [1.67878894E12, 2888.0], [1.67878817E12, 5674.0], [1.67878851E12, 5609.0], [1.67878885E12, 4858.0], [1.67878774E12, 5371.0], [1.67878808E12, 5466.0], [1.67878842E12, 5469.0], [1.67878765E12, 3350.0], [1.67878876E12, 5655.0], [1.67878799E12, 5392.0], [1.67878833E12, 5513.0], [1.67878867E12, 5544.0], [1.6787879E12, 5495.0], [1.67878824E12, 5292.0], [1.67878858E12, 5691.0], [1.67878781E12, 5469.0], [1.67878892E12, 3113.0], [1.67878815E12, 5511.0], [1.67878849E12, 5413.0], [1.67878883E12, 4975.0], [1.67878772E12, 5532.0], [1.67878806E12, 5405.0], [1.6787884E12, 5516.0], [1.67878763E12, 2900.0], [1.67878874E12, 5386.0], [1.67878797E12, 5421.0], [1.67878831E12, 5631.0], [1.67878865E12, 5547.0], [1.67878788E12, 5504.0], [1.67878822E12, 5281.0], [1.67878856E12, 5495.0], [1.67878779E12, 5361.0], [1.6787889E12, 3646.0], [1.67878813E12, 5371.0], [1.67878847E12, 5523.0], [1.67878881E12, 5345.0], [1.6787877E12, 4910.0], [1.67878804E12, 5531.0], [1.67878838E12, 5414.0], [1.67878761E12, 2569.0], [1.67878872E12, 5422.0], [1.67878795E12, 5364.0], [1.67878829E12, 5379.0], [1.67878863E12, 5673.0], [1.67878786E12, 5633.0], [1.6787882E12, 5351.0], [1.67878854E12, 5513.0], [1.67878777E12, 5176.0], [1.67878888E12, 3860.0], [1.67878811E12, 5273.0], [1.67878845E12, 5571.0], [1.67878879E12, 5447.0], [1.67878768E12, 4328.0], [1.67878802E12, 5676.0], [1.67878836E12, 5626.0], [1.6787887E12, 5390.0], [1.67878793E12, 5333.0], [1.67878827E12, 5556.0], [1.67878861E12, 5776.0], [1.67878895E12, 2881.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.67878784E12, 6325.0], [1.67878818E12, 6373.0], [1.67878852E12, 6307.0], [1.67878775E12, 6311.0], [1.67878886E12, 5416.0], [1.67878809E12, 6321.0], [1.67878843E12, 6532.0], [1.67878877E12, 6448.0], [1.67878766E12, 4426.0], [1.678788E12, 6521.0], [1.67878834E12, 6439.0], [1.67878868E12, 6519.0], [1.67878791E12, 6232.0], [1.67878825E12, 6436.0], [1.67878859E12, 6339.0], [1.67878893E12, 3144.5], [1.67878782E12, 6241.5], [1.67878816E12, 6433.0], [1.6787885E12, 6469.0], [1.67878773E12, 6237.0], [1.67878884E12, 5704.5], [1.67878807E12, 6297.0], [1.67878841E12, 6299.0], [1.67878875E12, 6314.0], [1.67878764E12, 3709.0], [1.67878798E12, 6277.0], [1.67878832E12, 6302.0], [1.67878866E12, 6564.0], [1.67878789E12, 6266.5], [1.67878823E12, 6340.0], [1.67878857E12, 6276.0], [1.67878891E12, 3774.0], [1.6787878E12, 6231.0], [1.67878814E12, 6231.0], [1.67878848E12, 6306.0], [1.67878771E12, 6100.0], [1.67878882E12, 5995.0], [1.67878805E12, 6187.5], [1.67878839E12, 6259.0], [1.67878873E12, 6327.5], [1.67878762E12, 3189.0], [1.67878796E12, 6218.5], [1.6787883E12, 6261.5], [1.67878864E12, 6450.0], [1.67878787E12, 6556.0], [1.67878821E12, 6273.0], [1.67878855E12, 6375.0], [1.67878889E12, 4409.0], [1.67878778E12, 6344.5], [1.67878812E12, 6425.0], [1.67878846E12, 6318.0], [1.67878769E12, 5314.0], [1.6787888E12, 6306.0], [1.67878803E12, 6221.5], [1.67878837E12, 6237.0], [1.67878871E12, 6261.0], [1.6787876E12, 3415.0], [1.67878794E12, 6493.5], [1.67878828E12, 6316.0], [1.67878862E12, 6451.0], [1.67878785E12, 6314.5], [1.67878896E12, 2915.0], [1.67878819E12, 6663.0], [1.67878853E12, 6546.0], [1.67878887E12, 4900.0], [1.67878776E12, 6442.0], [1.6787881E12, 6376.0], [1.67878844E12, 6417.5], [1.67878767E12, 4716.0], [1.67878878E12, 6281.0], [1.67878801E12, 6333.0], [1.67878835E12, 6401.0], [1.67878869E12, 6494.0], [1.67878792E12, 6226.0], [1.67878826E12, 6425.0], [1.6787886E12, 6534.0], [1.67878783E12, 6430.0], [1.67878894E12, 2937.0], [1.67878817E12, 6400.0], [1.67878851E12, 6422.0], [1.67878885E12, 5576.0], [1.67878774E12, 6442.0], [1.67878808E12, 6261.5], [1.67878842E12, 6421.0], [1.67878765E12, 4139.0], [1.67878876E12, 6533.5], [1.67878799E12, 6299.0], [1.67878833E12, 6339.0], [1.67878867E12, 6318.0], [1.6787879E12, 6262.0], [1.67878824E12, 6300.0], [1.67878858E12, 6550.0], [1.67878781E12, 6228.0], [1.67878892E12, 3301.0], [1.67878815E12, 6369.0], [1.67878849E12, 6321.0], [1.67878883E12, 5901.5], [1.67878772E12, 6207.5], [1.67878806E12, 6264.0], [1.6787884E12, 6329.5], [1.67878763E12, 3480.0], [1.67878874E12, 6306.0], [1.67878797E12, 6262.0], [1.67878831E12, 6360.5], [1.67878865E12, 6438.0], [1.67878788E12, 6244.5], [1.67878822E12, 6276.0], [1.67878856E12, 6289.0], [1.67878779E12, 6210.5], [1.6787889E12, 3845.0], [1.67878813E12, 6261.0], [1.67878847E12, 6311.0], [1.67878881E12, 6006.0], [1.6787877E12, 5719.0], [1.67878804E12, 6369.0], [1.67878838E12, 6406.0], [1.67878761E12, 3200.0], [1.67878872E12, 6296.0], [1.67878795E12, 6409.0], [1.67878829E12, 6414.5], [1.67878863E12, 6579.0], [1.67878786E12, 6529.0], [1.6787882E12, 6440.0], [1.67878854E12, 6522.0], [1.67878777E12, 6189.0], [1.67878888E12, 4581.5], [1.67878811E12, 6297.0], [1.67878845E12, 6326.0], [1.67878879E12, 6174.0], [1.67878768E12, 4962.0], [1.67878802E12, 6440.0], [1.67878836E12, 6450.0], [1.6787887E12, 6278.0], [1.67878793E12, 6305.0], [1.67878827E12, 6376.5], [1.67878861E12, 6592.0], [1.67878895E12, 3155.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67878896E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3740.5, "minX": 1.0, "maxY": 6369.5, "series": [{"data": [[1.0, 3740.5], [2.0, 6196.5], [4.0, 6293.5], [8.0, 6332.0], [9.0, 6309.0], [5.0, 6282.0], [10.0, 6369.5], [11.0, 6237.0], [3.0, 6247.0], [6.0, 6324.0], [7.0, 6295.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 11.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[1.0, 0.0], [2.0, 0.0], [4.0, 0.0], [8.0, 0.0], [9.0, 0.0], [5.0, 0.0], [10.0, 0.0], [11.0, 0.0], [3.0, 0.0], [6.0, 0.0], [7.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 11.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.6787876E12, "maxY": 5.3, "series": [{"data": [[1.67878784E12, 4.6], [1.67878818E12, 4.9], [1.67878852E12, 4.2], [1.67878775E12, 4.3], [1.67878886E12, 4.3], [1.67878809E12, 4.8], [1.67878843E12, 4.5], [1.67878877E12, 4.4], [1.67878766E12, 4.1], [1.678788E12, 4.8], [1.67878834E12, 5.0], [1.67878868E12, 4.6], [1.67878791E12, 4.5], [1.67878825E12, 4.8], [1.67878859E12, 4.8], [1.67878893E12, 1.3], [1.67878782E12, 5.0], [1.67878816E12, 4.8], [1.6787885E12, 4.5], [1.67878773E12, 4.3], [1.67878884E12, 4.6], [1.67878807E12, 4.9], [1.67878841E12, 4.8], [1.67878875E12, 4.7], [1.67878764E12, 3.3], [1.67878798E12, 4.5], [1.67878832E12, 5.0], [1.67878866E12, 4.5], [1.67878789E12, 5.0], [1.67878823E12, 4.5], [1.67878857E12, 5.1], [1.67878891E12, 2.8], [1.6787878E12, 5.1], [1.67878814E12, 4.7], [1.67878848E12, 4.9], [1.67878771E12, 4.4], [1.67878882E12, 4.3], [1.67878805E12, 4.8], [1.67878839E12, 4.7], [1.67878873E12, 4.6], [1.67878762E12, 2.2], [1.67878796E12, 4.4], [1.6787883E12, 4.6], [1.67878864E12, 4.7], [1.67878787E12, 4.9], [1.67878821E12, 4.5], [1.67878855E12, 4.8], [1.67878889E12, 3.4], [1.67878778E12, 4.7], [1.67878812E12, 4.6], [1.67878846E12, 5.2], [1.67878769E12, 4.7], [1.6787888E12, 5.0], [1.67878803E12, 4.8], [1.67878837E12, 4.1], [1.67878871E12, 4.6], [1.6787876E12, 0.6], [1.67878794E12, 4.4], [1.67878828E12, 4.3], [1.67878862E12, 4.7], [1.67878785E12, 4.8], [1.67878896E12, 0.2], [1.67878819E12, 4.3], [1.67878853E12, 5.0], [1.67878887E12, 3.9], [1.67878776E12, 4.9], [1.6787881E12, 4.8], [1.67878844E12, 4.8], [1.67878767E12, 4.0], [1.67878878E12, 4.8], [1.67878801E12, 4.4], [1.67878835E12, 4.2], [1.67878869E12, 4.7], [1.67878792E12, 5.0], [1.67878826E12, 4.3], [1.6787886E12, 4.5], [1.67878783E12, 4.7], [1.67878894E12, 1.0], [1.67878817E12, 4.3], [1.67878851E12, 4.9], [1.67878885E12, 4.1], [1.67878774E12, 5.2], [1.67878808E12, 4.6], [1.67878842E12, 4.8], [1.67878765E12, 3.1], [1.67878876E12, 4.6], [1.67878799E12, 4.7], [1.67878833E12, 4.2], [1.67878867E12, 4.7], [1.6787879E12, 4.9], [1.67878824E12, 4.7], [1.67878858E12, 4.3], [1.67878781E12, 4.4], [1.67878892E12, 2.1], [1.67878815E12, 4.9], [1.67878849E12, 4.6], [1.67878883E12, 4.3], [1.67878772E12, 5.2], [1.67878806E12, 4.7], [1.6787884E12, 4.6], [1.67878763E12, 2.7], [1.67878874E12, 4.8], [1.67878797E12, 5.1], [1.67878831E12, 4.6], [1.67878865E12, 4.7], [1.67878788E12, 4.4], [1.67878822E12, 5.3], [1.67878856E12, 4.7], [1.67878779E12, 4.5], [1.6787889E12, 2.9], [1.67878813E12, 4.9], [1.67878847E12, 4.5], [1.67878881E12, 4.6], [1.6787877E12, 4.8], [1.67878804E12, 4.5], [1.67878838E12, 5.1], [1.67878761E12, 1.5], [1.67878872E12, 4.8], [1.67878795E12, 5.3], [1.67878829E12, 5.2], [1.67878863E12, 4.5], [1.67878786E12, 4.3], [1.6787882E12, 4.7], [1.67878854E12, 4.4], [1.67878777E12, 4.9], [1.67878888E12, 3.6], [1.67878811E12, 4.5], [1.67878845E12, 4.5], [1.67878879E12, 4.3], [1.67878768E12, 4.4], [1.67878802E12, 4.9], [1.67878836E12, 5.3], [1.6787887E12, 4.9], [1.67878793E12, 4.7], [1.67878827E12, 5.0], [1.67878861E12, 4.5], [1.67878895E12, 0.6]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67878896E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.3, "minX": 1.6787876E12, "maxY": 5.3, "series": [{"data": [[1.67878784E12, 4.6], [1.67878818E12, 4.9], [1.67878852E12, 4.2], [1.67878775E12, 4.3], [1.67878886E12, 4.5], [1.67878809E12, 4.8], [1.67878843E12, 4.5], [1.67878877E12, 4.5], [1.67878766E12, 3.8], [1.678788E12, 4.8], [1.67878834E12, 5.0], [1.67878868E12, 4.6], [1.67878791E12, 4.5], [1.67878825E12, 4.8], [1.67878859E12, 4.8], [1.67878893E12, 1.6], [1.67878782E12, 5.0], [1.67878816E12, 4.8], [1.6787885E12, 4.5], [1.67878773E12, 4.3], [1.67878884E12, 4.6], [1.67878807E12, 4.9], [1.67878841E12, 4.8], [1.67878875E12, 4.7], [1.67878764E12, 3.0], [1.67878798E12, 4.5], [1.67878832E12, 5.0], [1.67878866E12, 4.5], [1.67878789E12, 5.0], [1.67878823E12, 4.5], [1.67878857E12, 5.1], [1.67878891E12, 3.2], [1.6787878E12, 5.1], [1.67878814E12, 4.7], [1.67878848E12, 4.9], [1.67878771E12, 4.2], [1.67878882E12, 4.3], [1.67878805E12, 4.8], [1.67878839E12, 4.7], [1.67878873E12, 4.6], [1.67878762E12, 1.9], [1.67878796E12, 4.4], [1.6787883E12, 4.6], [1.67878864E12, 4.7], [1.67878787E12, 4.9], [1.67878821E12, 4.5], [1.67878855E12, 4.8], [1.67878889E12, 3.9], [1.67878778E12, 4.6], [1.67878812E12, 4.6], [1.67878846E12, 5.2], [1.67878769E12, 4.5], [1.6787888E12, 5.0], [1.67878803E12, 4.8], [1.67878837E12, 4.1], [1.67878871E12, 4.6], [1.6787876E12, 0.3], [1.67878794E12, 4.4], [1.67878828E12, 4.3], [1.67878862E12, 4.7], [1.67878785E12, 4.8], [1.67878896E12, 0.4], [1.67878819E12, 4.3], [1.67878853E12, 5.0], [1.67878887E12, 4.1], [1.67878776E12, 4.9], [1.6787881E12, 4.8], [1.67878844E12, 4.8], [1.67878767E12, 3.8], [1.67878878E12, 4.8], [1.67878801E12, 4.4], [1.67878835E12, 4.2], [1.67878869E12, 4.7], [1.67878792E12, 5.0], [1.67878826E12, 4.3], [1.6787886E12, 4.5], [1.67878783E12, 4.7], [1.67878894E12, 1.1], [1.67878817E12, 4.3], [1.67878851E12, 4.9], [1.67878885E12, 4.3], [1.67878774E12, 5.2], [1.67878808E12, 4.6], [1.67878842E12, 4.8], [1.67878765E12, 2.9], [1.67878876E12, 4.6], [1.67878799E12, 4.7], [1.67878833E12, 4.2], [1.67878867E12, 4.7], [1.6787879E12, 4.9], [1.67878824E12, 4.7], [1.67878858E12, 4.3], [1.67878781E12, 4.4], [1.67878892E12, 2.2], [1.67878815E12, 4.9], [1.67878849E12, 4.6], [1.67878883E12, 4.6], [1.67878772E12, 5.2], [1.67878806E12, 4.7], [1.6787884E12, 4.6], [1.67878763E12, 2.5], [1.67878874E12, 4.8], [1.67878797E12, 5.1], [1.67878831E12, 4.6], [1.67878865E12, 4.7], [1.67878788E12, 4.4], [1.67878822E12, 5.3], [1.67878856E12, 4.7], [1.67878779E12, 4.6], [1.6787889E12, 2.9], [1.67878813E12, 4.9], [1.67878847E12, 4.5], [1.67878881E12, 4.7], [1.6787877E12, 4.5], [1.67878804E12, 4.5], [1.67878838E12, 5.1], [1.67878761E12, 1.3], [1.67878872E12, 4.8], [1.67878795E12, 5.3], [1.67878829E12, 5.2], [1.67878863E12, 4.5], [1.67878786E12, 4.3], [1.6787882E12, 4.7], [1.67878854E12, 4.4], [1.67878777E12, 4.9], [1.67878888E12, 3.8], [1.67878811E12, 4.5], [1.67878845E12, 4.5], [1.67878879E12, 4.3], [1.67878768E12, 4.1], [1.67878802E12, 4.9], [1.67878836E12, 5.3], [1.6787887E12, 4.9], [1.67878793E12, 4.7], [1.67878827E12, 5.0], [1.67878861E12, 4.5], [1.67878895E12, 0.7]], "isOverall": false, "label": "EMPTY_RES_CODE", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 10000, "maxX": 1.67878896E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.6787876E12, "maxY": 2.7, "series": [{"data": [[1.67878784E12, 2.1], [1.67878818E12, 2.4], [1.67878852E12, 2.2], [1.67878775E12, 2.1], [1.67878886E12, 2.3], [1.67878809E12, 2.4], [1.67878843E12, 2.3], [1.67878877E12, 2.2], [1.67878766E12, 1.9], [1.678788E12, 2.5], [1.67878834E12, 2.4], [1.67878868E12, 2.1], [1.67878791E12, 2.3], [1.67878825E12, 2.3], [1.67878859E12, 2.2], [1.67878893E12, 0.7], [1.67878782E12, 2.4], [1.67878816E12, 2.4], [1.6787885E12, 2.2], [1.67878773E12, 2.2], [1.67878884E12, 2.2], [1.67878807E12, 2.4], [1.67878841E12, 2.4], [1.67878875E12, 2.5], [1.67878764E12, 1.6], [1.67878798E12, 2.1], [1.67878832E12, 2.5], [1.67878866E12, 2.3], [1.67878789E12, 2.6], [1.67878823E12, 2.4], [1.67878857E12, 2.6], [1.67878891E12, 1.4], [1.6787878E12, 2.5], [1.67878814E12, 2.4], [1.67878848E12, 2.5], [1.67878771E12, 2.2], [1.67878882E12, 2.3], [1.67878805E12, 2.3], [1.67878839E12, 2.3], [1.67878873E12, 2.4], [1.67878762E12, 0.9], [1.67878796E12, 2.2], [1.6787883E12, 2.3], [1.67878864E12, 2.4], [1.67878787E12, 2.5], [1.67878821E12, 2.3], [1.67878855E12, 2.2], [1.67878889E12, 2.0], [1.67878778E12, 2.3], [1.67878812E12, 2.4], [1.67878846E12, 2.6], [1.67878769E12, 2.3], [1.6787888E12, 2.7], [1.67878803E12, 2.3], [1.67878837E12, 2.0], [1.67878871E12, 2.5], [1.6787876E12, 0.2], [1.67878794E12, 2.3], [1.67878828E12, 2.3], [1.67878862E12, 2.5], [1.67878785E12, 2.6], [1.67878896E12, 0.1], [1.67878819E12, 2.3], [1.67878853E12, 2.5], [1.67878887E12, 2.0], [1.67878776E12, 2.4], [1.6787881E12, 2.4], [1.67878844E12, 2.5], [1.67878767E12, 2.0], [1.67878878E12, 2.3], [1.67878801E12, 2.2], [1.67878835E12, 2.1], [1.67878869E12, 2.3], [1.67878792E12, 2.4], [1.67878826E12, 2.1], [1.6787886E12, 2.1], [1.67878783E12, 2.2], [1.67878894E12, 0.5], [1.67878817E12, 2.1], [1.67878851E12, 2.4], [1.67878885E12, 2.1], [1.67878774E12, 2.7], [1.67878808E12, 2.4], [1.67878842E12, 2.3], [1.67878765E12, 1.4], [1.67878876E12, 2.4], [1.67878799E12, 2.4], [1.67878833E12, 2.3], [1.67878867E12, 2.3], [1.6787879E12, 2.5], [1.67878824E12, 2.3], [1.67878858E12, 2.4], [1.67878781E12, 2.5], [1.67878892E12, 1.1], [1.67878815E12, 2.5], [1.67878849E12, 2.3], [1.67878883E12, 2.0], [1.67878772E12, 2.6], [1.67878806E12, 2.4], [1.6787884E12, 2.4], [1.67878763E12, 1.3], [1.67878874E12, 2.2], [1.67878797E12, 2.5], [1.67878831E12, 2.2], [1.67878865E12, 2.5], [1.67878788E12, 2.0], [1.67878822E12, 2.6], [1.67878856E12, 2.3], [1.67878779E12, 2.3], [1.6787889E12, 1.5], [1.67878813E12, 2.4], [1.67878847E12, 2.3], [1.67878881E12, 2.3], [1.6787877E12, 2.3], [1.67878804E12, 2.4], [1.67878838E12, 2.6], [1.67878761E12, 0.8], [1.67878872E12, 2.2], [1.67878795E12, 2.7], [1.67878829E12, 2.5], [1.67878863E12, 2.0], [1.67878786E12, 2.2], [1.6787882E12, 2.2], [1.67878854E12, 2.3], [1.67878777E12, 2.4], [1.67878888E12, 1.8], [1.67878811E12, 2.1], [1.67878845E12, 2.1], [1.67878879E12, 2.0], [1.67878768E12, 2.2], [1.67878802E12, 2.4], [1.67878836E12, 2.6], [1.6787887E12, 2.6], [1.67878793E12, 2.3], [1.67878827E12, 2.6], [1.67878861E12, 2.4], [1.67878895E12, 0.4]], "isOverall": false, "label": "RAMP-success", "isController": false}, {"data": [[1.67878784E12, 2.5], [1.67878818E12, 2.5], [1.67878852E12, 2.0], [1.67878775E12, 2.2], [1.67878886E12, 2.2], [1.67878809E12, 2.4], [1.67878843E12, 2.2], [1.67878877E12, 2.3], [1.67878766E12, 1.9], [1.678788E12, 2.3], [1.67878834E12, 2.6], [1.67878868E12, 2.5], [1.67878791E12, 2.2], [1.67878825E12, 2.5], [1.67878859E12, 2.6], [1.67878893E12, 0.9], [1.67878782E12, 2.6], [1.67878816E12, 2.4], [1.6787885E12, 2.3], [1.67878773E12, 2.1], [1.67878884E12, 2.4], [1.67878807E12, 2.5], [1.67878841E12, 2.4], [1.67878875E12, 2.2], [1.67878764E12, 1.4], [1.67878798E12, 2.4], [1.67878832E12, 2.5], [1.67878866E12, 2.2], [1.67878789E12, 2.4], [1.67878823E12, 2.1], [1.67878857E12, 2.5], [1.67878891E12, 1.8], [1.6787878E12, 2.6], [1.67878814E12, 2.3], [1.67878848E12, 2.4], [1.67878771E12, 2.0], [1.67878882E12, 2.0], [1.67878805E12, 2.5], [1.67878839E12, 2.4], [1.67878873E12, 2.2], [1.67878762E12, 1.0], [1.67878796E12, 2.2], [1.6787883E12, 2.3], [1.67878864E12, 2.3], [1.67878787E12, 2.4], [1.67878821E12, 2.2], [1.67878855E12, 2.6], [1.67878889E12, 1.9], [1.67878778E12, 2.3], [1.67878812E12, 2.2], [1.67878846E12, 2.6], [1.67878769E12, 2.2], [1.6787888E12, 2.3], [1.67878803E12, 2.5], [1.67878837E12, 2.1], [1.67878871E12, 2.1], [1.6787876E12, 0.1], [1.67878794E12, 2.1], [1.67878828E12, 2.0], [1.67878862E12, 2.2], [1.67878785E12, 2.2], [1.67878896E12, 0.3], [1.67878819E12, 2.0], [1.67878853E12, 2.5], [1.67878887E12, 2.1], [1.67878776E12, 2.5], [1.6787881E12, 2.4], [1.67878844E12, 2.3], [1.67878767E12, 1.8], [1.67878878E12, 2.5], [1.67878801E12, 2.2], [1.67878835E12, 2.1], [1.67878869E12, 2.4], [1.67878792E12, 2.6], [1.67878826E12, 2.2], [1.6787886E12, 2.4], [1.67878783E12, 2.5], [1.67878894E12, 0.6], [1.67878817E12, 2.2], [1.67878851E12, 2.5], [1.67878885E12, 2.2], [1.67878774E12, 2.5], [1.67878808E12, 2.2], [1.67878842E12, 2.5], [1.67878765E12, 1.5], [1.67878876E12, 2.2], [1.67878799E12, 2.3], [1.67878833E12, 1.9], [1.67878867E12, 2.4], [1.6787879E12, 2.4], [1.67878824E12, 2.4], [1.67878858E12, 1.9], [1.67878781E12, 1.9], [1.67878892E12, 1.1], [1.67878815E12, 2.4], [1.67878849E12, 2.3], [1.67878883E12, 2.6], [1.67878772E12, 2.6], [1.67878806E12, 2.3], [1.6787884E12, 2.2], [1.67878763E12, 1.2], [1.67878874E12, 2.6], [1.67878797E12, 2.6], [1.67878831E12, 2.4], [1.67878865E12, 2.2], [1.67878788E12, 2.4], [1.67878822E12, 2.7], [1.67878856E12, 2.4], [1.67878779E12, 2.3], [1.6787889E12, 1.4], [1.67878813E12, 2.5], [1.67878847E12, 2.2], [1.67878881E12, 2.4], [1.6787877E12, 2.2], [1.67878804E12, 2.1], [1.67878838E12, 2.5], [1.67878761E12, 0.5], [1.67878872E12, 2.6], [1.67878795E12, 2.6], [1.67878829E12, 2.7], [1.67878863E12, 2.5], [1.67878786E12, 2.1], [1.6787882E12, 2.5], [1.67878854E12, 2.1], [1.67878777E12, 2.5], [1.67878888E12, 2.0], [1.67878811E12, 2.4], [1.67878845E12, 2.4], [1.67878879E12, 2.3], [1.67878768E12, 1.9], [1.67878802E12, 2.5], [1.67878836E12, 2.7], [1.6787887E12, 2.3], [1.67878793E12, 2.4], [1.67878827E12, 2.4], [1.67878861E12, 2.1], [1.67878895E12, 0.3]], "isOverall": false, "label": "原生-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67878896E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.3, "minX": 1.6787876E12, "maxY": 5.3, "series": [{"data": [[1.67878784E12, 4.6], [1.67878818E12, 4.9], [1.67878852E12, 4.2], [1.67878775E12, 4.3], [1.67878886E12, 4.5], [1.67878809E12, 4.8], [1.67878843E12, 4.5], [1.67878877E12, 4.5], [1.67878766E12, 3.8], [1.678788E12, 4.8], [1.67878834E12, 5.0], [1.67878868E12, 4.6], [1.67878791E12, 4.5], [1.67878825E12, 4.8], [1.67878859E12, 4.8], [1.67878893E12, 1.6], [1.67878782E12, 5.0], [1.67878816E12, 4.8], [1.6787885E12, 4.5], [1.67878773E12, 4.3], [1.67878884E12, 4.6], [1.67878807E12, 4.9], [1.67878841E12, 4.8], [1.67878875E12, 4.7], [1.67878764E12, 3.0], [1.67878798E12, 4.5], [1.67878832E12, 5.0], [1.67878866E12, 4.5], [1.67878789E12, 5.0], [1.67878823E12, 4.5], [1.67878857E12, 5.1], [1.67878891E12, 3.2], [1.6787878E12, 5.1], [1.67878814E12, 4.7], [1.67878848E12, 4.9], [1.67878771E12, 4.2], [1.67878882E12, 4.3], [1.67878805E12, 4.8], [1.67878839E12, 4.7], [1.67878873E12, 4.6], [1.67878762E12, 1.9], [1.67878796E12, 4.4], [1.6787883E12, 4.6], [1.67878864E12, 4.7], [1.67878787E12, 4.9], [1.67878821E12, 4.5], [1.67878855E12, 4.8], [1.67878889E12, 3.9], [1.67878778E12, 4.6], [1.67878812E12, 4.6], [1.67878846E12, 5.2], [1.67878769E12, 4.5], [1.6787888E12, 5.0], [1.67878803E12, 4.8], [1.67878837E12, 4.1], [1.67878871E12, 4.6], [1.6787876E12, 0.3], [1.67878794E12, 4.4], [1.67878828E12, 4.3], [1.67878862E12, 4.7], [1.67878785E12, 4.8], [1.67878896E12, 0.4], [1.67878819E12, 4.3], [1.67878853E12, 5.0], [1.67878887E12, 4.1], [1.67878776E12, 4.9], [1.6787881E12, 4.8], [1.67878844E12, 4.8], [1.67878767E12, 3.8], [1.67878878E12, 4.8], [1.67878801E12, 4.4], [1.67878835E12, 4.2], [1.67878869E12, 4.7], [1.67878792E12, 5.0], [1.67878826E12, 4.3], [1.6787886E12, 4.5], [1.67878783E12, 4.7], [1.67878894E12, 1.1], [1.67878817E12, 4.3], [1.67878851E12, 4.9], [1.67878885E12, 4.3], [1.67878774E12, 5.2], [1.67878808E12, 4.6], [1.67878842E12, 4.8], [1.67878765E12, 2.9], [1.67878876E12, 4.6], [1.67878799E12, 4.7], [1.67878833E12, 4.2], [1.67878867E12, 4.7], [1.6787879E12, 4.9], [1.67878824E12, 4.7], [1.67878858E12, 4.3], [1.67878781E12, 4.4], [1.67878892E12, 2.2], [1.67878815E12, 4.9], [1.67878849E12, 4.6], [1.67878883E12, 4.6], [1.67878772E12, 5.2], [1.67878806E12, 4.7], [1.6787884E12, 4.6], [1.67878763E12, 2.5], [1.67878874E12, 4.8], [1.67878797E12, 5.1], [1.67878831E12, 4.6], [1.67878865E12, 4.7], [1.67878788E12, 4.4], [1.67878822E12, 5.3], [1.67878856E12, 4.7], [1.67878779E12, 4.6], [1.6787889E12, 2.9], [1.67878813E12, 4.9], [1.67878847E12, 4.5], [1.67878881E12, 4.7], [1.6787877E12, 4.5], [1.67878804E12, 4.5], [1.67878838E12, 5.1], [1.67878761E12, 1.3], [1.67878872E12, 4.8], [1.67878795E12, 5.3], [1.67878829E12, 5.2], [1.67878863E12, 4.5], [1.67878786E12, 4.3], [1.6787882E12, 4.7], [1.67878854E12, 4.4], [1.67878777E12, 4.9], [1.67878888E12, 3.8], [1.67878811E12, 4.5], [1.67878845E12, 4.5], [1.67878879E12, 4.3], [1.67878768E12, 4.1], [1.67878802E12, 4.9], [1.67878836E12, 5.3], [1.6787887E12, 4.9], [1.67878793E12, 4.7], [1.67878827E12, 5.0], [1.67878861E12, 4.5], [1.67878895E12, 0.7]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 10000, "maxX": 1.67878896E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

